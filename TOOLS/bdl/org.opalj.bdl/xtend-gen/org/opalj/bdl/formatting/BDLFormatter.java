/**
 * generated by Xtext
 */
package org.opalj.bdl.formatting;

import com.google.inject.Inject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.xbase.lib.Extension;
import org.opalj.bdl.services.BDLGrammarAccess;

/**
 * This class contains custom formatting declarations.
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#formatting
 * on how and when to use it.
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
@SuppressWarnings("all")
public class BDLFormatter extends AbstractDeclarativeFormatter {
  @Inject
  @Extension
  BDLGrammarAccess _bDLGrammarAccess;
  
  @Override
  protected void configureFormatting(final FormattingConfig c) {
    IGrammarAccess _grammarAccess = this.getGrammarAccess();
    BDLGrammarAccess gram = ((BDLGrammarAccess) _grammarAccess);
    FormattingConfig.LinewrapLocator _setLinewrap = c.setLinewrap(0, 1, 2);
    TerminalRule _sL_COMMENTRule = this._bDLGrammarAccess.getSL_COMMENTRule();
    _setLinewrap.before(_sL_COMMENTRule);
    FormattingConfig.LinewrapLocator _setLinewrap_1 = c.setLinewrap(0, 1, 2);
    TerminalRule _mL_COMMENTRule = this._bDLGrammarAccess.getML_COMMENTRule();
    _setLinewrap_1.before(_mL_COMMENTRule);
    FormattingConfig.LinewrapLocator _setLinewrap_2 = c.setLinewrap(0, 1, 1);
    TerminalRule _mL_COMMENTRule_1 = this._bDLGrammarAccess.getML_COMMENTRule();
    _setLinewrap_2.after(_mL_COMMENTRule_1);
    FormattingConfig.LinewrapLocator _setLinewrap_3 = c.setLinewrap(1, 1, 1);
    ParserRule _analysisElementRule = gram.getAnalysisElementRule();
    _setLinewrap_3.after(_analysisElementRule);
    FormattingConfig.LinewrapLocator _setLinewrap_4 = c.setLinewrap(1, 1, 1);
    ParserRule _parametersElementRule = gram.getParametersElementRule();
    _setLinewrap_4.after(_parametersElementRule);
    FormattingConfig.LinewrapLocator _setLinewrap_5 = c.setLinewrap(1, 1, 1);
    ParserRule _parameterElementRule = gram.getParameterElementRule();
    _setLinewrap_5.after(_parameterElementRule);
    FormattingConfig.IndentationLocatorStart _setIndentationIncrement = c.setIndentationIncrement();
    ParserRule _parameterElementRule_1 = gram.getParameterElementRule();
    _setIndentationIncrement.before(_parameterElementRule_1);
    FormattingConfig.IndentationLocatorEnd _setIndentationDecrement = c.setIndentationDecrement();
    ParserRule _parameterElementRule_2 = gram.getParameterElementRule();
    _setIndentationDecrement.after(_parameterElementRule_2);
    FormattingConfig.LinewrapLocator _setLinewrap_6 = c.setLinewrap(1, 1, 1);
    ParserRule _issuesTitleElementRule = gram.getIssuesTitleElementRule();
    _setLinewrap_6.after(_issuesTitleElementRule);
    FormattingConfig.LinewrapLocator _setLinewrap_7 = c.setLinewrap(1, 1, 1);
    ParserRule _issueElementRule = gram.getIssueElementRule();
    _setLinewrap_7.around(_issueElementRule);
    FormattingConfig.IndentationLocatorStart _setIndentationIncrement_1 = c.setIndentationIncrement();
    ParserRule _issueCategoryElementRule = gram.getIssueCategoryElementRule();
    _setIndentationIncrement_1.before(_issueCategoryElementRule);
    FormattingConfig.LinewrapLocator _setLinewrap_8 = c.setLinewrap(1, 1, 1);
    ParserRule _issueCategoryElementRule_1 = gram.getIssueCategoryElementRule();
    _setLinewrap_8.before(_issueCategoryElementRule_1);
    FormattingConfig.LinewrapLocator _setLinewrap_9 = c.setLinewrap(1, 1, 1);
    ParserRule _issueKindElementRule = gram.getIssueKindElementRule();
    _setLinewrap_9.before(_issueKindElementRule);
    FormattingConfig.LinewrapLocator _setLinewrap_10 = c.setLinewrap(1, 1, 1);
    ParserRule _issueRelevanceElementRule = gram.getIssueRelevanceElementRule();
    _setLinewrap_10.before(_issueRelevanceElementRule);
    FormattingConfig.LinewrapLocator _setLinewrap_11 = c.setLinewrap(1, 1, 1);
    ParserRule _issuePackageElementRule = gram.getIssuePackageElementRule();
    _setLinewrap_11.before(_issuePackageElementRule);
    FormattingConfig.LinewrapLocator _setLinewrap_12 = c.setLinewrap(1, 1, 1);
    ParserRule _issueClassElementRule = gram.getIssueClassElementRule();
    _setLinewrap_12.around(_issueClassElementRule);
    FormattingConfig.IndentationLocatorEnd _setIndentationDecrement_1 = c.setIndentationDecrement();
    ParserRule _issueClassElementRule_1 = gram.getIssueClassElementRule();
    _setIndentationDecrement_1.after(_issueClassElementRule_1);
  }
}
