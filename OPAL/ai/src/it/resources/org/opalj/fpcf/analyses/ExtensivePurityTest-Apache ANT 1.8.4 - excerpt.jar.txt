DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils$1),<init>,MethodDescriptor((long): void),org.apache.tools.ant.util.ResourceUtils$1{ void <init>(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils$1),access$000,MethodDescriptor((org.apache.tools.ant.util.ResourceUtils$1): long),org.apache.tools.ant.util.ResourceUtils$1{ static long access$000(org.apache.tools.ant.util.ResourceUtils$1) }) => DPure
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils$1),getTargetSelectorForSource,MethodDescriptor((org.apache.tools.ant.types.Resource): org.apache.tools.ant.types.resources.selectors.ResourceSelector),org.apache.tools.ant.util.ResourceUtils$1{ public org.apache.tools.ant.types.resources.selectors.ResourceSelector getTargetSelectorForSource(org.apache.tools.ant.types.Resource) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils$2),<init>,MethodDescriptor((org.apache.tools.ant.util.ResourceUtils$1, org.apache.tools.ant.types.Resource): void),org.apache.tools.ant.util.ResourceUtils$2{ void <init>(org.apache.tools.ant.util.ResourceUtils$1,org.apache.tools.ant.types.Resource) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils$2),isSelected,MethodDescriptor((org.apache.tools.ant.types.Resource): boolean),org.apache.tools.ant.util.ResourceUtils$2{ public boolean isSelected(org.apache.tools.ant.types.Resource) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),<clinit>,MethodDescriptor((): void),org.apache.tools.ant.util.ResourceUtils{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),<init>,MethodDescriptor((): void),org.apache.tools.ant.util.ResourceUtils{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),asFileResource,MethodDescriptor((org.apache.tools.ant.types.resources.FileProvider): org.apache.tools.ant.types.resources.FileResource),org.apache.tools.ant.util.ResourceUtils{ public static org.apache.tools.ant.types.resources.FileResource asFileResource(org.apache.tools.ant.types.resources.FileProvider) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),binaryCompare,MethodDescriptor((org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.Resource): int),org.apache.tools.ant.util.ResourceUtils{ private static int binaryCompare(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),class$,MethodDescriptor((java.lang.String): java.lang.Class),org.apache.tools.ant.util.ResourceUtils{ static java.lang.Class class$(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),compareContent,MethodDescriptor((org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.Resource, boolean): int),org.apache.tools.ant.util.ResourceUtils{ public static int compareContent(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),contentEquals,MethodDescriptor((org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.Resource, boolean): boolean),org.apache.tools.ant.util.ResourceUtils{ public static boolean contentEquals(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),copyResource,MethodDescriptor((org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.Resource): void),org.apache.tools.ant.util.ResourceUtils{ public static void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),copyResource,MethodDescriptor((org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.Resource, org.apache.tools.ant.Project): void),org.apache.tools.ant.util.ResourceUtils{ public static void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.Project) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),copyResource,MethodDescriptor((org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.FilterSetCollection, java.util.Vector, boolean, boolean, boolean, java.lang.String, java.lang.String, org.apache.tools.ant.Project): void),org.apache.tools.ant.util.ResourceUtils{ public static void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),copyResource,MethodDescriptor((org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.FilterSetCollection, java.util.Vector, boolean, boolean, boolean, java.lang.String, java.lang.String, org.apache.tools.ant.Project, boolean): void),org.apache.tools.ant.util.ResourceUtils{ public static void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),copyResource,MethodDescriptor((org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.FilterSetCollection, java.util.Vector, boolean, boolean, java.lang.String, java.lang.String, org.apache.tools.ant.Project): void),org.apache.tools.ant.util.ResourceUtils{ public static void copyResource(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.FilterSetCollection,java.util.Vector,boolean,boolean,java.lang.String,java.lang.String,org.apache.tools.ant.Project) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),getOutputStream,MethodDescriptor((org.apache.tools.ant.types.Resource, boolean, org.apache.tools.ant.Project): java.io.OutputStream),org.apache.tools.ant.util.ResourceUtils{ private static java.io.OutputStream getOutputStream(org.apache.tools.ant.types.Resource,boolean,org.apache.tools.ant.Project) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),logFuture,MethodDescriptor((org.apache.tools.ant.ProjectComponent, org.apache.tools.ant.types.ResourceCollection, long): void),org.apache.tools.ant.util.ResourceUtils{ private static void logFuture(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.ResourceCollection,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),selectOutOfDateSources,MethodDescriptor((org.apache.tools.ant.ProjectComponent, org.apache.tools.ant.types.ResourceCollection, org.apache.tools.ant.util.FileNameMapper, org.apache.tools.ant.types.ResourceFactory, long): org.apache.tools.ant.types.ResourceCollection),org.apache.tools.ant.util.ResourceUtils{ public static org.apache.tools.ant.types.ResourceCollection selectOutOfDateSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),selectOutOfDateSources,MethodDescriptor((org.apache.tools.ant.ProjectComponent, org.apache.tools.ant.types.Resource[], org.apache.tools.ant.util.FileNameMapper, org.apache.tools.ant.types.ResourceFactory): org.apache.tools.ant.types.Resource[]),org.apache.tools.ant.util.ResourceUtils{ public static org.apache.tools.ant.types.Resource[] selectOutOfDateSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.Resource[],org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),selectOutOfDateSources,MethodDescriptor((org.apache.tools.ant.ProjectComponent, org.apache.tools.ant.types.Resource[], org.apache.tools.ant.util.FileNameMapper, org.apache.tools.ant.types.ResourceFactory, long): org.apache.tools.ant.types.Resource[]),org.apache.tools.ant.util.ResourceUtils{ public static org.apache.tools.ant.types.Resource[] selectOutOfDateSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.Resource[],org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),selectSources,MethodDescriptor((org.apache.tools.ant.ProjectComponent, org.apache.tools.ant.types.ResourceCollection, org.apache.tools.ant.util.FileNameMapper, org.apache.tools.ant.types.ResourceFactory, org.apache.tools.ant.util.ResourceUtils$ResourceSelectorProvider): org.apache.tools.ant.types.ResourceCollection),org.apache.tools.ant.util.ResourceUtils{ public static org.apache.tools.ant.types.ResourceCollection selectSources(org.apache.tools.ant.ProjectComponent,org.apache.tools.ant.types.ResourceCollection,org.apache.tools.ant.util.FileNameMapper,org.apache.tools.ant.types.ResourceFactory,org.apache.tools.ant.util.ResourceUtils$ResourceSelectorProvider) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),setLastModified,MethodDescriptor((org.apache.tools.ant.types.resources.Touchable, long): void),org.apache.tools.ant.util.ResourceUtils{ public static void setLastModified(org.apache.tools.ant.types.resources.Touchable,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/tools/ant/util/ResourceUtils),textCompare,MethodDescriptor((org.apache.tools.ant.types.Resource, org.apache.tools.ant.types.Resource): int),org.apache.tools.ant.util.ResourceUtils{ private static int textCompare(org.apache.tools.ant.types.Resource,org.apache.tools.ant.types.Resource) }) => ImpureByAnalysis
