DefinedMethod(ObjectType(jsr_ret/Demo),<clinit>,MethodDescriptor((): void),jsr_ret.Demo{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(jsr_ret/Demo),<init>,MethodDescriptor((): void),jsr_ret.Demo{ public void <init>() }) => Pure
DefinedMethod(ObjectType(jsr_ret/Demo),check,MethodDescriptor((int): void),jsr_ret.Demo{ private static void check(int) }) => DPure
DefinedMethod(ObjectType(jsr_ret/Demo),complexCodeWithNewLocalVarsAfterFinally,MethodDescriptor((int, int, long): long),jsr_ret.Demo{ static long complexCodeWithNewLocalVarsAfterFinally(int,int,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(jsr_ret/Demo),doIt,MethodDescriptor((): void),jsr_ret.Demo{ private static void doIt() }) => ImpureByAnalysis
DefinedMethod(ObjectType(jsr_ret/Demo),finallyAndCatchGame,MethodDescriptor((java.lang.Object): int),jsr_ret.Demo{ public static int finallyAndCatchGame(java.lang.Object) }) => DSideEffectFree
DefinedMethod(ObjectType(jsr_ret/Demo),finallyGame,MethodDescriptor((java.lang.Object): int),jsr_ret.Demo{ public int finallyGame(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(jsr_ret/Demo),get,MethodDescriptor((): java.lang.Object),jsr_ret.Demo{ private static java.lang.Object get() }) => Pure
DefinedMethod(ObjectType(jsr_ret/Demo),implicitAndExplicitTryCatchFinall,MethodDescriptor((int): int[]),jsr_ret.Demo{ public static int[] implicitAndExplicitTryCatchFinall(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(jsr_ret/Demo),log,MethodDescriptor((java.lang.Throwable): void),jsr_ret.Demo{ private static void log(java.lang.Throwable) }) => DPure
DefinedMethod(ObjectType(jsr_ret/Demo),m1,MethodDescriptor((int): int),jsr_ret.Demo{ public static int m1(int) }) => DSideEffectFree
DefinedMethod(ObjectType(jsr_ret/Demo),m2,MethodDescriptor((int): int),jsr_ret.Demo{ public static int m2(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(jsr_ret/Demo),m3,MethodDescriptor((int): int),jsr_ret.Demo{ public static int m3(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(jsr_ret/Demo),m4,MethodDescriptor((int): int),jsr_ret.Demo{ public static int m4(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(jsr_ret/Demo),m5,MethodDescriptor((int): int),jsr_ret.Demo{ public static int m5(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(jsr_ret/Demo),m6,MethodDescriptor((int): int),jsr_ret.Demo{ public static int m6(int) }) => DSideEffectFree
DefinedMethod(ObjectType(jsr_ret/Demo),tryCatchFinallyInInfiniteLoop,MethodDescriptor((java.lang.Object): int),jsr_ret.Demo{ public static int tryCatchFinallyInInfiniteLoop(java.lang.Object) }) => DPure
