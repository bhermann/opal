DefinedMethod(ObjectType(annotations/target/CallGraphAlgorithm),<clinit>,MethodDescriptor((): void),annotations.target.CallGraphAlgorithm{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(annotations/target/CallGraphAlgorithm),<init>,MethodDescriptor((java.lang.String, int): void),annotations.target.CallGraphAlgorithm{ private void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(annotations/target/CallGraphAlgorithm),valueOf,MethodDescriptor((java.lang.String): annotations.target.CallGraphAlgorithm),annotations.target.CallGraphAlgorithm{ public static annotations.target.CallGraphAlgorithm valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(annotations/target/CallGraphAlgorithm),values,MethodDescriptor((): annotations.target.CallGraphAlgorithm[]),annotations.target.CallGraphAlgorithm{ public static annotations.target.CallGraphAlgorithm[] values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(annotations/target/TargetResolution),<clinit>,MethodDescriptor((): void),annotations.target.TargetResolution{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(annotations/target/TargetResolution),<init>,MethodDescriptor((java.lang.String, int): void),annotations.target.TargetResolution{ private void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(annotations/target/TargetResolution),valueOf,MethodDescriptor((java.lang.String): annotations.target.TargetResolution),annotations.target.TargetResolution{ public static annotations.target.TargetResolution valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(annotations/target/TargetResolution),values,MethodDescriptor((): annotations.target.TargetResolution[]),annotations.target.TargetResolution{ public static annotations.target.TargetResolution[] values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/EitherOrPredicate),<init>,MethodDescriptor((java.util.function.Predicate, java.util.function.Predicate): void),lambdas.EitherOrPredicate{ public void <init>(java.util.function.Predicate,java.util.function.Predicate) }) => Pure
DefinedMethod(ObjectType(lambdas/EitherOrPredicate),lambda$0,MethodDescriptor((java.lang.String): boolean),lambdas.EitherOrPredicate{ static boolean lambda$0(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/EitherOrPredicate),main,MethodDescriptor((java.lang.String[]): void),lambdas.EitherOrPredicate{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/EitherOrPredicate),test,MethodDescriptor((java.lang.Object): boolean),lambdas.EitherOrPredicate{ public boolean test(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/HigherOrder),<init>,MethodDescriptor((): void),lambdas.HigherOrder{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/HigherOrder),higherOrderPredicate,MethodDescriptor((): void),lambdas.HigherOrder{ public void higherOrderPredicate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/HigherOrder),lambda$0,MethodDescriptor((java.util.function.Predicate): boolean),lambdas.HigherOrder{ static boolean lambda$0(java.util.function.Predicate) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/HigherOrder),lambda$1,MethodDescriptor((java.lang.String): boolean),lambdas.HigherOrder{ static boolean lambda$1(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/HigherOrder),lambda$2,MethodDescriptor((java.lang.String): boolean),lambdas.HigherOrder{ static boolean lambda$2(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/HigherOrder),lambda$3,MethodDescriptor((java.lang.Character): boolean),lambdas.HigherOrder{ static boolean lambda$3(java.lang.Character) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/HigherOrder),nestedPredicate,MethodDescriptor((): void),lambdas.HigherOrder{ public void nestedPredicate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/InstanceCapturing),$forward$lambda$0,MethodDescriptor((): void),lambdas.InstanceCapturing{ void $forward$lambda$0() }) => Pure
DefinedMethod(ObjectType(lambdas/InstanceCapturing),$forward$lambda$1,MethodDescriptor((): void),lambdas.InstanceCapturing{ void $forward$lambda$1() }) => Pure
DefinedMethod(ObjectType(lambdas/InstanceCapturing),$forward$lambda$2,MethodDescriptor((): void),lambdas.InstanceCapturing{ void $forward$lambda$2() }) => Pure
DefinedMethod(ObjectType(lambdas/InstanceCapturing),<init>,MethodDescriptor((): void),lambdas.InstanceCapturing{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/InstanceCapturing),captureArray,MethodDescriptor((): void),lambdas.InstanceCapturing{ public void captureArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/InstanceCapturing),captureObject,MethodDescriptor((): void),lambdas.InstanceCapturing{ public void captureObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/InstanceCapturing),capturePrimitive,MethodDescriptor((): void),lambdas.InstanceCapturing{ public void capturePrimitive() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/InstanceCapturing),lambda$0,MethodDescriptor((): void),lambdas.InstanceCapturing{ private void lambda$0() }) => DSideEffectFree
DefinedMethod(ObjectType(lambdas/InstanceCapturing),lambda$1,MethodDescriptor((): void),lambdas.InstanceCapturing{ private void lambda$1() }) => DSideEffectFree
DefinedMethod(ObjectType(lambdas/InstanceCapturing),lambda$2,MethodDescriptor((): void),lambdas.InstanceCapturing{ private void lambda$2() }) => DSideEffectFree
DefinedMethod(ObjectType(lambdas/InvokeDynamics),<init>,MethodDescriptor((): void),lambdas.InvokeDynamics{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/InvokeDynamics),lambda$0,MethodDescriptor((int, int): java.lang.Integer),lambdas.InvokeDynamics{ static java.lang.Integer lambda$0(int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/InvokeDynamics),main,MethodDescriptor((java.lang.String[]): void),lambdas.InvokeDynamics{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/InvokeDynamics),simpleLambdaAdd,MethodDescriptor((int, int): int),lambdas.InvokeDynamics{ public int simpleLambdaAdd(int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),$forward$lambda$2,MethodDescriptor((): void),lambdas.Lambdas{ void $forward$lambda$2() }) => Pure
DefinedMethod(ObjectType(lambdas/Lambdas),$forward$lambda$3,MethodDescriptor((int): void),lambdas.Lambdas{ void $forward$lambda$3(int) }) => Pure
DefinedMethod(ObjectType(lambdas/Lambdas),<init>,MethodDescriptor((): void),lambdas.Lambdas{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/Lambdas),complexBodyWithReturns,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ public java.lang.Integer complexBodyWithReturns() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),doubleDoubleParamter,MethodDescriptor((): java.lang.Double),lambdas.Lambdas{ public java.lang.Double doubleDoubleParamter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),doubleFloatParamter,MethodDescriptor((): java.lang.Double),lambdas.Lambdas{ public java.lang.Double doubleFloatParamter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),doubleFloatParamter2,MethodDescriptor((): double),lambdas.Lambdas{ public double doubleFloatParamter2() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),doubleIntParamter,MethodDescriptor((): java.lang.Double),lambdas.Lambdas{ public java.lang.Double doubleIntParamter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),instanceClosure,MethodDescriptor((): void),lambdas.Lambdas{ public void instanceClosure() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),intDoubleParamter,MethodDescriptor((): java.lang.Double),lambdas.Lambdas{ public java.lang.Double intDoubleParamter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),intLongParamter,MethodDescriptor((): java.lang.Long),lambdas.Lambdas{ public java.lang.Long intLongParamter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$0,MethodDescriptor((): void),lambdas.Lambdas{ static void lambda$0() }) => DPure
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$1,MethodDescriptor((int): void),lambdas.Lambdas{ static void lambda$1(int) }) => DPure
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$10,MethodDescriptor((java.lang.Integer): java.lang.Integer),lambdas.Lambdas{ static java.lang.Integer lambda$10(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$11,MethodDescriptor((java.lang.Integer): java.lang.Integer),lambdas.Lambdas{ static java.lang.Integer lambda$11(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$12,MethodDescriptor((java.lang.Integer): java.lang.Integer),lambdas.Lambdas{ static java.lang.Integer lambda$12(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$13,MethodDescriptor((java.lang.Integer): java.lang.Integer),lambdas.Lambdas{ static java.lang.Integer lambda$13(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$14,MethodDescriptor((java.lang.Integer): java.lang.Integer),lambdas.Lambdas{ static java.lang.Integer lambda$14(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$15,MethodDescriptor((java.lang.Integer, java.lang.Integer): java.lang.Integer),lambdas.Lambdas{ static java.lang.Integer lambda$15(java.lang.Integer,java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$16,MethodDescriptor((java.lang.Integer, java.lang.Integer): java.lang.Integer),lambdas.Lambdas{ static java.lang.Integer lambda$16(java.lang.Integer,java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$17,MethodDescriptor((java.lang.Double): java.lang.Double),lambdas.Lambdas{ static java.lang.Double lambda$17(java.lang.Double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$18,MethodDescriptor((java.lang.Double, java.lang.Double): java.lang.Double),lambdas.Lambdas{ static java.lang.Double lambda$18(java.lang.Double,java.lang.Double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$19,MethodDescriptor((java.lang.Double, java.lang.Integer): java.lang.Double),lambdas.Lambdas{ static java.lang.Double lambda$19(java.lang.Double,java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$2,MethodDescriptor((): void),lambdas.Lambdas{ private void lambda$2() }) => DSideEffectFree
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$20,MethodDescriptor((java.lang.Integer, java.lang.Double): java.lang.Double),lambdas.Lambdas{ static java.lang.Double lambda$20(java.lang.Integer,java.lang.Double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$21,MethodDescriptor((java.lang.Double, java.lang.Float): java.lang.Double),lambdas.Lambdas{ static java.lang.Double lambda$21(java.lang.Double,java.lang.Float) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$22,MethodDescriptor((double, float): double),lambdas.Lambdas{ static double lambda$22(double,float) }) => Pure
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$23,MethodDescriptor((java.lang.Long): java.lang.Long),lambdas.Lambdas{ static java.lang.Long lambda$23(java.lang.Long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$24,MethodDescriptor((java.lang.Long, java.lang.Long): java.lang.Long),lambdas.Lambdas{ static java.lang.Long lambda$24(java.lang.Long,java.lang.Long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$25,MethodDescriptor((java.lang.Long, java.lang.Integer): java.lang.Long),lambdas.Lambdas{ static java.lang.Long lambda$25(java.lang.Long,java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$26,MethodDescriptor((java.lang.Integer, java.lang.Long): java.lang.Long),lambdas.Lambdas{ static java.lang.Long lambda$26(java.lang.Integer,java.lang.Long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$27,MethodDescriptor((java.lang.Long, java.lang.Float): java.lang.Float),lambdas.Lambdas{ static java.lang.Float lambda$27(java.lang.Long,java.lang.Float) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$28,MethodDescriptor((java.lang.Long, java.lang.Double): java.lang.Double),lambdas.Lambdas{ static java.lang.Double lambda$28(java.lang.Long,java.lang.Double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$29,MethodDescriptor((java.util.ArrayList, java.util.HashMap, java.util.HashMap): void),lambdas.Lambdas{ static void lambda$29(java.util.ArrayList,java.util.HashMap,java.util.HashMap) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$3,MethodDescriptor((int): void),lambdas.Lambdas{ private void lambda$3(int) }) => DSideEffectFree
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$4,MethodDescriptor((): void),lambdas.Lambdas{ static void lambda$4() }) => Pure
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$5,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ static java.lang.Integer lambda$5() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$6,MethodDescriptor((): java.lang.Object),lambdas.Lambdas{ static java.lang.Object lambda$6() }) => Pure
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$7,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ static java.lang.Integer lambda$7() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$8,MethodDescriptor((): void),lambdas.Lambdas{ static void lambda$8() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),lambda$9,MethodDescriptor((boolean): java.lang.Integer),lambdas.Lambdas{ static java.lang.Integer lambda$9(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),localAndInstanceClosure,MethodDescriptor((): void),lambdas.Lambdas{ public void localAndInstanceClosure() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),localClosure,MethodDescriptor((): void),lambdas.Lambdas{ public void localClosure() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),longDoubleParamter,MethodDescriptor((): java.lang.Double),lambdas.Lambdas{ public java.lang.Double longDoubleParamter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),longFloatParamter,MethodDescriptor((): java.lang.Float),lambdas.Lambdas{ public java.lang.Float longFloatParamter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),longIntParamter,MethodDescriptor((): java.lang.Long),lambdas.Lambdas{ public java.lang.Long longIntParamter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),longLongParamter,MethodDescriptor((): java.lang.Long),lambdas.Lambdas{ public java.lang.Long longLongParamter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),multipleParametersDeclared,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ public java.lang.Integer multipleParametersDeclared() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),multipleParametersInferred,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ public java.lang.Integer multipleParametersInferred() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),noParametersBlockWithReturn,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ public java.lang.Integer noParametersBlockWithReturn() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),noParametersExpressionBody1,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ public java.lang.Integer noParametersExpressionBody1() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),noParametersExpressionBody2,MethodDescriptor((): java.lang.Object),lambdas.Lambdas{ public java.lang.Object noParametersExpressionBody2() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),noParametersVoidBlockBody,MethodDescriptor((): void),lambdas.Lambdas{ public void noParametersVoidBlockBody() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),noParametersVoidResult,MethodDescriptor((): void),lambdas.Lambdas{ public void noParametersVoidResult() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),plainLambda,MethodDescriptor((): void),lambdas.Lambdas{ public void plainLambda() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),singleDoubleParamter,MethodDescriptor((): java.lang.Double),lambdas.Lambdas{ public java.lang.Double singleDoubleParamter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),singleLongParamter,MethodDescriptor((): java.lang.Long),lambdas.Lambdas{ public java.lang.Long singleLongParamter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),singleParameterBlockBody,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ public java.lang.Integer singleParameterBlockBody() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),singleParameterBlockBodyInferredTypeParameter,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ public java.lang.Integer singleParameterBlockBodyInferredTypeParameter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),singleParameterExpressionBody,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ public java.lang.Integer singleParameterExpressionBody() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),singleParameterExpressionBodyInferredTypeParameter,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ public java.lang.Integer singleParameterExpressionBodyInferredTypeParameter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),singleParameterExpressionBodyInferredTypeParameterWithoutParentheses,MethodDescriptor((): java.lang.Integer),lambdas.Lambdas{ public java.lang.Integer singleParameterExpressionBodyInferredTypeParameterWithoutParentheses() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/Lambdas),someBiConsumer,MethodDescriptor((): java.util.ArrayList),lambdas.Lambdas{ public java.util.ArrayList someBiConsumer() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/LocalCapturing),<init>,MethodDescriptor((): void),lambdas.LocalCapturing{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/LocalCapturing),captureArray,MethodDescriptor((): void),lambdas.LocalCapturing{ public void captureArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/LocalCapturing),captureObject,MethodDescriptor((): void),lambdas.LocalCapturing{ public void captureObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/LocalCapturing),capturePrimitive,MethodDescriptor((): void),lambdas.LocalCapturing{ public void capturePrimitive() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/LocalCapturing),lambda$0,MethodDescriptor((int): void),lambdas.LocalCapturing{ static void lambda$0(int) }) => DPure
DefinedMethod(ObjectType(lambdas/LocalCapturing),lambda$1,MethodDescriptor((java.lang.String): void),lambdas.LocalCapturing{ static void lambda$1(java.lang.String) }) => DPure
DefinedMethod(ObjectType(lambdas/LocalCapturing),lambda$2,MethodDescriptor((int[]): void),lambdas.LocalCapturing{ static void lambda$2(int[]) }) => DSideEffectFree
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),<init>,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambda$0,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ static void lambda$0() }) => DPure
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambda$1,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ static void lambda$1() }) => DPure
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambda$2,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ static void lambda$2() }) => DPure
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambda$3,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ static void lambda$3() }) => DPure
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambda$4,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ static void lambda$4() }) => DPure
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambda$5,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ static void lambda$5() }) => DPure
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambda$6,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ static void lambda$6() }) => DPure
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambda$7,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ static void lambda$7() }) => DPure
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambda$8,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ static void lambda$8() }) => DPure
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambdaEquals,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ public void lambdaEquals() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambdaGetClass,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ public void lambdaGetClass() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambdaHashCode,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ public void lambdaHashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambdaNotify,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ public void lambdaNotify() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambdaNotifyAll,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ public void lambdaNotifyAll() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambdaToString,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ public void lambdaToString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambdaWait,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ public void lambdaWait() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambdaWaitLong,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ public void lambdaWaitLong() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/ObjectMethodsOnFunctionalInterfaces),lambdaWaitLongInt,MethodDescriptor((): void),lambdas.ObjectMethodsOnFunctionalInterfaces{ public void lambdaWaitLongInt() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PartiallyMatchingPredicate),<init>,MethodDescriptor((double, java.util.function.Predicate[]): void),lambdas.PartiallyMatchingPredicate{ public void <init>(double,java.util.function.Predicate[]) }) => Pure
DefinedMethod(ObjectType(lambdas/PartiallyMatchingPredicate),getScore,MethodDescriptor((java.lang.Object): double),lambdas.PartiallyMatchingPredicate{ public double getScore(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PartiallyMatchingPredicate),lambda$0,MethodDescriptor((java.lang.String): boolean),lambdas.PartiallyMatchingPredicate{ static boolean lambda$0(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PartiallyMatchingPredicate),lambda$1,MethodDescriptor((java.lang.String): boolean),lambdas.PartiallyMatchingPredicate{ static boolean lambda$1(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PartiallyMatchingPredicate),main,MethodDescriptor((java.lang.String[]): void),lambdas.PartiallyMatchingPredicate{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PartiallyMatchingPredicate),test,MethodDescriptor((java.lang.Object): boolean),lambdas.PartiallyMatchingPredicate{ public boolean test(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInACollection),$forward$isNegative,MethodDescriptor((java.lang.Integer): boolean),lambdas.PredicatesInACollection{ static boolean $forward$isNegative(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInACollection),<clinit>,MethodDescriptor((): void),lambdas.PredicatesInACollection{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInACollection),<init>,MethodDescriptor((): void),lambdas.PredicatesInACollection{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/PredicatesInACollection),classCollection,MethodDescriptor((): void),lambdas.PredicatesInACollection{ private static void classCollection() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInACollection),isNegative,MethodDescriptor((java.lang.Integer): boolean),lambdas.PredicatesInACollection{ private static boolean isNegative(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInACollection),lambda$0,MethodDescriptor((java.lang.Integer): boolean),lambdas.PredicatesInACollection{ static boolean lambda$0(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInACollection),lambda$1,MethodDescriptor((java.lang.Integer): boolean),lambdas.PredicatesInACollection{ static boolean lambda$1(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInACollection),localCollection,MethodDescriptor((): void),lambdas.PredicatesInACollection{ private static void localCollection() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInACollection),main,MethodDescriptor((java.lang.String[]): void),lambdas.PredicatesInACollection{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInACollection),paramCollection,MethodDescriptor((java.util.List): void),lambdas.PredicatesInACollection{ private static void paramCollection(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInAnArray),$forward$isNegative,MethodDescriptor((java.lang.Integer): boolean),lambdas.PredicatesInAnArray{ static boolean $forward$isNegative(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInAnArray),<clinit>,MethodDescriptor((): void),lambdas.PredicatesInAnArray{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInAnArray),<init>,MethodDescriptor((): void),lambdas.PredicatesInAnArray{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/PredicatesInAnArray),classArray,MethodDescriptor((): void),lambdas.PredicatesInAnArray{ private static void classArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInAnArray),isNegative,MethodDescriptor((java.lang.Integer): boolean),lambdas.PredicatesInAnArray{ private static boolean isNegative(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInAnArray),lambda$0,MethodDescriptor((java.lang.Integer): boolean),lambdas.PredicatesInAnArray{ static boolean lambda$0(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInAnArray),lambda$1,MethodDescriptor((java.lang.Integer): boolean),lambdas.PredicatesInAnArray{ static boolean lambda$1(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInAnArray),localArray,MethodDescriptor((): void),lambdas.PredicatesInAnArray{ private static void localArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInAnArray),main,MethodDescriptor((java.lang.String[]): void),lambdas.PredicatesInAnArray{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/PredicatesInAnArray),paramArray,MethodDescriptor((java.util.function.Predicate[]): void),lambdas.PredicatesInAnArray{ private static void paramArray(java.util.function.Predicate[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/DefaultMethod$IDefaultMethod),foo,MethodDescriptor((): boolean),lambdas.methodreferences.DefaultMethod$IDefaultMethod{ public boolean foo() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/DefaultMethod),<init>,MethodDescriptor((): void),lambdas.methodreferences.DefaultMethod{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/DefaultMethod),defaultMethodInterface,MethodDescriptor((lambdas.methodreferences.DefaultMethod$IDefaultMethod): boolean),lambdas.methodreferences.DefaultMethod{ public static boolean defaultMethodInterface(lambdas.methodreferences.DefaultMethod$IDefaultMethod) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/DefaultMethod),interfaceReference,MethodDescriptor((java.util.Enumeration): boolean),lambdas.methodreferences.DefaultMethod{ public static boolean interfaceReference(java.util.Enumeration) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),<init>,MethodDescriptor((): void),lambdas.methodreferences.IntersectionTypes{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),createMarkerInterface,MethodDescriptor((): java.lang.Runnable),lambdas.methodreferences.IntersectionTypes{ public java.lang.Runnable createMarkerInterface() }) => SideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),doSerialization,MethodDescriptor((java.lang.Object): java.lang.String),lambdas.methodreferences.IntersectionTypes{ private static java.lang.String doSerialization(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambda$0,MethodDescriptor((): void),lambdas.methodreferences.IntersectionTypes{ static void lambda$0() }) => DPure
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambda$1,MethodDescriptor((float, java.lang.String, java.lang.Integer): java.lang.String),lambdas.methodreferences.IntersectionTypes{ static java.lang.String lambda$1(float,java.lang.String,java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambda$2,MethodDescriptor((java.lang.Float, java.lang.String, java.lang.Integer): java.lang.String),lambdas.methodreferences.IntersectionTypes{ static java.lang.String lambda$2(java.lang.Float,java.lang.String,java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambda$3,MethodDescriptor((float, java.lang.String, java.lang.Integer): java.lang.String),lambdas.methodreferences.IntersectionTypes{ static java.lang.String lambda$3(float,java.lang.String,java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambda$4,MethodDescriptor((java.lang.Float[], java.lang.Integer): java.lang.String),lambdas.methodreferences.IntersectionTypes{ static java.lang.String lambda$4(java.lang.Float[],java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambda$5,MethodDescriptor((float[], java.lang.Integer): java.lang.String),lambdas.methodreferences.IntersectionTypes{ static java.lang.String lambda$5(float[],java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambda$6,MethodDescriptor((float[], java.lang.String, java.lang.Integer): java.lang.String),lambdas.methodreferences.IntersectionTypes{ static java.lang.String lambda$6(float[],java.lang.String,java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambdaWithObjectAndPrimitiveCaptures,MethodDescriptor((): java.lang.String),lambdas.methodreferences.IntersectionTypes{ public static java.lang.String lambdaWithObjectAndPrimitiveCaptures() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambdaWithObjectArray,MethodDescriptor((): java.lang.String),lambdas.methodreferences.IntersectionTypes{ public static java.lang.String lambdaWithObjectArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambdaWithObjectCaptures,MethodDescriptor((): java.lang.String),lambdas.methodreferences.IntersectionTypes{ public static java.lang.String lambdaWithObjectCaptures() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambdaWithPrimitiveArray,MethodDescriptor((): java.lang.String),lambdas.methodreferences.IntersectionTypes{ public static java.lang.String lambdaWithPrimitiveArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),lambdaWithPrimitiveArrayAndObject,MethodDescriptor((): java.lang.String),lambdas.methodreferences.IntersectionTypes{ public static java.lang.String lambdaWithPrimitiveArrayAndObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),main,MethodDescriptor((java.lang.String[]): void),lambdas.methodreferences.IntersectionTypes{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),processIt,MethodDescriptor((java.lang.Object): void),lambdas.methodreferences.IntersectionTypes{ private static void processIt(java.lang.Object) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/IntersectionTypes),t,MethodDescriptor((): void),lambdas.methodreferences.IntersectionTypes{ public static void t() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Subclass),$forward$interestingMethod,MethodDescriptor((): java.lang.String),lambdas.methodreferences.InvokeSpecial$Superclass{ java.lang.String $forward$interestingMethod() }) => SideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Subclass),<init>,MethodDescriptor((): void),lambdas.methodreferences.InvokeSpecial$Subclass{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Subclass),access$0,MethodDescriptor((lambdas.methodreferences.InvokeSpecial$Subclass): java.lang.String),lambdas.methodreferences.InvokeSpecial$Subclass{ static java.lang.String access$0(lambdas.methodreferences.InvokeSpecial$Subclass) }) => DSideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Subclass),callSomeMethod,MethodDescriptor((): java.lang.String),lambdas.methodreferences.InvokeSpecial$Subclass{ public java.lang.String callSomeMethod() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Subclass),exampleMethodTest,MethodDescriptor((): void),lambdas.methodreferences.InvokeSpecial$Superclass{ public void exampleMethodTest() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Subclass),interestingMethod,MethodDescriptor((): java.lang.String),lambdas.methodreferences.InvokeSpecial$Subclass{ java.lang.String interestingMethod() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Subclass),someMethod,MethodDescriptor((): java.lang.String),lambdas.methodreferences.InvokeSpecial$Superclass{ protected java.lang.String someMethod() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Superclass),$forward$interestingMethod,MethodDescriptor((): java.lang.String),lambdas.methodreferences.InvokeSpecial$Superclass{ java.lang.String $forward$interestingMethod() }) => SideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Superclass),<init>,MethodDescriptor((): void),lambdas.methodreferences.InvokeSpecial$Superclass{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Superclass),exampleMethodTest,MethodDescriptor((): void),lambdas.methodreferences.InvokeSpecial$Superclass{ public void exampleMethodTest() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Superclass),interestingMethod,MethodDescriptor((): java.lang.String),lambdas.methodreferences.InvokeSpecial$Superclass{ private java.lang.String interestingMethod() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial$Superclass),someMethod,MethodDescriptor((): java.lang.String),lambdas.methodreferences.InvokeSpecial$Superclass{ protected java.lang.String someMethod() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial),<init>,MethodDescriptor((): void),lambdas.methodreferences.InvokeSpecial{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/InvokeSpecial),staticInheritanceWithParameter,MethodDescriptor((): void),lambdas.methodreferences.InvokeSpecial{ public static void staticInheritanceWithParameter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedDoubleParamters),<init>,MethodDescriptor((): void),lambdas.methodreferences.MethodReferencePrimitives$MixedDoubleParamters{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedDoubleParamters),sum,MethodDescriptor((double, double): double),lambdas.methodreferences.MethodReferencePrimitives$MixedDoubleParamters{ public static double sum(double,double) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedDoubleParamters),sum,MethodDescriptor((double, float): double),lambdas.methodreferences.MethodReferencePrimitives$MixedDoubleParamters{ public static double sum(double,float) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedDoubleParamters),sum,MethodDescriptor((float, double): double),lambdas.methodreferences.MethodReferencePrimitives$MixedDoubleParamters{ public static double sum(float,double) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedDoubleParamters),sum,MethodDescriptor((float, double, float): double),lambdas.methodreferences.MethodReferencePrimitives$MixedDoubleParamters{ public static double sum(float,double,float) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedDoubleParamters),sum,MethodDescriptor((float, float): float),lambdas.methodreferences.MethodReferencePrimitives$MixedDoubleParamters{ public static float sum(float,float) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedDoubleParamters),sum,MethodDescriptor((int, double): double),lambdas.methodreferences.MethodReferencePrimitives$MixedDoubleParamters{ public static double sum(int,double) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedDoubleParamters),sum,MethodDescriptor((long, double): double),lambdas.methodreferences.MethodReferencePrimitives$MixedDoubleParamters{ public static double sum(long,double) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedLongParamters),<init>,MethodDescriptor((): void),lambdas.methodreferences.MethodReferencePrimitives$MixedLongParamters{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedLongParamters),sum,MethodDescriptor((double, long): double),lambdas.methodreferences.MethodReferencePrimitives$MixedLongParamters{ public static double sum(double,long) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedLongParamters),sum,MethodDescriptor((int, int): long),lambdas.methodreferences.MethodReferencePrimitives$MixedLongParamters{ public static long sum(int,int) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedLongParamters),sum,MethodDescriptor((int, long, long): long),lambdas.methodreferences.MethodReferencePrimitives$MixedLongParamters{ public static long sum(int,long,long) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedLongParamters),sum,MethodDescriptor((long, int): long),lambdas.methodreferences.MethodReferencePrimitives$MixedLongParamters{ public static long sum(long,int) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives$MixedLongParamters),sum,MethodDescriptor((long, long): long),lambdas.methodreferences.MethodReferencePrimitives$MixedLongParamters{ public static long sum(long,long) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),<init>,MethodDescriptor((): void),lambdas.methodreferences.MethodReferencePrimitives{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumDoubleDouble,MethodDescriptor((): double),lambdas.methodreferences.MethodReferencePrimitives{ public double sumDoubleDouble() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumDoubleFloat,MethodDescriptor((): double),lambdas.methodreferences.MethodReferencePrimitives{ public double sumDoubleFloat() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumDoubleInt,MethodDescriptor((): double),lambdas.methodreferences.MethodReferencePrimitives{ public double sumDoubleInt() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumDoubleLong,MethodDescriptor((): double),lambdas.methodreferences.MethodReferencePrimitives{ public double sumDoubleLong() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumFloatDouble,MethodDescriptor((): double),lambdas.methodreferences.MethodReferencePrimitives{ public double sumFloatDouble() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumFloatDoubleFloat,MethodDescriptor((): double),lambdas.methodreferences.MethodReferencePrimitives{ public double sumFloatDoubleFloat() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumFloatFloat,MethodDescriptor((): float),lambdas.methodreferences.MethodReferencePrimitives{ public float sumFloatFloat() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumIntInt,MethodDescriptor((): long),lambdas.methodreferences.MethodReferencePrimitives{ public long sumIntInt() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumIntLongLong,MethodDescriptor((): long),lambdas.methodreferences.MethodReferencePrimitives{ public long sumIntLongLong() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumLongDouble,MethodDescriptor((): double),lambdas.methodreferences.MethodReferencePrimitives{ public double sumLongDouble() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumLongInt,MethodDescriptor((): long),lambdas.methodreferences.MethodReferencePrimitives{ public long sumLongInt() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferencePrimitives),sumLongLong,MethodDescriptor((): long),lambdas.methodreferences.MethodReferencePrimitives{ public long sumLongLong() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Child),<init>,MethodDescriptor((): void),lambdas.methodreferences.MethodReferences$Child{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Child),access$0,MethodDescriptor((lambdas.methodreferences.MethodReferences$Child): java.lang.String),lambdas.methodreferences.MethodReferences$Child{ static java.lang.String access$0(lambdas.methodreferences.MethodReferences$Child) }) => DSideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Child),compare,MethodDescriptor((lambdas.methodreferences.MethodReferences$Value, lambdas.methodreferences.MethodReferences$Value): int),lambdas.methodreferences.MethodReferences$Child{ public static int compare(lambdas.methodreferences.MethodReferences$Value,lambdas.methodreferences.MethodReferences$Value) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Child),getSuperToString,MethodDescriptor((): java.util.function.Supplier),lambdas.methodreferences.MethodReferences$Child{ public java.util.function.Supplier getSuperToString() }) => SideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Child),toString,MethodDescriptor((): java.lang.String),lambdas.methodreferences.MethodReferences$Child{ public java.lang.String toString() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$GenericClass),<init>,MethodDescriptor((java.lang.Object): void),lambdas.methodreferences.MethodReferences$GenericClass{ void <init>(java.lang.Object) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$GenericConstructor),<init>,MethodDescriptor((java.lang.Object): void),lambdas.methodreferences.MethodReferences$GenericConstructor{ void <init>(java.lang.Object) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Outer$Inner),<init>,MethodDescriptor((): void),lambdas.methodreferences.MethodReferences$Outer$Inner{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Outer),<init>,MethodDescriptor((): void),lambdas.methodreferences.MethodReferences$Outer{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Parent),<init>,MethodDescriptor((): void),lambdas.methodreferences.MethodReferences$Parent{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Parent),toString,MethodDescriptor((): java.lang.String),lambdas.methodreferences.MethodReferences$Parent{ public java.lang.String toString() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$SomeInterface),$forward$lambda$0,MethodDescriptor((): void),lambdas.methodreferences.MethodReferences$SomeInterface{ public void $forward$lambda$0() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$SomeInterface),StaticFoo,MethodDescriptor((): java.lang.Runnable),lambdas.methodreferences.MethodReferences$SomeInterface{ public static java.lang.Runnable StaticFoo() }) => SideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$SomeInterface),StaticGetSomeInt,MethodDescriptor((): int),lambdas.methodreferences.MethodReferences$SomeInterface{ public static int StaticGetSomeInt() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$SomeInterface),foo,MethodDescriptor((): java.lang.Runnable),lambdas.methodreferences.MethodReferences$SomeInterface{ public java.lang.Runnable foo() }) => SideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$SomeInterface),getSomeInt,MethodDescriptor((): int),lambdas.methodreferences.MethodReferences$SomeInterface{ public int getSomeInt() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$SomeInterface),lambda$0,MethodDescriptor((): void),lambdas.methodreferences.MethodReferences$SomeInterface{ private void lambda$0() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$SomeInterface),lambda$1,MethodDescriptor((): void),lambdas.methodreferences.MethodReferences$SomeInterface{ public static void lambda$1() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Value),<init>,MethodDescriptor((java.lang.String): void),lambdas.methodreferences.MethodReferences$Value{ public void <init>(java.lang.String) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Value),access$0,MethodDescriptor((lambdas.methodreferences.MethodReferences$Value): java.lang.String),lambdas.methodreferences.MethodReferences$Value{ static java.lang.String access$0(lambdas.methodreferences.MethodReferences$Value) }) => DSideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Value),compare,MethodDescriptor((lambdas.methodreferences.MethodReferences$Value, lambdas.methodreferences.MethodReferences$Value): int),lambdas.methodreferences.MethodReferences$Value{ public static int compare(lambdas.methodreferences.MethodReferences$Value,lambdas.methodreferences.MethodReferences$Value) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences$Value),isEmpty,MethodDescriptor((): boolean),lambdas.methodreferences.MethodReferences$Value{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),<init>,MethodDescriptor((): void),lambdas.methodreferences.MethodReferences{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),arrayInstanceMethod,MethodDescriptor((): java.lang.String),lambdas.methodreferences.MethodReferences{ public java.lang.String arrayInstanceMethod() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),arrayMethod,MethodDescriptor((): int),lambdas.methodreferences.MethodReferences{ public int arrayMethod() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),arrayNew,MethodDescriptor((): int[]),lambdas.methodreferences.MethodReferences{ public int[] arrayNew() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),compareValues,MethodDescriptor((): void),lambdas.methodreferences.MethodReferences{ public void compareValues() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),explicitTypeArgs,MethodDescriptor((): int),lambdas.methodreferences.MethodReferences{ public int explicitTypeArgs() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),filterOutEmptyValues,MethodDescriptor((): void),lambdas.methodreferences.MethodReferences{ public void filterOutEmptyValues() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),genericClass,MethodDescriptor((): lambdas.methodreferences.MethodReferences$GenericClass),lambdas.methodreferences.MethodReferences{ public lambdas.methodreferences.MethodReferences$GenericClass genericClass() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),genericConstructor,MethodDescriptor((): lambdas.methodreferences.MethodReferences$GenericConstructor),lambdas.methodreferences.MethodReferences{ public lambdas.methodreferences.MethodReferences$GenericConstructor genericConstructor() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),inferredConstructor,MethodDescriptor((): java.util.ArrayList),lambdas.methodreferences.MethodReferences{ public java.util.ArrayList inferredConstructor() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),inferredTypeArgs,MethodDescriptor((): int),lambdas.methodreferences.MethodReferences{ public int inferredTypeArgs() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),instanceMethod,MethodDescriptor((): int),lambdas.methodreferences.MethodReferences{ public int instanceMethod() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),intArrayArrayClone,MethodDescriptor((): int[][]),lambdas.methodreferences.MethodReferences{ public int[][] intArrayArrayClone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),intArrayClone,MethodDescriptor((): int[]),lambdas.methodreferences.MethodReferences{ public int[] intArrayClone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),lambda$0,MethodDescriptor((int[]): int[]),lambdas.methodreferences.MethodReferences{ static int[] lambda$0(int[]) }) => DSideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),lambda$1,MethodDescriptor((int[][]): int[][]),lambdas.methodreferences.MethodReferences{ static int[][] lambda$1(int[][]) }) => DSideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),lambda$2,MethodDescriptor((int[]): java.util.List),lambdas.methodreferences.MethodReferences{ static java.util.List lambda$2(int[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),lambda$3,MethodDescriptor((int): int[]),lambdas.methodreferences.MethodReferences{ static int[] lambda$3(int) }) => DPure
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),nestedClass,MethodDescriptor((): lambdas.methodreferences.MethodReferences$Outer$Inner),lambdas.methodreferences.MethodReferences{ public lambdas.methodreferences.MethodReferences$Outer$Inner nestedClass() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),newValue,MethodDescriptor((java.lang.String): lambdas.methodreferences.MethodReferences$Value),lambdas.methodreferences.MethodReferences{ public lambdas.methodreferences.MethodReferences$Value newValue(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),objectMethod,MethodDescriptor((): boolean),lambdas.methodreferences.MethodReferences{ public boolean objectMethod() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),overloadResolution,MethodDescriptor((): java.lang.String),lambdas.methodreferences.MethodReferences{ public java.lang.String overloadResolution() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),parameterizedConstructor,MethodDescriptor((): java.util.ArrayList),lambdas.methodreferences.MethodReferences{ public java.util.ArrayList parameterizedConstructor() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),partialBound,MethodDescriptor((java.util.List): void),lambdas.methodreferences.MethodReferences{ public void partialBound(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),referenceLength,MethodDescriptor((): int),lambdas.methodreferences.MethodReferences{ public int referenceLength() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),referencePrintln,MethodDescriptor((): void),lambdas.methodreferences.MethodReferences{ public void referencePrintln() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),staticMethod,MethodDescriptor((): long),lambdas.methodreferences.MethodReferences{ public long staticMethod() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),superToString,MethodDescriptor((): java.lang.String),lambdas.methodreferences.MethodReferences{ public java.lang.String superToString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),ternaryIterator,MethodDescriptor((boolean): java.util.Iterator),lambdas.methodreferences.MethodReferences{ public java.util.Iterator ternaryIterator(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),typeArgsExplicit,MethodDescriptor((): int[]),lambdas.methodreferences.MethodReferences{ public int[] typeArgsExplicit() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/MethodReferences),typeArgsFromContext,MethodDescriptor((): int[]),lambdas.methodreferences.MethodReferences{ public int[] typeArgsFromContext() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/ReceiverInheritance),<init>,MethodDescriptor((): void),lambdas.methodreferences.ReceiverInheritance{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/ReceiverInheritance),callBiConsumer,MethodDescriptor((java.lang.Object): java.util.LinkedHashSet),lambdas.methodreferences.ReceiverInheritance{ public static java.util.LinkedHashSet callBiConsumer(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/ReceiverInheritance),instanceBiConsumer,MethodDescriptor((java.lang.Object): void),lambdas.methodreferences.ReceiverInheritance{ public static void instanceBiConsumer(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/ReceiverInheritance),instanceBiFunction,MethodDescriptor((java.lang.Object): boolean),lambdas.methodreferences.ReceiverInheritance{ public static boolean instanceBiFunction(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/ReceiverInheritance),someBiConsumerParameter,MethodDescriptor((java.util.function.Supplier, java.util.function.BiConsumer, java.util.function.BiConsumer, java.lang.Object): java.lang.Object),lambdas.methodreferences.ReceiverInheritance{ public static java.lang.Object someBiConsumerParameter(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink$OfInt),accept,MethodDescriptor((double): void),lambdas.methodreferences.SinkTest$Sink{ public void accept(double) }) => DPure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink$OfInt),accept,MethodDescriptor((java.lang.Integer): void),lambdas.methodreferences.SinkTest$Sink$OfInt{ public void accept(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink$OfInt),accept,MethodDescriptor((java.lang.Object): void),lambdas.methodreferences.SinkTest$Sink$OfInt{ public void accept(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink$OfInt),accept,MethodDescriptor((long): void),lambdas.methodreferences.SinkTest$Sink{ public void accept(long) }) => DPure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink$OfInt),begin,MethodDescriptor((long): void),lambdas.methodreferences.SinkTest$Sink{ public void begin(long) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink$OfInt),cancellationRequested,MethodDescriptor((): boolean),lambdas.methodreferences.SinkTest$Sink{ public boolean cancellationRequested() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink$OfInt),end,MethodDescriptor((): void),lambdas.methodreferences.SinkTest$Sink{ public void end() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink),accept,MethodDescriptor((double): void),lambdas.methodreferences.SinkTest$Sink{ public void accept(double) }) => DPure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink),accept,MethodDescriptor((int): void),lambdas.methodreferences.SinkTest$Sink{ public void accept(int) }) => DPure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink),accept,MethodDescriptor((long): void),lambdas.methodreferences.SinkTest$Sink{ public void accept(long) }) => DPure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink),begin,MethodDescriptor((long): void),lambdas.methodreferences.SinkTest$Sink{ public void begin(long) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink),cancellationRequested,MethodDescriptor((): boolean),lambdas.methodreferences.SinkTest$Sink{ public boolean cancellationRequested() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$Sink),end,MethodDescriptor((): void),lambdas.methodreferences.SinkTest$Sink{ public void end() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$SinkOfInt),<init>,MethodDescriptor((): void),lambdas.methodreferences.SinkTest$SinkOfInt{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$SinkOfInt),accept,MethodDescriptor((double): void),lambdas.methodreferences.SinkTest$Sink{ public void accept(double) }) => DPure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$SinkOfInt),accept,MethodDescriptor((int): void),lambdas.methodreferences.SinkTest$SinkOfInt{ public void accept(int) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$SinkOfInt),accept,MethodDescriptor((java.lang.Integer): void),lambdas.methodreferences.SinkTest$Sink$OfInt{ public void accept(java.lang.Integer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$SinkOfInt),accept,MethodDescriptor((java.lang.Object): void),lambdas.methodreferences.SinkTest$SinkOfInt{ public void accept(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$SinkOfInt),accept,MethodDescriptor((long): void),lambdas.methodreferences.SinkTest$Sink{ public void accept(long) }) => DPure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$SinkOfInt),begin,MethodDescriptor((long): void),lambdas.methodreferences.SinkTest$Sink{ public void begin(long) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$SinkOfInt),cancellationRequested,MethodDescriptor((): boolean),lambdas.methodreferences.SinkTest$Sink{ public boolean cancellationRequested() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest$SinkOfInt),end,MethodDescriptor((): void),lambdas.methodreferences.SinkTest$Sink{ public void end() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest),<init>,MethodDescriptor((): void),lambdas.methodreferences.SinkTest{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/SinkTest),downstreamTest,MethodDescriptor((): void),lambdas.methodreferences.SinkTest{ public static void downstreamTest() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/StaticInheritance$A),<init>,MethodDescriptor((): void),lambdas.methodreferences.StaticInheritance$A{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/StaticInheritance$A),bar,MethodDescriptor((java.lang.String): void),lambdas.methodreferences.StaticInheritance$A{ public static void bar(java.lang.String) }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/StaticInheritance$A),foo,MethodDescriptor((): java.lang.String),lambdas.methodreferences.StaticInheritance$A{ public static java.lang.String foo() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/StaticInheritance$B),<init>,MethodDescriptor((): void),lambdas.methodreferences.StaticInheritance$B{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/StaticInheritance),<init>,MethodDescriptor((): void),lambdas.methodreferences.StaticInheritance{ public void <init>() }) => Pure
DefinedMethod(ObjectType(lambdas/methodreferences/StaticInheritance),makeComparator,MethodDescriptor((): java.util.Comparator),lambdas.methodreferences.StaticInheritance{ public java.util.Comparator makeComparator() }) => SideEffectFree
DefinedMethod(ObjectType(lambdas/methodreferences/StaticInheritance),staticInheritanceTest,MethodDescriptor((): java.lang.String),lambdas.methodreferences.StaticInheritance{ public static java.lang.String staticInheritanceTest() }) => ImpureByAnalysis
DefinedMethod(ObjectType(lambdas/methodreferences/StaticInheritance),staticInheritanceWithParameter,MethodDescriptor((): void),lambdas.methodreferences.StaticInheritance{ public static void staticInheritanceWithParameter() }) => ImpureByAnalysis
