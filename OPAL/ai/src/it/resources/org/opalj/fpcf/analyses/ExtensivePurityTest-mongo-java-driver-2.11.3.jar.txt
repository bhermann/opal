DefinedMethod(ObjectType(com/mongodb/AggregationOutput),<init>,MethodDescriptor((com.mongodb.DBObject, com.mongodb.CommandResult): void),com.mongodb.AggregationOutput{ public void <init>(com.mongodb.DBObject,com.mongodb.CommandResult) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/AggregationOutput),getCommand,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.AggregationOutput{ public com.mongodb.DBObject getCommand() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/AggregationOutput),getCommandResult,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.AggregationOutput{ public com.mongodb.CommandResult getCommandResult() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/AggregationOutput),getServerUsed,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.AggregationOutput{ public com.mongodb.ServerAddress getServerUsed() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/AggregationOutput),results,MethodDescriptor((): java.lang.Iterable),com.mongodb.AggregationOutput{ public java.lang.Iterable results() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/AggregationOutput),toString,MethodDescriptor((): java.lang.String),com.mongodb.AggregationOutput{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),<init>,MethodDescriptor((): void),com.mongodb.BasicDBList{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),_getInt,MethodDescriptor((java.lang.String): int),org.bson.types.BasicBSONList{ int _getInt(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),_getInt,MethodDescriptor((java.lang.String, boolean): int),org.bson.types.BasicBSONList{ int _getInt(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),containsField,MethodDescriptor((java.lang.String): boolean),org.bson.types.BasicBSONList{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),containsKey,MethodDescriptor((java.lang.String): boolean),org.bson.types.BasicBSONList{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),copy,MethodDescriptor((): java.lang.Object),com.mongodb.BasicDBList{ public java.lang.Object copy() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),get,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.types.BasicBSONList{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),isPartialObject,MethodDescriptor((): boolean),com.mongodb.BasicDBList{ public boolean isPartialObject() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/BasicDBList),keySet,MethodDescriptor((): java.util.Set),org.bson.types.BasicBSONList{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),markAsPartialObject,MethodDescriptor((): void),com.mongodb.BasicDBList{ public void markAsPartialObject() }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/BasicDBList),put,MethodDescriptor((int, java.lang.Object): java.lang.Object),org.bson.types.BasicBSONList{ public java.lang.Object put(int,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),org.bson.types.BasicBSONList{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),putAll,MethodDescriptor((java.util.Map): void),org.bson.types.BasicBSONList{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),putAll,MethodDescriptor((org.bson.BSONObject): void),org.bson.types.BasicBSONList{ public void putAll(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),removeField,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.types.BasicBSONList{ public java.lang.Object removeField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),toMap,MethodDescriptor((): java.util.Map),org.bson.types.BasicBSONList{ public java.util.Map toMap() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBList),toString,MethodDescriptor((): java.lang.String),com.mongodb.BasicDBList{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),<init>,MethodDescriptor((): void),com.mongodb.BasicDBObject{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),<init>,MethodDescriptor((int): void),com.mongodb.BasicDBObject{ public void <init>(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),<init>,MethodDescriptor((java.lang.String, java.lang.Object): void),com.mongodb.BasicDBObject{ public void <init>(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),<init>,MethodDescriptor((java.util.Map): void),com.mongodb.BasicDBObject{ public void <init>(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),append,MethodDescriptor((java.lang.String, java.lang.Object): com.mongodb.BasicDBObject),com.mongodb.BasicDBObject{ public com.mongodb.BasicDBObject append(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),append,MethodDescriptor((java.lang.String, java.lang.Object): org.bson.BasicBSONObject),com.mongodb.BasicDBObject{ public org.bson.BasicBSONObject append(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),containsField,MethodDescriptor((java.lang.String): boolean),org.bson.BasicBSONObject{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),containsKey,MethodDescriptor((java.lang.String): boolean),org.bson.BasicBSONObject{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),copy,MethodDescriptor((): java.lang.Object),com.mongodb.BasicDBObject{ public java.lang.Object copy() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.BasicBSONObject{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),get,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getBoolean,MethodDescriptor((java.lang.String): boolean),org.bson.BasicBSONObject{ public boolean getBoolean(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getBoolean,MethodDescriptor((java.lang.String, boolean): boolean),org.bson.BasicBSONObject{ public boolean getBoolean(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getDate,MethodDescriptor((java.lang.String): java.util.Date),org.bson.BasicBSONObject{ public java.util.Date getDate(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getDate,MethodDescriptor((java.lang.String, java.util.Date): java.util.Date),org.bson.BasicBSONObject{ public java.util.Date getDate(java.lang.String,java.util.Date) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getDouble,MethodDescriptor((java.lang.String): double),org.bson.BasicBSONObject{ public double getDouble(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getDouble,MethodDescriptor((java.lang.String, double): double),org.bson.BasicBSONObject{ public double getDouble(java.lang.String,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getInt,MethodDescriptor((java.lang.String): int),org.bson.BasicBSONObject{ public int getInt(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getInt,MethodDescriptor((java.lang.String, int): int),org.bson.BasicBSONObject{ public int getInt(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getLong,MethodDescriptor((java.lang.String): long),org.bson.BasicBSONObject{ public long getLong(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getLong,MethodDescriptor((java.lang.String, long): long),org.bson.BasicBSONObject{ public long getLong(java.lang.String,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getObjectId,MethodDescriptor((java.lang.String): org.bson.types.ObjectId),org.bson.BasicBSONObject{ public org.bson.types.ObjectId getObjectId(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): org.bson.types.ObjectId),org.bson.BasicBSONObject{ public org.bson.types.ObjectId getObjectId(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getString,MethodDescriptor((java.lang.String): java.lang.String),org.bson.BasicBSONObject{ public java.lang.String getString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),getString,MethodDescriptor((java.lang.String, java.lang.String): java.lang.String),org.bson.BasicBSONObject{ public java.lang.String getString(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),isPartialObject,MethodDescriptor((): boolean),com.mongodb.BasicDBObject{ public boolean isPartialObject() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),markAsPartialObject,MethodDescriptor((): void),com.mongodb.BasicDBObject{ public void markAsPartialObject() }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),put,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object put(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),putAll,MethodDescriptor((java.util.Map): void),org.bson.BasicBSONObject{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),putAll,MethodDescriptor((org.bson.BSONObject): void),org.bson.BasicBSONObject{ public void putAll(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),removeField,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object removeField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),toMap,MethodDescriptor((): java.util.Map),org.bson.BasicBSONObject{ public java.util.Map toMap() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObject),toString,MethodDescriptor((): java.lang.String),com.mongodb.BasicDBObject{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObjectBuilder),<init>,MethodDescriptor((): void),com.mongodb.BasicDBObjectBuilder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObjectBuilder),_cur,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.BasicDBObjectBuilder{ private com.mongodb.DBObject _cur() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObjectBuilder),add,MethodDescriptor((java.lang.String, java.lang.Object): com.mongodb.BasicDBObjectBuilder),com.mongodb.BasicDBObjectBuilder{ public com.mongodb.BasicDBObjectBuilder add(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObjectBuilder),append,MethodDescriptor((java.lang.String, java.lang.Object): com.mongodb.BasicDBObjectBuilder),com.mongodb.BasicDBObjectBuilder{ public com.mongodb.BasicDBObjectBuilder append(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObjectBuilder),get,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.BasicDBObjectBuilder{ public com.mongodb.DBObject get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObjectBuilder),isEmpty,MethodDescriptor((): boolean),com.mongodb.BasicDBObjectBuilder{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObjectBuilder),pop,MethodDescriptor((): com.mongodb.BasicDBObjectBuilder),com.mongodb.BasicDBObjectBuilder{ public com.mongodb.BasicDBObjectBuilder pop() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObjectBuilder),push,MethodDescriptor((java.lang.String): com.mongodb.BasicDBObjectBuilder),com.mongodb.BasicDBObjectBuilder{ public com.mongodb.BasicDBObjectBuilder push(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObjectBuilder),start,MethodDescriptor((): com.mongodb.BasicDBObjectBuilder),com.mongodb.BasicDBObjectBuilder{ public static com.mongodb.BasicDBObjectBuilder start() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObjectBuilder),start,MethodDescriptor((java.lang.String, java.lang.Object): com.mongodb.BasicDBObjectBuilder),com.mongodb.BasicDBObjectBuilder{ public static com.mongodb.BasicDBObjectBuilder start(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/BasicDBObjectBuilder),start,MethodDescriptor((java.util.Map): com.mongodb.BasicDBObjectBuilder),com.mongodb.BasicDBObjectBuilder{ public static com.mongodb.BasicDBObjectBuilder start(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Bytes$OptionHolder),<init>,MethodDescriptor((com.mongodb.Bytes$OptionHolder): void),com.mongodb.Bytes$OptionHolder{ void <init>(com.mongodb.Bytes$OptionHolder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Bytes$OptionHolder),add,MethodDescriptor((int): void),com.mongodb.Bytes$OptionHolder{ void add(int) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/Bytes$OptionHolder),get,MethodDescriptor((): int),com.mongodb.Bytes$OptionHolder{ int get() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/Bytes$OptionHolder),reset,MethodDescriptor((): void),com.mongodb.Bytes$OptionHolder{ void reset() }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/Bytes$OptionHolder),set,MethodDescriptor((int): void),com.mongodb.Bytes$OptionHolder{ void set(int) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/Bytes),<clinit>,MethodDescriptor((): void),com.mongodb.Bytes{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Bytes),<init>,MethodDescriptor((): void),com.mongodb.Bytes{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Bytes),getType,MethodDescriptor((java.lang.Object): byte),com.mongodb.Bytes{ public static byte getType(java.lang.Object) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/CommandFailureException),<init>,MethodDescriptor((com.mongodb.CommandResult): void),com.mongodb.CommandFailureException{ public void <init>(com.mongodb.CommandResult) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandFailureException),getCode,MethodDescriptor((): int),com.mongodb.MongoException{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/CommandFailureException),getCommandResult,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.CommandFailureException{ public com.mongodb.CommandResult getCommandResult() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/CommandResult),<init>,MethodDescriptor((com.mongodb.ServerAddress): void),com.mongodb.CommandResult{ void <init>(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),append,MethodDescriptor((java.lang.String, java.lang.Object): com.mongodb.BasicDBObject),com.mongodb.BasicDBObject{ public com.mongodb.BasicDBObject append(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),append,MethodDescriptor((java.lang.String, java.lang.Object): org.bson.BasicBSONObject),com.mongodb.BasicDBObject{ public org.bson.BasicBSONObject append(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),containsField,MethodDescriptor((java.lang.String): boolean),org.bson.BasicBSONObject{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),containsKey,MethodDescriptor((java.lang.String): boolean),org.bson.BasicBSONObject{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),copy,MethodDescriptor((): java.lang.Object),com.mongodb.BasicDBObject{ public java.lang.Object copy() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.BasicBSONObject{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),get,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getBoolean,MethodDescriptor((java.lang.String): boolean),org.bson.BasicBSONObject{ public boolean getBoolean(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getBoolean,MethodDescriptor((java.lang.String, boolean): boolean),org.bson.BasicBSONObject{ public boolean getBoolean(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getCode,MethodDescriptor((): int),com.mongodb.CommandResult{ int getCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getDate,MethodDescriptor((java.lang.String): java.util.Date),org.bson.BasicBSONObject{ public java.util.Date getDate(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getDate,MethodDescriptor((java.lang.String, java.util.Date): java.util.Date),org.bson.BasicBSONObject{ public java.util.Date getDate(java.lang.String,java.util.Date) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getDouble,MethodDescriptor((java.lang.String): double),org.bson.BasicBSONObject{ public double getDouble(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getDouble,MethodDescriptor((java.lang.String, double): double),org.bson.BasicBSONObject{ public double getDouble(java.lang.String,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getErrorMessage,MethodDescriptor((): java.lang.String),com.mongodb.CommandResult{ public java.lang.String getErrorMessage() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getException,MethodDescriptor((): com.mongodb.MongoException),com.mongodb.CommandResult{ public com.mongodb.MongoException getException() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getInt,MethodDescriptor((java.lang.String): int),org.bson.BasicBSONObject{ public int getInt(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getInt,MethodDescriptor((java.lang.String, int): int),org.bson.BasicBSONObject{ public int getInt(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getLong,MethodDescriptor((java.lang.String): long),org.bson.BasicBSONObject{ public long getLong(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getLong,MethodDescriptor((java.lang.String, long): long),org.bson.BasicBSONObject{ public long getLong(java.lang.String,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getObjectId,MethodDescriptor((java.lang.String): org.bson.types.ObjectId),org.bson.BasicBSONObject{ public org.bson.types.ObjectId getObjectId(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): org.bson.types.ObjectId),org.bson.BasicBSONObject{ public org.bson.types.ObjectId getObjectId(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getServerUsed,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.CommandResult{ public com.mongodb.ServerAddress getServerUsed() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/CommandResult),getString,MethodDescriptor((java.lang.String): java.lang.String),org.bson.BasicBSONObject{ public java.lang.String getString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),getString,MethodDescriptor((java.lang.String, java.lang.String): java.lang.String),org.bson.BasicBSONObject{ public java.lang.String getString(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),hasErr,MethodDescriptor((): boolean),com.mongodb.CommandResult{ boolean hasErr() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),isPartialObject,MethodDescriptor((): boolean),com.mongodb.BasicDBObject{ public boolean isPartialObject() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/CommandResult),markAsPartialObject,MethodDescriptor((): void),com.mongodb.BasicDBObject{ public void markAsPartialObject() }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/CommandResult),ok,MethodDescriptor((): boolean),com.mongodb.CommandResult{ public boolean ok() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),put,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object put(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),putAll,MethodDescriptor((java.util.Map): void),org.bson.BasicBSONObject{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),putAll,MethodDescriptor((org.bson.BSONObject): void),org.bson.BasicBSONObject{ public void putAll(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),removeField,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object removeField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),throwOnError,MethodDescriptor((): void),com.mongodb.CommandResult{ public void throwOnError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),toMap,MethodDescriptor((): java.util.Map),org.bson.BasicBSONObject{ public java.util.Map toMap() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/CommandResult),toString,MethodDescriptor((): java.lang.String),com.mongodb.BasicDBObject{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$BackgroundUpdater),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.ConnectionStatus$BackgroundUpdater{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$Node),<init>,MethodDescriptor((float, com.mongodb.ServerAddress, int, boolean): void),com.mongodb.ConnectionStatus$Node{ void <init>(float,com.mongodb.ServerAddress,int,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$Node),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.ConnectionStatus$Node{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$Node),getMaxBsonObjectSize,MethodDescriptor((): int),com.mongodb.ConnectionStatus$Node{ public int getMaxBsonObjectSize() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$Node),getServerAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.ConnectionStatus$Node{ public com.mongodb.ServerAddress getServerAddress() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$Node),hashCode,MethodDescriptor((): int),com.mongodb.ConnectionStatus$Node{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$Node),isOk,MethodDescriptor((): boolean),com.mongodb.ConnectionStatus$Node{ public boolean isOk() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$Node),toJSON,MethodDescriptor((): java.lang.String),com.mongodb.ConnectionStatus$Node{ public java.lang.String toJSON() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$UpdatableNode$ConnectionState),<clinit>,MethodDescriptor((): void),com.mongodb.ConnectionStatus$UpdatableNode$ConnectionState{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$UpdatableNode$ConnectionState),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.ConnectionStatus$UpdatableNode$ConnectionState{ private void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$UpdatableNode$ConnectionState),valueOf,MethodDescriptor((java.lang.String): com.mongodb.ConnectionStatus$UpdatableNode$ConnectionState),com.mongodb.ConnectionStatus$UpdatableNode$ConnectionState{ public static com.mongodb.ConnectionStatus$UpdatableNode$ConnectionState valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$UpdatableNode$ConnectionState),values,MethodDescriptor((): com.mongodb.ConnectionStatus$UpdatableNode$ConnectionState[]),com.mongodb.ConnectionStatus$UpdatableNode$ConnectionState{ public static com.mongodb.ConnectionStatus$UpdatableNode$ConnectionState[] values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$UpdatableNode),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.Mongo, com.mongodb.MongoOptions): void),com.mongodb.ConnectionStatus$UpdatableNode{ void <init>(com.mongodb.ServerAddress,com.mongodb.Mongo,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$UpdatableNode),isOk,MethodDescriptor((): boolean),com.mongodb.ConnectionStatus$UpdatableNode{ public boolean isOk() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus$UpdatableNode),update,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.ConnectionStatus$UpdatableNode{ public com.mongodb.CommandResult update() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus),<clinit>,MethodDescriptor((): void),com.mongodb.ConnectionStatus{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus),<init>,MethodDescriptor((java.util.List, com.mongodb.Mongo): void),com.mongodb.ConnectionStatus{ void <init>(java.util.List,com.mongodb.Mongo) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus),checkClosed,MethodDescriptor((): void),com.mongodb.ConnectionStatus{ void checkClosed() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus),close,MethodDescriptor((): void),com.mongodb.ConnectionStatus{ void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ConnectionStatus),start,MethodDescriptor((): void),com.mongodb.ConnectionStatus{ void start() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB$CommandResultPair),<init>,MethodDescriptor((com.mongodb.DB, com.mongodb.CommandFailureException): void),com.mongodb.DB$CommandResultPair{ public void <init>(com.mongodb.DB,com.mongodb.CommandFailureException) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB$CommandResultPair),<init>,MethodDescriptor((com.mongodb.DB, com.mongodb.CommandResult): void),com.mongodb.DB$CommandResultPair{ public void <init>(com.mongodb.DB,com.mongodb.CommandResult) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),<clinit>,MethodDescriptor((): void),com.mongodb.DB{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),<init>,MethodDescriptor((com.mongodb.Mongo, java.lang.String): void),com.mongodb.DB{ public void <init>(com.mongodb.Mongo,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),_hash,MethodDescriptor((java.lang.String, char[]): java.lang.String),com.mongodb.DB{ java.lang.String _hash(java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),addOption,MethodDescriptor((int): void),com.mongodb.DB{ public void addOption(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),addUser,MethodDescriptor((java.lang.String, char[]): com.mongodb.WriteResult),com.mongodb.DB{ public com.mongodb.WriteResult addUser(java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),addUser,MethodDescriptor((java.lang.String, char[], boolean): com.mongodb.WriteResult),com.mongodb.DB{ public com.mongodb.WriteResult addUser(java.lang.String,char[],boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),authenticate,MethodDescriptor((java.lang.String, char[]): boolean),com.mongodb.DB{ public boolean authenticate(java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),authenticateCommand,MethodDescriptor((java.lang.String, char[]): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult authenticateCommand(java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),authenticateCommandHelper,MethodDescriptor((java.lang.String, char[]): com.mongodb.DB$CommandResultPair),com.mongodb.DB{ private com.mongodb.DB$CommandResultPair authenticateCommandHelper(java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),collectionExists,MethodDescriptor((java.lang.String): boolean),com.mongodb.DB{ public boolean collectionExists(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),command,MethodDescriptor((com.mongodb.DBObject): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),command,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBEncoder): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),command,MethodDescriptor((com.mongodb.DBObject, int): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),command,MethodDescriptor((com.mongodb.DBObject, int, com.mongodb.DBEncoder): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject,int,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),command,MethodDescriptor((com.mongodb.DBObject, int, com.mongodb.ReadPreference): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject,int,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),command,MethodDescriptor((com.mongodb.DBObject, int, com.mongodb.ReadPreference, com.mongodb.DBEncoder): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject,int,com.mongodb.ReadPreference,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),command,MethodDescriptor((java.lang.String): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),command,MethodDescriptor((java.lang.String, int): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),createCollection,MethodDescriptor((java.lang.String, com.mongodb.DBObject): com.mongodb.DBCollection),com.mongodb.DB{ public com.mongodb.DBCollection createCollection(java.lang.String,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),doEval,MethodDescriptor((java.lang.String, java.lang.Object[]): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult doEval(java.lang.String,java.lang.Object[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),dropDatabase,MethodDescriptor((): void),com.mongodb.DB{ public void dropDatabase() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),eval,MethodDescriptor((java.lang.String, java.lang.Object[]): java.lang.Object),com.mongodb.DB{ public java.lang.Object eval(java.lang.String,java.lang.Object[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),forceError,MethodDescriptor((): void),com.mongodb.DB{ public void forceError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getAuthenticationCredentials,MethodDescriptor((): com.mongodb.MongoCredential),com.mongodb.DB{ com.mongodb.MongoCredential getAuthenticationCredentials() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getCollection,MethodDescriptor((java.lang.String): com.mongodb.DBCollection),com.mongodb.DB{ public com.mongodb.DBCollection getCollection(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getCollectionFromString,MethodDescriptor((java.lang.String): com.mongodb.DBCollection),com.mongodb.DB{ public com.mongodb.DBCollection getCollectionFromString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getCollectionNames,MethodDescriptor((): java.util.Set),com.mongodb.DB{ public java.util.Set getCollectionNames() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getCommandReadPreference,MethodDescriptor((com.mongodb.DBObject, com.mongodb.ReadPreference): com.mongodb.ReadPreference),com.mongodb.DB{ com.mongodb.ReadPreference getCommandReadPreference(com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getLastError,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult getLastError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getLastError,MethodDescriptor((com.mongodb.WriteConcern): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult getLastError(com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getLastError,MethodDescriptor((int, int, boolean): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult getLastError(int,int,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getMongo,MethodDescriptor((): com.mongodb.Mongo),com.mongodb.DB{ public com.mongodb.Mongo getMongo() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DB),getName,MethodDescriptor((): java.lang.String),com.mongodb.DB{ public java.lang.String getName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DB),getOptions,MethodDescriptor((): int),com.mongodb.DB{ public int getOptions() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DB),getPreviousError,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult getPreviousError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getReadPreference,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.DB{ public com.mongodb.ReadPreference getReadPreference() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getSisterDB,MethodDescriptor((java.lang.String): com.mongodb.DB),com.mongodb.DB{ public com.mongodb.DB getSisterDB(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getStats,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult getStats() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),getWriteConcern,MethodDescriptor((): com.mongodb.WriteConcern),com.mongodb.DB{ public com.mongodb.WriteConcern getWriteConcern() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),isAuthenticated,MethodDescriptor((): boolean),com.mongodb.DB{ public boolean isAuthenticated() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),removeUser,MethodDescriptor((java.lang.String): com.mongodb.WriteResult),com.mongodb.DB{ public com.mongodb.WriteResult removeUser(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),resetError,MethodDescriptor((): void),com.mongodb.DB{ public void resetError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),resetOptions,MethodDescriptor((): void),com.mongodb.DB{ public void resetOptions() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),setOptions,MethodDescriptor((int): void),com.mongodb.DB{ public void setOptions(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),setReadOnly,MethodDescriptor((java.lang.Boolean): void),com.mongodb.DB{ public void setReadOnly(java.lang.Boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),setReadPreference,MethodDescriptor((com.mongodb.ReadPreference): void),com.mongodb.DB{ public void setReadPreference(com.mongodb.ReadPreference) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DB),setWriteConcern,MethodDescriptor((com.mongodb.WriteConcern): void),com.mongodb.DB{ public void setWriteConcern(com.mongodb.WriteConcern) }) => DExternallyPure
DefinedMethod(ObjectType(com/mongodb/DB),slaveOk,MethodDescriptor((): void),com.mongodb.DB{ public void slaveOk() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DB),toString,MethodDescriptor((): java.lang.String),com.mongodb.DB{ public java.lang.String toString() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DB),wrapCommand,MethodDescriptor((com.mongodb.DBObject, com.mongodb.ReadPreference): com.mongodb.DBObject),com.mongodb.DB{ private com.mongodb.DBObject wrapCommand(com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),<init>,MethodDescriptor((com.mongodb.DBAddress, java.lang.String): void),com.mongodb.DBAddress{ public void <init>(com.mongodb.DBAddress,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.DBAddress{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),<init>,MethodDescriptor((java.lang.String, int, java.lang.String): void),com.mongodb.DBAddress{ public void <init>(java.lang.String,int,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),<init>,MethodDescriptor((java.lang.String, java.lang.String): void),com.mongodb.DBAddress{ public void <init>(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),<init>,MethodDescriptor((java.net.InetAddress, int, java.lang.String): void),com.mongodb.DBAddress{ public void <init>(java.net.InetAddress,int,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),_check,MethodDescriptor((java.lang.String, java.lang.String): void),com.mongodb.DBAddress{ static void _check(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),_fixName,MethodDescriptor((java.lang.String): java.lang.String),com.mongodb.DBAddress{ static java.lang.String _fixName(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),_getDBSection,MethodDescriptor((java.lang.String): java.lang.String),com.mongodb.DBAddress{ static java.lang.String _getDBSection(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),_getHostSection,MethodDescriptor((java.lang.String): java.lang.String),com.mongodb.DBAddress{ static java.lang.String _getHostSection(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.DBAddress{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),getDBName,MethodDescriptor((): java.lang.String),com.mongodb.DBAddress{ public java.lang.String getDBName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBAddress),getHost,MethodDescriptor((): java.lang.String),com.mongodb.ServerAddress{ public java.lang.String getHost() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBAddress),getPort,MethodDescriptor((): int),com.mongodb.ServerAddress{ public int getPort() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/DBAddress),getSister,MethodDescriptor((java.lang.String): com.mongodb.DBAddress),com.mongodb.DBAddress{ public com.mongodb.DBAddress getSister(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),getSocketAddress,MethodDescriptor((): java.net.InetSocketAddress),com.mongodb.ServerAddress{ public java.net.InetSocketAddress getSocketAddress() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBAddress),hashCode,MethodDescriptor((): int),com.mongodb.DBAddress{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),sameHost,MethodDescriptor((java.lang.String): boolean),com.mongodb.ServerAddress{ public boolean sameHost(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),toString,MethodDescriptor((): java.lang.String),com.mongodb.DBAddress{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBAddress),updateInetAddress,MethodDescriptor((): boolean),com.mongodb.ServerAddress{ boolean updateInetAddress() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$DeadCursor),<init>,MethodDescriptor((long, com.mongodb.ServerAddress): void),com.mongodb.DBApiLayer$DeadCursor{ void <init>(long,com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),<init>,MethodDescriptor((com.mongodb.DBApiLayer, java.lang.String): void),com.mongodb.DBApiLayer$MyCollection{ void <init>(com.mongodb.DBApiLayer,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),__find,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, int, int, int, int, com.mongodb.ReadPreference, com.mongodb.DBDecoder): java.util.Iterator),com.mongodb.DBApiLayer$MyCollection{ java.util.Iterator __find(com.mongodb.DBObject,com.mongodb.DBObject,int,int,int,int,com.mongodb.ReadPreference,com.mongodb.DBDecoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),__find,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, int, int, int, int, com.mongodb.ReadPreference, com.mongodb.DBDecoder, com.mongodb.DBEncoder): java.util.Iterator),com.mongodb.DBApiLayer$MyCollection{ java.util.Iterator __find(com.mongodb.DBObject,com.mongodb.DBObject,int,int,int,int,com.mongodb.ReadPreference,com.mongodb.DBDecoder,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),_checkObject,MethodDescriptor((com.mongodb.DBObject, boolean, boolean): com.mongodb.DBObject),com.mongodb.DBCollection{ protected com.mongodb.DBObject _checkObject(com.mongodb.DBObject,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),addOption,MethodDescriptor((int): void),com.mongodb.DBCollection{ public void addOption(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),aggregate,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject[]): com.mongodb.AggregationOutput),com.mongodb.DBCollection{ public com.mongodb.AggregationOutput aggregate(com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),apply,MethodDescriptor((com.mongodb.DBObject): java.lang.Object),com.mongodb.DBCollection{ public java.lang.Object apply(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),apply,MethodDescriptor((com.mongodb.DBObject, boolean): java.lang.Object),com.mongodb.DBCollection{ public java.lang.Object apply(com.mongodb.DBObject,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),checkReadOnly,MethodDescriptor((boolean): boolean),com.mongodb.DBCollection{ protected boolean checkReadOnly(boolean) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),command,MethodDescriptor((com.mongodb.DBObject, int, com.mongodb.ReadPreference): com.mongodb.CommandResult),com.mongodb.DBCollection{ com.mongodb.CommandResult command(com.mongodb.DBObject,int,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),count,MethodDescriptor((): long),com.mongodb.DBCollection{ public long count() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),count,MethodDescriptor((com.mongodb.DBObject): long),com.mongodb.DBCollection{ public long count(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),count,MethodDescriptor((com.mongodb.DBObject, com.mongodb.ReadPreference): long),com.mongodb.DBCollection{ public long count(com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),createIndex,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.DBCollection{ public void createIndex(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),createIndex,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): void),com.mongodb.DBCollection{ public void createIndex(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),createIndex,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBEncoder): void),com.mongodb.DBApiLayer$MyCollection{ public void createIndex(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),defaultOptions,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ com.mongodb.DBObject defaultOptions(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),distinct,MethodDescriptor((java.lang.String): java.util.List),com.mongodb.DBCollection{ public java.util.List distinct(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),distinct,MethodDescriptor((java.lang.String, com.mongodb.DBObject): java.util.List),com.mongodb.DBCollection{ public java.util.List distinct(java.lang.String,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),distinct,MethodDescriptor((java.lang.String, com.mongodb.DBObject, com.mongodb.ReadPreference): java.util.List),com.mongodb.DBCollection{ public java.util.List distinct(java.lang.String,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),distinct,MethodDescriptor((java.lang.String, com.mongodb.ReadPreference): java.util.List),com.mongodb.DBCollection{ public java.util.List distinct(java.lang.String,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),doapply,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.DBApiLayer$MyCollection{ public void doapply(com.mongodb.DBObject) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),drop,MethodDescriptor((): void),com.mongodb.DBApiLayer$MyCollection{ public void drop() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),dropIndex,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.DBCollection{ public void dropIndex(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),dropIndex,MethodDescriptor((java.lang.String): void),com.mongodb.DBCollection{ public void dropIndex(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),dropIndexes,MethodDescriptor((): void),com.mongodb.DBCollection{ public void dropIndexes() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),dropIndexes,MethodDescriptor((java.lang.String): void),com.mongodb.DBCollection{ public void dropIndexes(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),ensureIndex,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.DBCollection{ public void ensureIndex(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),ensureIndex,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): void),com.mongodb.DBCollection{ public void ensureIndex(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),ensureIndex,MethodDescriptor((com.mongodb.DBObject, java.lang.String): void),com.mongodb.DBCollection{ public void ensureIndex(com.mongodb.DBObject,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),ensureIndex,MethodDescriptor((com.mongodb.DBObject, java.lang.String, boolean): void),com.mongodb.DBCollection{ public void ensureIndex(com.mongodb.DBObject,java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),ensureIndex,MethodDescriptor((java.lang.String): void),com.mongodb.DBCollection{ public void ensureIndex(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.DBCollection{ public boolean equals(java.lang.Object) }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),find,MethodDescriptor((): com.mongodb.DBCursor),com.mongodb.DBCollection{ public com.mongodb.DBCursor find() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),find,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBCursor),com.mongodb.DBCollection{ public com.mongodb.DBCursor find(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),find,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.DBCursor),com.mongodb.DBCollection{ public com.mongodb.DBCursor find(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),find,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, int, int): com.mongodb.DBCursor),com.mongodb.DBCollection{ public com.mongodb.DBCursor find(com.mongodb.DBObject,com.mongodb.DBObject,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),find,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, int, int, int): com.mongodb.DBCursor),com.mongodb.DBCollection{ public com.mongodb.DBCursor find(com.mongodb.DBObject,com.mongodb.DBObject,int,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findAndModify,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findAndModify(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findAndModify,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findAndModify(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findAndModify,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject, boolean, com.mongodb.DBObject, boolean, boolean): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findAndModify(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,boolean,com.mongodb.DBObject,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findAndRemove,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findAndRemove(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findOne,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findOne,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findOne,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findOne,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findOne,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.ReadPreference): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findOne,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.ReadPreference): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findOne,MethodDescriptor((java.lang.Object): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),findOne,MethodDescriptor((java.lang.Object, com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(java.lang.Object,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getCollection,MethodDescriptor((java.lang.String): com.mongodb.DBCollection),com.mongodb.DBCollection{ public com.mongodb.DBCollection getCollection(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getCount,MethodDescriptor((): long),com.mongodb.DBCollection{ public long getCount() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getCount,MethodDescriptor((com.mongodb.DBObject): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getCount,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getCount,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.ReadPreference): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getCount,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, long, long): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.DBObject,com.mongodb.DBObject,long,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getCount,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, long, long, com.mongodb.ReadPreference): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.DBObject,com.mongodb.DBObject,long,long,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getCount,MethodDescriptor((com.mongodb.ReadPreference): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getDB,MethodDescriptor((): com.mongodb.DB),com.mongodb.DBCollection{ public com.mongodb.DB getDB() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getDBDecoderFactory,MethodDescriptor((): com.mongodb.DBDecoderFactory),com.mongodb.DBCollection{ public com.mongodb.DBDecoderFactory getDBDecoderFactory() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getDBEncoderFactory,MethodDescriptor((): com.mongodb.DBEncoderFactory),com.mongodb.DBCollection{ public com.mongodb.DBEncoderFactory getDBEncoderFactory() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getFullName,MethodDescriptor((): java.lang.String),com.mongodb.DBCollection{ public java.lang.String getFullName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getIndexInfo,MethodDescriptor((): java.util.List),com.mongodb.DBCollection{ public java.util.List getIndexInfo() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getInternalClass,MethodDescriptor((java.lang.String): java.lang.Class),com.mongodb.DBCollection{ protected java.lang.Class getInternalClass(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getName,MethodDescriptor((): java.lang.String),com.mongodb.DBCollection{ public java.lang.String getName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getObjectClass,MethodDescriptor((): java.lang.Class),com.mongodb.DBCollection{ public java.lang.Class getObjectClass() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getOptions,MethodDescriptor((): int),com.mongodb.DBCollection{ public int getOptions() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getReadPreference,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.DBCollection{ public com.mongodb.ReadPreference getReadPreference() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getStats,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DBCollection{ public com.mongodb.CommandResult getStats() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),getWriteConcern,MethodDescriptor((): com.mongodb.WriteConcern),com.mongodb.DBCollection{ public com.mongodb.WriteConcern getWriteConcern() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),group,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),group,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject, java.lang.String): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),group,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject, java.lang.String, java.lang.String): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),group,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject, java.lang.String, java.lang.String, com.mongodb.ReadPreference): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,java.lang.String,java.lang.String,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),group,MethodDescriptor((com.mongodb.GroupCommand): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.GroupCommand) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),group,MethodDescriptor((com.mongodb.GroupCommand, com.mongodb.ReadPreference): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.GroupCommand,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),hashCode,MethodDescriptor((): int),com.mongodb.DBCollection{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),insert,MethodDescriptor((com.mongodb.DBObject, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(com.mongodb.DBObject,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),insert,MethodDescriptor((com.mongodb.DBObject[]): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),insert,MethodDescriptor((com.mongodb.DBObject[], com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(com.mongodb.DBObject[],com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),insert,MethodDescriptor((com.mongodb.DBObject[], com.mongodb.WriteConcern, com.mongodb.DBEncoder): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(com.mongodb.DBObject[],com.mongodb.WriteConcern,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),insert,MethodDescriptor((com.mongodb.WriteConcern, com.mongodb.DBObject[]): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(com.mongodb.WriteConcern,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),insert,MethodDescriptor((java.util.List): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),insert,MethodDescriptor((java.util.List, boolean, com.mongodb.WriteConcern, com.mongodb.DBEncoder): com.mongodb.WriteResult),com.mongodb.DBApiLayer$MyCollection{ protected com.mongodb.WriteResult insert(java.util.List,boolean,com.mongodb.WriteConcern,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),insert,MethodDescriptor((java.util.List, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(java.util.List,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),insert,MethodDescriptor((java.util.List, com.mongodb.WriteConcern, com.mongodb.DBEncoder): com.mongodb.WriteResult),com.mongodb.DBApiLayer$MyCollection{ public com.mongodb.WriteResult insert(java.util.List,com.mongodb.WriteConcern,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),isCapped,MethodDescriptor((): boolean),com.mongodb.DBCollection{ public boolean isCapped() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),mapReduce,MethodDescriptor((com.mongodb.DBObject): com.mongodb.MapReduceOutput),com.mongodb.DBCollection{ public com.mongodb.MapReduceOutput mapReduce(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),mapReduce,MethodDescriptor((com.mongodb.MapReduceCommand): com.mongodb.MapReduceOutput),com.mongodb.DBCollection{ public com.mongodb.MapReduceOutput mapReduce(com.mongodb.MapReduceCommand) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),mapReduce,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String, com.mongodb.DBObject): com.mongodb.MapReduceOutput),com.mongodb.DBCollection{ public com.mongodb.MapReduceOutput mapReduce(java.lang.String,java.lang.String,java.lang.String,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),mapReduce,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String, com.mongodb.MapReduceCommand$OutputType, com.mongodb.DBObject): com.mongodb.MapReduceOutput),com.mongodb.DBCollection{ public com.mongodb.MapReduceOutput mapReduce(java.lang.String,java.lang.String,java.lang.String,com.mongodb.MapReduceCommand$OutputType,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),mapReduce,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String, com.mongodb.MapReduceCommand$OutputType, com.mongodb.DBObject, com.mongodb.ReadPreference): com.mongodb.MapReduceOutput),com.mongodb.DBCollection{ public com.mongodb.MapReduceOutput mapReduce(java.lang.String,java.lang.String,java.lang.String,com.mongodb.MapReduceCommand$OutputType,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),remove,MethodDescriptor((com.mongodb.DBObject): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult remove(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),remove,MethodDescriptor((com.mongodb.DBObject, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult remove(com.mongodb.DBObject,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),remove,MethodDescriptor((com.mongodb.DBObject, com.mongodb.WriteConcern, com.mongodb.DBEncoder): com.mongodb.WriteResult),com.mongodb.DBApiLayer$MyCollection{ public com.mongodb.WriteResult remove(com.mongodb.DBObject,com.mongodb.WriteConcern,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),rename,MethodDescriptor((java.lang.String): com.mongodb.DBCollection),com.mongodb.DBCollection{ public com.mongodb.DBCollection rename(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),rename,MethodDescriptor((java.lang.String, boolean): com.mongodb.DBCollection),com.mongodb.DBCollection{ public com.mongodb.DBCollection rename(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),resetIndexCache,MethodDescriptor((): void),com.mongodb.DBCollection{ public void resetIndexCache() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),resetOptions,MethodDescriptor((): void),com.mongodb.DBCollection{ public void resetOptions() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),save,MethodDescriptor((com.mongodb.DBObject): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult save(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),save,MethodDescriptor((com.mongodb.DBObject, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult save(com.mongodb.DBObject,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),setDBDecoderFactory,MethodDescriptor((com.mongodb.DBDecoderFactory): void),com.mongodb.DBCollection{ public void setDBDecoderFactory(com.mongodb.DBDecoderFactory) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),setDBEncoderFactory,MethodDescriptor((com.mongodb.DBEncoderFactory): void),com.mongodb.DBCollection{ public void setDBEncoderFactory(com.mongodb.DBEncoderFactory) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),setHintFields,MethodDescriptor((java.util.List): void),com.mongodb.DBCollection{ public void setHintFields(java.util.List) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),setInternalClass,MethodDescriptor((java.lang.String, java.lang.Class): void),com.mongodb.DBCollection{ public void setInternalClass(java.lang.String,java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),setObjectClass,MethodDescriptor((java.lang.Class): void),com.mongodb.DBCollection{ public void setObjectClass(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),setOptions,MethodDescriptor((int): void),com.mongodb.DBCollection{ public void setOptions(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),setReadPreference,MethodDescriptor((com.mongodb.ReadPreference): void),com.mongodb.DBCollection{ public void setReadPreference(com.mongodb.ReadPreference) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),setWriteConcern,MethodDescriptor((com.mongodb.WriteConcern): void),com.mongodb.DBCollection{ public void setWriteConcern(com.mongodb.WriteConcern) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),slaveOk,MethodDescriptor((): void),com.mongodb.DBCollection{ public void slaveOk() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),toString,MethodDescriptor((): java.lang.String),com.mongodb.DBCollection{ public java.lang.String toString() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),update,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult update(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),update,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, boolean, boolean): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult update(com.mongodb.DBObject,com.mongodb.DBObject,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),update,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, boolean, boolean, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult update(com.mongodb.DBObject,com.mongodb.DBObject,boolean,boolean,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),update,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, boolean, boolean, com.mongodb.WriteConcern, com.mongodb.DBEncoder): com.mongodb.WriteResult),com.mongodb.DBApiLayer$MyCollection{ public com.mongodb.WriteResult update(com.mongodb.DBObject,com.mongodb.DBObject,boolean,boolean,com.mongodb.WriteConcern,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$MyCollection),updateMulti,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult updateMulti(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result$OptionalFinalizer),<init>,MethodDescriptor((com.mongodb.DBApiLayer$Result): void),com.mongodb.DBApiLayer$Result$OptionalFinalizer{ private void <init>(com.mongodb.DBApiLayer$Result) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result$OptionalFinalizer),<init>,MethodDescriptor((com.mongodb.DBApiLayer$Result, com.mongodb.DBApiLayer$1): void),com.mongodb.DBApiLayer$Result$OptionalFinalizer{ void <init>(com.mongodb.DBApiLayer$Result,com.mongodb.DBApiLayer$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result$OptionalFinalizer),finalize,MethodDescriptor((): void),com.mongodb.DBApiLayer$Result$OptionalFinalizer{ protected void finalize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),<init>,MethodDescriptor((com.mongodb.DBApiLayer, com.mongodb.DBApiLayer$MyCollection, com.mongodb.Response, int, int, int, com.mongodb.DBDecoder): void),com.mongodb.DBApiLayer$Result{ void <init>(com.mongodb.DBApiLayer,com.mongodb.DBApiLayer$MyCollection,com.mongodb.Response,int,int,int,com.mongodb.DBDecoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),_advance,MethodDescriptor((): void),com.mongodb.DBApiLayer$Result{ private void _advance() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),close,MethodDescriptor((): void),com.mongodb.DBApiLayer$Result{ void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),getBatchSize,MethodDescriptor((): int),com.mongodb.DBApiLayer$Result{ public int getBatchSize() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),getCursorId,MethodDescriptor((): long),com.mongodb.DBApiLayer$Result{ public long getCursorId() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),getServerAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.DBApiLayer$Result{ public com.mongodb.ServerAddress getServerAddress() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),getSizes,MethodDescriptor((): java.util.List),com.mongodb.DBApiLayer$Result{ java.util.List getSizes() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),hasFinalizer,MethodDescriptor((): boolean),com.mongodb.DBApiLayer$Result{ boolean hasFinalizer() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),hasNext,MethodDescriptor((): boolean),com.mongodb.DBApiLayer$Result{ public boolean hasNext() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),init,MethodDescriptor((com.mongodb.Response): void),com.mongodb.DBApiLayer$Result{ private void init(com.mongodb.Response) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),killCursor,MethodDescriptor((): void),com.mongodb.DBApiLayer$Result{ void killCursor() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),next,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBApiLayer$Result{ public com.mongodb.DBObject next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),next,MethodDescriptor((): java.lang.Object),com.mongodb.DBApiLayer$Result{ public java.lang.Object next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),numGetMores,MethodDescriptor((): int),com.mongodb.DBApiLayer$Result{ int numGetMores() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),remove,MethodDescriptor((): void),com.mongodb.DBApiLayer$Result{ public void remove() }) => DPure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),setBatchSize,MethodDescriptor((int): void),com.mongodb.DBApiLayer$Result{ public void setBatchSize(int) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),toString,MethodDescriptor((): java.lang.String),com.mongodb.DBApiLayer$Result{ public java.lang.String toString() }) => Pure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer$Result),totalBytes,MethodDescriptor((): long),com.mongodb.DBApiLayer$Result{ public long totalBytes() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),<clinit>,MethodDescriptor((): void),com.mongodb.DBApiLayer{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),<init>,MethodDescriptor((com.mongodb.Mongo, java.lang.String, com.mongodb.DBConnector): void),com.mongodb.DBApiLayer{ protected void <init>(com.mongodb.Mongo,java.lang.String,com.mongodb.DBConnector) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),_hash,MethodDescriptor((java.lang.String, char[]): java.lang.String),com.mongodb.DB{ java.lang.String _hash(java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),addOption,MethodDescriptor((int): void),com.mongodb.DB{ public void addOption(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),addUser,MethodDescriptor((java.lang.String, char[]): com.mongodb.WriteResult),com.mongodb.DB{ public com.mongodb.WriteResult addUser(java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),addUser,MethodDescriptor((java.lang.String, char[], boolean): com.mongodb.WriteResult),com.mongodb.DB{ public com.mongodb.WriteResult addUser(java.lang.String,char[],boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),authenticate,MethodDescriptor((java.lang.String, char[]): boolean),com.mongodb.DB{ public boolean authenticate(java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),authenticateCommand,MethodDescriptor((java.lang.String, char[]): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult authenticateCommand(java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),chooseBatchSize,MethodDescriptor((int, int, int): int),com.mongodb.DBApiLayer{ static int chooseBatchSize(int,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),cleanCursors,MethodDescriptor((boolean): void),com.mongodb.DBApiLayer{ public void cleanCursors(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),collectionExists,MethodDescriptor((java.lang.String): boolean),com.mongodb.DB{ public boolean collectionExists(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),command,MethodDescriptor((com.mongodb.DBObject): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),command,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBEncoder): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),command,MethodDescriptor((com.mongodb.DBObject, int): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),command,MethodDescriptor((com.mongodb.DBObject, int, com.mongodb.DBEncoder): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject,int,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),command,MethodDescriptor((com.mongodb.DBObject, int, com.mongodb.ReadPreference): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject,int,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),command,MethodDescriptor((com.mongodb.DBObject, int, com.mongodb.ReadPreference, com.mongodb.DBEncoder): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(com.mongodb.DBObject,int,com.mongodb.ReadPreference,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),command,MethodDescriptor((java.lang.String): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),command,MethodDescriptor((java.lang.String, int): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult command(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),createCollection,MethodDescriptor((java.lang.String, com.mongodb.DBObject): com.mongodb.DBCollection),com.mongodb.DB{ public com.mongodb.DBCollection createCollection(java.lang.String,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),doAuthenticate,MethodDescriptor((com.mongodb.MongoCredential): com.mongodb.CommandResult),com.mongodb.DBApiLayer{ com.mongodb.CommandResult doAuthenticate(com.mongodb.MongoCredential) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),doEval,MethodDescriptor((java.lang.String, java.lang.Object[]): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult doEval(java.lang.String,java.lang.Object[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),doGetCollection,MethodDescriptor((java.lang.String): com.mongodb.DBApiLayer$MyCollection),com.mongodb.DBApiLayer{ protected com.mongodb.DBApiLayer$MyCollection doGetCollection(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),doGetCollection,MethodDescriptor((java.lang.String): com.mongodb.DBCollection),com.mongodb.DBApiLayer{ protected com.mongodb.DBCollection doGetCollection(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),dropDatabase,MethodDescriptor((): void),com.mongodb.DB{ public void dropDatabase() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),eval,MethodDescriptor((java.lang.String, java.lang.Object[]): java.lang.Object),com.mongodb.DB{ public java.lang.Object eval(java.lang.String,java.lang.Object[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),forceError,MethodDescriptor((): void),com.mongodb.DB{ public void forceError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getAuthenticationCredentials,MethodDescriptor((): com.mongodb.MongoCredential),com.mongodb.DB{ com.mongodb.MongoCredential getAuthenticationCredentials() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getCollection,MethodDescriptor((java.lang.String): com.mongodb.DBCollection),com.mongodb.DB{ public com.mongodb.DBCollection getCollection(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getCollectionFromString,MethodDescriptor((java.lang.String): com.mongodb.DBCollection),com.mongodb.DB{ public com.mongodb.DBCollection getCollectionFromString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getCollectionNames,MethodDescriptor((): java.util.Set),com.mongodb.DB{ public java.util.Set getCollectionNames() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getCommandReadPreference,MethodDescriptor((com.mongodb.DBObject, com.mongodb.ReadPreference): com.mongodb.ReadPreference),com.mongodb.DB{ com.mongodb.ReadPreference getCommandReadPreference(com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getLastError,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult getLastError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getLastError,MethodDescriptor((com.mongodb.WriteConcern): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult getLastError(com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getLastError,MethodDescriptor((int, int, boolean): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult getLastError(int,int,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getMongo,MethodDescriptor((): com.mongodb.Mongo),com.mongodb.DB{ public com.mongodb.Mongo getMongo() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getName,MethodDescriptor((): java.lang.String),com.mongodb.DB{ public java.lang.String getName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getOptions,MethodDescriptor((): int),com.mongodb.DB{ public int getOptions() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getPreviousError,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult getPreviousError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getReadPreference,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.DB{ public com.mongodb.ReadPreference getReadPreference() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getSisterDB,MethodDescriptor((java.lang.String): com.mongodb.DB),com.mongodb.DB{ public com.mongodb.DB getSisterDB(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getStats,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DB{ public com.mongodb.CommandResult getStats() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),getWriteConcern,MethodDescriptor((): com.mongodb.WriteConcern),com.mongodb.DB{ public com.mongodb.WriteConcern getWriteConcern() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),isAuthenticated,MethodDescriptor((): boolean),com.mongodb.DB{ public boolean isAuthenticated() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),killCursors,MethodDescriptor((com.mongodb.ServerAddress, java.util.List): void),com.mongodb.DBApiLayer{ void killCursors(com.mongodb.ServerAddress,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),removeUser,MethodDescriptor((java.lang.String): com.mongodb.WriteResult),com.mongodb.DB{ public com.mongodb.WriteResult removeUser(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),requestDone,MethodDescriptor((): void),com.mongodb.DBApiLayer{ public void requestDone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),requestEnsureConnection,MethodDescriptor((): void),com.mongodb.DBApiLayer{ public void requestEnsureConnection() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),requestStart,MethodDescriptor((): void),com.mongodb.DBApiLayer{ public void requestStart() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),resetError,MethodDescriptor((): void),com.mongodb.DB{ public void resetError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),resetOptions,MethodDescriptor((): void),com.mongodb.DB{ public void resetOptions() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),setOptions,MethodDescriptor((int): void),com.mongodb.DB{ public void setOptions(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),setReadOnly,MethodDescriptor((java.lang.Boolean): void),com.mongodb.DB{ public void setReadOnly(java.lang.Boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),setReadPreference,MethodDescriptor((com.mongodb.ReadPreference): void),com.mongodb.DB{ public void setReadPreference(com.mongodb.ReadPreference) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),setWriteConcern,MethodDescriptor((com.mongodb.WriteConcern): void),com.mongodb.DB{ public void setWriteConcern(com.mongodb.WriteConcern) }) => DExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),slaveOk,MethodDescriptor((): void),com.mongodb.DB{ public void slaveOk() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),toString,MethodDescriptor((): java.lang.String),com.mongodb.DB{ public java.lang.String toString() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),trace,MethodDescriptor((java.lang.String): void),com.mongodb.DBApiLayer{ static void trace(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/DBApiLayer),willTrace,MethodDescriptor((): boolean),com.mongodb.DBApiLayer{ static boolean willTrace() }) => DPure
DefinedMethod(ObjectType(com/mongodb/DBCollection),<init>,MethodDescriptor((com.mongodb.DB, java.lang.String): void),com.mongodb.DBCollection{ protected void <init>(com.mongodb.DB,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),_checkKeys,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.DBCollection{ private void _checkKeys(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),_checkKeys,MethodDescriptor((java.util.Map): void),com.mongodb.DBCollection{ private void _checkKeys(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),_checkObject,MethodDescriptor((com.mongodb.DBObject, boolean, boolean): com.mongodb.DBObject),com.mongodb.DBCollection{ protected com.mongodb.DBObject _checkObject(com.mongodb.DBObject,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),_checkValue,MethodDescriptor((java.lang.Object): void),com.mongodb.DBCollection{ private void _checkValue(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),_checkValues,MethodDescriptor((java.util.List): void),com.mongodb.DBCollection{ private void _checkValues(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),addOption,MethodDescriptor((int): void),com.mongodb.DBCollection{ public void addOption(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),aggregate,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject[]): com.mongodb.AggregationOutput),com.mongodb.DBCollection{ public com.mongodb.AggregationOutput aggregate(com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),apply,MethodDescriptor((com.mongodb.DBObject): java.lang.Object),com.mongodb.DBCollection{ public java.lang.Object apply(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),apply,MethodDescriptor((com.mongodb.DBObject, boolean): java.lang.Object),com.mongodb.DBCollection{ public java.lang.Object apply(com.mongodb.DBObject,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),checkReadOnly,MethodDescriptor((boolean): boolean),com.mongodb.DBCollection{ protected boolean checkReadOnly(boolean) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCollection),command,MethodDescriptor((com.mongodb.DBObject, int, com.mongodb.ReadPreference): com.mongodb.CommandResult),com.mongodb.DBCollection{ com.mongodb.CommandResult command(com.mongodb.DBObject,int,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),count,MethodDescriptor((): long),com.mongodb.DBCollection{ public long count() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),count,MethodDescriptor((com.mongodb.DBObject): long),com.mongodb.DBCollection{ public long count(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),count,MethodDescriptor((com.mongodb.DBObject, com.mongodb.ReadPreference): long),com.mongodb.DBCollection{ public long count(com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),createIndex,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.DBCollection{ public void createIndex(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),createIndex,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): void),com.mongodb.DBCollection{ public void createIndex(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),defaultOptions,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ com.mongodb.DBObject defaultOptions(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),distinct,MethodDescriptor((java.lang.String): java.util.List),com.mongodb.DBCollection{ public java.util.List distinct(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),distinct,MethodDescriptor((java.lang.String, com.mongodb.DBObject): java.util.List),com.mongodb.DBCollection{ public java.util.List distinct(java.lang.String,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),distinct,MethodDescriptor((java.lang.String, com.mongodb.DBObject, com.mongodb.ReadPreference): java.util.List),com.mongodb.DBCollection{ public java.util.List distinct(java.lang.String,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),distinct,MethodDescriptor((java.lang.String, com.mongodb.ReadPreference): java.util.List),com.mongodb.DBCollection{ public java.util.List distinct(java.lang.String,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),drop,MethodDescriptor((): void),com.mongodb.DBCollection{ public void drop() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),dropIndex,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.DBCollection{ public void dropIndex(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),dropIndex,MethodDescriptor((java.lang.String): void),com.mongodb.DBCollection{ public void dropIndex(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),dropIndexes,MethodDescriptor((): void),com.mongodb.DBCollection{ public void dropIndexes() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),dropIndexes,MethodDescriptor((java.lang.String): void),com.mongodb.DBCollection{ public void dropIndexes(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),ensureIndex,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.DBCollection{ public void ensureIndex(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),ensureIndex,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): void),com.mongodb.DBCollection{ public void ensureIndex(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),ensureIndex,MethodDescriptor((com.mongodb.DBObject, java.lang.String): void),com.mongodb.DBCollection{ public void ensureIndex(com.mongodb.DBObject,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),ensureIndex,MethodDescriptor((com.mongodb.DBObject, java.lang.String, boolean): void),com.mongodb.DBCollection{ public void ensureIndex(com.mongodb.DBObject,java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),ensureIndex,MethodDescriptor((java.lang.String): void),com.mongodb.DBCollection{ public void ensureIndex(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.DBCollection{ public boolean equals(java.lang.Object) }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCollection),find,MethodDescriptor((): com.mongodb.DBCursor),com.mongodb.DBCollection{ public com.mongodb.DBCursor find() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),find,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBCursor),com.mongodb.DBCollection{ public com.mongodb.DBCursor find(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),find,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.DBCursor),com.mongodb.DBCollection{ public com.mongodb.DBCursor find(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),find,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, int, int): com.mongodb.DBCursor),com.mongodb.DBCollection{ public com.mongodb.DBCursor find(com.mongodb.DBObject,com.mongodb.DBObject,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),find,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, int, int, int): com.mongodb.DBCursor),com.mongodb.DBCollection{ public com.mongodb.DBCursor find(com.mongodb.DBObject,com.mongodb.DBObject,int,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findAndModify,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findAndModify(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findAndModify,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findAndModify(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findAndModify,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject, boolean, com.mongodb.DBObject, boolean, boolean): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findAndModify(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,boolean,com.mongodb.DBObject,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findAndRemove,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findAndRemove(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findOne,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findOne,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findOne,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findOne,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findOne,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.ReadPreference): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findOne,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.ReadPreference): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findOne,MethodDescriptor((java.lang.Object): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),findOne,MethodDescriptor((java.lang.Object, com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject findOne(java.lang.Object,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),genIndexName,MethodDescriptor((com.mongodb.DBObject): java.lang.String),com.mongodb.DBCollection{ public static java.lang.String genIndexName(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getCollection,MethodDescriptor((java.lang.String): com.mongodb.DBCollection),com.mongodb.DBCollection{ public com.mongodb.DBCollection getCollection(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getCount,MethodDescriptor((): long),com.mongodb.DBCollection{ public long getCount() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getCount,MethodDescriptor((com.mongodb.DBObject): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getCount,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getCount,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.ReadPreference): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getCount,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, long, long): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.DBObject,com.mongodb.DBObject,long,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getCount,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, long, long, com.mongodb.ReadPreference): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.DBObject,com.mongodb.DBObject,long,long,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getCount,MethodDescriptor((com.mongodb.ReadPreference): long),com.mongodb.DBCollection{ public long getCount(com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getDB,MethodDescriptor((): com.mongodb.DB),com.mongodb.DBCollection{ public com.mongodb.DB getDB() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCollection),getDBDecoderFactory,MethodDescriptor((): com.mongodb.DBDecoderFactory),com.mongodb.DBCollection{ public com.mongodb.DBDecoderFactory getDBDecoderFactory() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCollection),getDBEncoder,MethodDescriptor((): com.mongodb.DBEncoder),com.mongodb.DBCollection{ private com.mongodb.DBEncoder getDBEncoder() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getDBEncoderFactory,MethodDescriptor((): com.mongodb.DBEncoderFactory),com.mongodb.DBCollection{ public com.mongodb.DBEncoderFactory getDBEncoderFactory() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCollection),getDecoder,MethodDescriptor((): com.mongodb.DBDecoder),com.mongodb.DBCollection{ private com.mongodb.DBDecoder getDecoder() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getFullName,MethodDescriptor((): java.lang.String),com.mongodb.DBCollection{ public java.lang.String getFullName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCollection),getIndexInfo,MethodDescriptor((): java.util.List),com.mongodb.DBCollection{ public java.util.List getIndexInfo() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getInternalClass,MethodDescriptor((java.lang.String): java.lang.Class),com.mongodb.DBCollection{ protected java.lang.Class getInternalClass(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getName,MethodDescriptor((): java.lang.String),com.mongodb.DBCollection{ public java.lang.String getName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCollection),getObjectClass,MethodDescriptor((): java.lang.Class),com.mongodb.DBCollection{ public java.lang.Class getObjectClass() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCollection),getOptions,MethodDescriptor((): int),com.mongodb.DBCollection{ public int getOptions() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCollection),getReadPreference,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.DBCollection{ public com.mongodb.ReadPreference getReadPreference() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getStats,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DBCollection{ public com.mongodb.CommandResult getStats() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),getWriteConcern,MethodDescriptor((): com.mongodb.WriteConcern),com.mongodb.DBCollection{ public com.mongodb.WriteConcern getWriteConcern() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),group,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),group,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject, java.lang.String): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),group,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject, java.lang.String, java.lang.String): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),group,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject, java.lang.String, java.lang.String, com.mongodb.ReadPreference): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,java.lang.String,java.lang.String,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),group,MethodDescriptor((com.mongodb.GroupCommand): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.GroupCommand) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),group,MethodDescriptor((com.mongodb.GroupCommand, com.mongodb.ReadPreference): com.mongodb.DBObject),com.mongodb.DBCollection{ public com.mongodb.DBObject group(com.mongodb.GroupCommand,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),hashCode,MethodDescriptor((): int),com.mongodb.DBCollection{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),insert,MethodDescriptor((com.mongodb.DBObject, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(com.mongodb.DBObject,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),insert,MethodDescriptor((com.mongodb.DBObject[]): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),insert,MethodDescriptor((com.mongodb.DBObject[], com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(com.mongodb.DBObject[],com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),insert,MethodDescriptor((com.mongodb.DBObject[], com.mongodb.WriteConcern, com.mongodb.DBEncoder): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(com.mongodb.DBObject[],com.mongodb.WriteConcern,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),insert,MethodDescriptor((com.mongodb.WriteConcern, com.mongodb.DBObject[]): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(com.mongodb.WriteConcern,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),insert,MethodDescriptor((java.util.List): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),insert,MethodDescriptor((java.util.List, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult insert(java.util.List,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),instantiateObjectClassInstance,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBCollection{ private com.mongodb.DBObject instantiateObjectClassInstance() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),isCapped,MethodDescriptor((): boolean),com.mongodb.DBCollection{ public boolean isCapped() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),mapReduce,MethodDescriptor((com.mongodb.DBObject): com.mongodb.MapReduceOutput),com.mongodb.DBCollection{ public com.mongodb.MapReduceOutput mapReduce(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),mapReduce,MethodDescriptor((com.mongodb.MapReduceCommand): com.mongodb.MapReduceOutput),com.mongodb.DBCollection{ public com.mongodb.MapReduceOutput mapReduce(com.mongodb.MapReduceCommand) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),mapReduce,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String, com.mongodb.DBObject): com.mongodb.MapReduceOutput),com.mongodb.DBCollection{ public com.mongodb.MapReduceOutput mapReduce(java.lang.String,java.lang.String,java.lang.String,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),mapReduce,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String, com.mongodb.MapReduceCommand$OutputType, com.mongodb.DBObject): com.mongodb.MapReduceOutput),com.mongodb.DBCollection{ public com.mongodb.MapReduceOutput mapReduce(java.lang.String,java.lang.String,java.lang.String,com.mongodb.MapReduceCommand$OutputType,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),mapReduce,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String, com.mongodb.MapReduceCommand$OutputType, com.mongodb.DBObject, com.mongodb.ReadPreference): com.mongodb.MapReduceOutput),com.mongodb.DBCollection{ public com.mongodb.MapReduceOutput mapReduce(java.lang.String,java.lang.String,java.lang.String,com.mongodb.MapReduceCommand$OutputType,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),remove,MethodDescriptor((com.mongodb.DBObject): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult remove(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),remove,MethodDescriptor((com.mongodb.DBObject, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult remove(com.mongodb.DBObject,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),rename,MethodDescriptor((java.lang.String): com.mongodb.DBCollection),com.mongodb.DBCollection{ public com.mongodb.DBCollection rename(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),rename,MethodDescriptor((java.lang.String, boolean): com.mongodb.DBCollection),com.mongodb.DBCollection{ public com.mongodb.DBCollection rename(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),replaceWithObjectClass,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBCollection{ private com.mongodb.DBObject replaceWithObjectClass(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),resetIndexCache,MethodDescriptor((): void),com.mongodb.DBCollection{ public void resetIndexCache() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),resetOptions,MethodDescriptor((): void),com.mongodb.DBCollection{ public void resetOptions() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),save,MethodDescriptor((com.mongodb.DBObject): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult save(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),save,MethodDescriptor((com.mongodb.DBObject, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult save(com.mongodb.DBObject,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),setDBDecoderFactory,MethodDescriptor((com.mongodb.DBDecoderFactory): void),com.mongodb.DBCollection{ public void setDBDecoderFactory(com.mongodb.DBDecoderFactory) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBCollection),setDBEncoderFactory,MethodDescriptor((com.mongodb.DBEncoderFactory): void),com.mongodb.DBCollection{ public void setDBEncoderFactory(com.mongodb.DBEncoderFactory) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBCollection),setHintFields,MethodDescriptor((java.util.List): void),com.mongodb.DBCollection{ public void setHintFields(java.util.List) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBCollection),setInternalClass,MethodDescriptor((java.lang.String, java.lang.Class): void),com.mongodb.DBCollection{ public void setInternalClass(java.lang.String,java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),setObjectClass,MethodDescriptor((java.lang.Class): void),com.mongodb.DBCollection{ public void setObjectClass(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),setOptions,MethodDescriptor((int): void),com.mongodb.DBCollection{ public void setOptions(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),setReadPreference,MethodDescriptor((com.mongodb.ReadPreference): void),com.mongodb.DBCollection{ public void setReadPreference(com.mongodb.ReadPreference) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBCollection),setWriteConcern,MethodDescriptor((com.mongodb.WriteConcern): void),com.mongodb.DBCollection{ public void setWriteConcern(com.mongodb.WriteConcern) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DBCollection),slaveOk,MethodDescriptor((): void),com.mongodb.DBCollection{ public void slaveOk() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),toString,MethodDescriptor((): java.lang.String),com.mongodb.DBCollection{ public java.lang.String toString() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCollection),update,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult update(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),update,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, boolean, boolean): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult update(com.mongodb.DBObject,com.mongodb.DBObject,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),update,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject, boolean, boolean, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult update(com.mongodb.DBObject,com.mongodb.DBObject,boolean,boolean,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),updateMulti,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.WriteResult),com.mongodb.DBCollection{ public com.mongodb.WriteResult updateMulti(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCollection),validateKey,MethodDescriptor((java.lang.String): void),com.mongodb.DBCollection{ private void validateKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor$CursorType),<clinit>,MethodDescriptor((): void),com.mongodb.DBCursor$CursorType{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor$CursorType),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.DBCursor$CursorType{ private void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor$CursorType),valueOf,MethodDescriptor((java.lang.String): com.mongodb.DBCursor$CursorType),com.mongodb.DBCursor$CursorType{ public static com.mongodb.DBCursor$CursorType valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor$CursorType),values,MethodDescriptor((): com.mongodb.DBCursor$CursorType[]),com.mongodb.DBCursor$CursorType{ public static com.mongodb.DBCursor$CursorType[] values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),<init>,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.ReadPreference): void),com.mongodb.DBCursor{ public void <init>(com.mongodb.DBCollection,com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),_check,MethodDescriptor((): void),com.mongodb.DBCursor{ private void _check() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),_checkType,MethodDescriptor((com.mongodb.DBCursor$CursorType): void),com.mongodb.DBCursor{ void _checkType(com.mongodb.DBCursor$CursorType) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),_fill,MethodDescriptor((int): void),com.mongodb.DBCursor{ void _fill(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),_hasNext,MethodDescriptor((): boolean),com.mongodb.DBCursor{ private boolean _hasNext() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),_lookForHints,MethodDescriptor((): void),com.mongodb.DBCursor{ private void _lookForHints() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),_next,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBCursor{ private com.mongodb.DBObject _next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),addOption,MethodDescriptor((int): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor addOption(int) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),addSpecial,MethodDescriptor((java.lang.String, java.lang.Object): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor addSpecial(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),batchSize,MethodDescriptor((int): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor batchSize(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),close,MethodDescriptor((): void),com.mongodb.DBCursor{ public void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),copy,MethodDescriptor((): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor copy() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),count,MethodDescriptor((): int),com.mongodb.DBCursor{ public int count() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),curr,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBCursor{ public com.mongodb.DBObject curr() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),explain,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBCursor{ public com.mongodb.DBObject explain() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),getCollection,MethodDescriptor((): com.mongodb.DBCollection),com.mongodb.DBCursor{ public com.mongodb.DBCollection getCollection() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),getCursorId,MethodDescriptor((): long),com.mongodb.DBCursor{ public long getCursorId() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),getDecoder,MethodDescriptor((): com.mongodb.DBDecoder),com.mongodb.DBCursor{ private com.mongodb.DBDecoder getDecoder() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),getDecoderFactory,MethodDescriptor((): com.mongodb.DBDecoderFactory),com.mongodb.DBCursor{ public com.mongodb.DBDecoderFactory getDecoderFactory() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),getKeysWanted,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBCursor{ public com.mongodb.DBObject getKeysWanted() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),getOptions,MethodDescriptor((): int),com.mongodb.DBCursor{ public int getOptions() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),getQuery,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBCursor{ public com.mongodb.DBObject getQuery() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),getReadPreference,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.DBCursor{ public com.mongodb.ReadPreference getReadPreference() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),getServerAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.DBCursor{ public com.mongodb.ServerAddress getServerAddress() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),getSizes,MethodDescriptor((): java.util.List),com.mongodb.DBCursor{ public java.util.List getSizes() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),hasFinalizer,MethodDescriptor((): boolean),com.mongodb.DBCursor{ boolean hasFinalizer() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),hasNext,MethodDescriptor((): boolean),com.mongodb.DBCursor{ public boolean hasNext() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),hint,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor hint(com.mongodb.DBObject) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),hint,MethodDescriptor((java.lang.String): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor hint(java.lang.String) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),itcount,MethodDescriptor((): int),com.mongodb.DBCursor{ public int itcount() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),iterator,MethodDescriptor((): java.util.Iterator),com.mongodb.DBCursor{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),length,MethodDescriptor((): int),com.mongodb.DBCursor{ public int length() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),limit,MethodDescriptor((int): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor limit(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),next,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBCursor{ public com.mongodb.DBObject next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),next,MethodDescriptor((): java.lang.Object),com.mongodb.DBCursor{ public java.lang.Object next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),numGetMores,MethodDescriptor((): int),com.mongodb.DBCursor{ public int numGetMores() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),numSeen,MethodDescriptor((): int),com.mongodb.DBCursor{ public int numSeen() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),remove,MethodDescriptor((): void),com.mongodb.DBCursor{ public void remove() }) => DPure
DefinedMethod(ObjectType(com/mongodb/DBCursor),resetOptions,MethodDescriptor((): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor resetOptions() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),setDecoderFactory,MethodDescriptor((com.mongodb.DBDecoderFactory): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor setDecoderFactory(com.mongodb.DBDecoderFactory) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),setOptions,MethodDescriptor((int): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor setOptions(int) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),setReadPreference,MethodDescriptor((com.mongodb.ReadPreference): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor setReadPreference(com.mongodb.ReadPreference) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),size,MethodDescriptor((): int),com.mongodb.DBCursor{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),skip,MethodDescriptor((int): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor skip(int) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),slaveOk,MethodDescriptor((): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor slaveOk() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),snapshot,MethodDescriptor((): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor snapshot() }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),sort,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBCursor),com.mongodb.DBCursor{ public com.mongodb.DBCursor sort(com.mongodb.DBObject) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBCursor),toArray,MethodDescriptor((): java.util.List),com.mongodb.DBCursor{ public java.util.List toArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),toArray,MethodDescriptor((int): java.util.List),com.mongodb.DBCursor{ public java.util.List toArray(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBCursor),toString,MethodDescriptor((): java.lang.String),com.mongodb.DBCursor{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPointer),<clinit>,MethodDescriptor((): void),com.mongodb.DBPointer{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPointer),<init>,MethodDescriptor((com.mongodb.DBObject, java.lang.String, com.mongodb.DB, java.lang.String, org.bson.types.ObjectId): void),com.mongodb.DBPointer{ void <init>(com.mongodb.DBObject,java.lang.String,com.mongodb.DB,java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPointer),<init>,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): void),com.mongodb.DBPointer{ public void <init>(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPointer),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.DBRefBase{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPointer),fetch,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBRefBase{ public com.mongodb.DBObject fetch() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPointer),getDB,MethodDescriptor((): com.mongodb.DB),com.mongodb.DBRefBase{ public com.mongodb.DB getDB() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBPointer),getId,MethodDescriptor((): java.lang.Object),com.mongodb.DBPointer{ public java.lang.Object getId() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPointer),getId,MethodDescriptor((): org.bson.types.ObjectId),com.mongodb.DBPointer{ public org.bson.types.ObjectId getId() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBPointer),getRef,MethodDescriptor((): java.lang.String),com.mongodb.DBRefBase{ public java.lang.String getRef() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBPointer),hashCode,MethodDescriptor((): int),com.mongodb.DBRefBase{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPointer),toString,MethodDescriptor((): java.lang.String),com.mongodb.DBPointer{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$ActiveState),<init>,MethodDescriptor((com.mongodb.DBPort, com.mongodb.OutMessage): void),com.mongodb.DBPort$ActiveState{ void <init>(com.mongodb.DBPort,com.mongodb.OutMessage) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$Authenticator),<init>,MethodDescriptor((com.mongodb.DBPort, com.mongodb.Mongo, com.mongodb.MongoCredential): void),com.mongodb.DBPort$Authenticator{ void <init>(com.mongodb.DBPort,com.mongodb.Mongo,com.mongodb.MongoCredential) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GSSAPIAuthenticator),<init>,MethodDescriptor((com.mongodb.DBPort, com.mongodb.Mongo, com.mongodb.MongoCredential): void),com.mongodb.DBPort$GSSAPIAuthenticator{ void <init>(com.mongodb.DBPort,com.mongodb.Mongo,com.mongodb.MongoCredential) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GSSAPIAuthenticator),authenticate,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DBPort$SaslAuthenticator{ public com.mongodb.CommandResult authenticate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GSSAPIAuthenticator),createSaslClient,MethodDescriptor((): javax.security.sasl.SaslClient),com.mongodb.DBPort$GSSAPIAuthenticator{ protected javax.security.sasl.SaslClient createSaslClient() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GSSAPIAuthenticator),getDatabase,MethodDescriptor((): com.mongodb.DB),com.mongodb.DBPort$GSSAPIAuthenticator{ protected com.mongodb.DB getDatabase() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GSSAPIAuthenticator),getGSSCredential,MethodDescriptor((java.lang.String): org.ietf.jgss.GSSCredential),com.mongodb.DBPort$GSSAPIAuthenticator{ private org.ietf.jgss.GSSCredential getGSSCredential(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GSSAPIAuthenticator),getMechanismName,MethodDescriptor((): java.lang.String),com.mongodb.DBPort$GSSAPIAuthenticator{ public java.lang.String getMechanismName() }) => Pure
DefinedMethod(ObjectType(com/mongodb/DBPort$GenericSaslAuthenticator$CredentialsHandlingCallbackHandler),<init>,MethodDescriptor((com.mongodb.DBPort$GenericSaslAuthenticator): void),com.mongodb.DBPort$GenericSaslAuthenticator$CredentialsHandlingCallbackHandler{ void <init>(com.mongodb.DBPort$GenericSaslAuthenticator) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GenericSaslAuthenticator$CredentialsHandlingCallbackHandler),handle,MethodDescriptor((javax.security.auth.callback.Callback[]): void),com.mongodb.DBPort$GenericSaslAuthenticator$CredentialsHandlingCallbackHandler{ public void handle(javax.security.auth.callback.Callback[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GenericSaslAuthenticator),<init>,MethodDescriptor((com.mongodb.DBPort, com.mongodb.Mongo, com.mongodb.MongoCredential, java.lang.String): void),com.mongodb.DBPort$GenericSaslAuthenticator{ void <init>(com.mongodb.DBPort,com.mongodb.Mongo,com.mongodb.MongoCredential,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GenericSaslAuthenticator),authenticate,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DBPort$SaslAuthenticator{ public com.mongodb.CommandResult authenticate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GenericSaslAuthenticator),createSaslClient,MethodDescriptor((): javax.security.sasl.SaslClient),com.mongodb.DBPort$GenericSaslAuthenticator{ protected javax.security.sasl.SaslClient createSaslClient() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GenericSaslAuthenticator),getDatabase,MethodDescriptor((): com.mongodb.DB),com.mongodb.DBPort$GenericSaslAuthenticator{ protected com.mongodb.DB getDatabase() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$GenericSaslAuthenticator),getMechanismName,MethodDescriptor((): java.lang.String),com.mongodb.DBPort$GenericSaslAuthenticator{ public java.lang.String getMechanismName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBPort$NativeAuthenticator),<init>,MethodDescriptor((com.mongodb.DBPort, com.mongodb.Mongo, com.mongodb.MongoCredential): void),com.mongodb.DBPort$NativeAuthenticator{ void <init>(com.mongodb.DBPort,com.mongodb.Mongo,com.mongodb.MongoCredential) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$NativeAuthenticator),authenticate,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DBPort$NativeAuthenticator{ public com.mongodb.CommandResult authenticate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$SaslAuthenticator),<init>,MethodDescriptor((com.mongodb.DBPort, com.mongodb.Mongo, com.mongodb.MongoCredential): void),com.mongodb.DBPort$SaslAuthenticator{ void <init>(com.mongodb.DBPort,com.mongodb.Mongo,com.mongodb.MongoCredential) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$SaslAuthenticator),authenticate,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DBPort$SaslAuthenticator{ public com.mongodb.CommandResult authenticate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$SaslAuthenticator),sendSaslContinue,MethodDescriptor((int, byte[]): com.mongodb.CommandResult),com.mongodb.DBPort$SaslAuthenticator{ private com.mongodb.CommandResult sendSaslContinue(int,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort$SaslAuthenticator),sendSaslStart,MethodDescriptor((byte[]): com.mongodb.CommandResult),com.mongodb.DBPort$SaslAuthenticator{ private com.mongodb.CommandResult sendSaslStart(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),<clinit>,MethodDescriptor((): void),com.mongodb.DBPort{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),<init>,MethodDescriptor((com.mongodb.ServerAddress): void),com.mongodb.DBPort{ public void <init>(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.DBPortPool, com.mongodb.MongoOptions): void),com.mongodb.DBPort{ void <init>(com.mongodb.ServerAddress,com.mongodb.DBPortPool,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),_open,MethodDescriptor((): void),com.mongodb.DBPort{ void _open() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),authenticate,MethodDescriptor((com.mongodb.Mongo, com.mongodb.MongoCredential): com.mongodb.CommandResult),com.mongodb.DBPort{ com.mongodb.CommandResult authenticate(com.mongodb.Mongo,com.mongodb.MongoCredential) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),call,MethodDescriptor((com.mongodb.OutMessage, com.mongodb.DBCollection): com.mongodb.Response),com.mongodb.DBPort{ com.mongodb.Response call(com.mongodb.OutMessage,com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),call,MethodDescriptor((com.mongodb.OutMessage, com.mongodb.DBCollection, com.mongodb.DBDecoder): com.mongodb.Response),com.mongodb.DBPort{ com.mongodb.Response call(com.mongodb.OutMessage,com.mongodb.DBCollection,com.mongodb.DBDecoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),checkAuth,MethodDescriptor((com.mongodb.Mongo): void),com.mongodb.DBPort{ void checkAuth(com.mongodb.Mongo) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),close,MethodDescriptor((): void),com.mongodb.DBPort{ protected void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),convertToCommandResult,MethodDescriptor((com.mongodb.DBObject, com.mongodb.Response): com.mongodb.CommandResult),com.mongodb.DBPort{ private com.mongodb.CommandResult convertToCommandResult(com.mongodb.DBObject,com.mongodb.Response) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),ensureOpen,MethodDescriptor((): void),com.mongodb.DBPort{ public void ensureOpen() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),finalize,MethodDescriptor((): void),com.mongodb.DBPort{ protected void finalize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),findOne,MethodDescriptor((com.mongodb.DB, java.lang.String, com.mongodb.DBObject): com.mongodb.Response),com.mongodb.DBPort{ private com.mongodb.Response findOne(com.mongodb.DB,java.lang.String,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),getActiveState,MethodDescriptor((): com.mongodb.DBPort$ActiveState),com.mongodb.DBPort{ com.mongodb.DBPort$ActiveState getActiveState() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBPort),getLastError,MethodDescriptor((com.mongodb.DB, com.mongodb.WriteConcern): com.mongodb.CommandResult),com.mongodb.DBPort{ com.mongodb.CommandResult getLastError(com.mongodb.DB,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),getLocalPort,MethodDescriptor((): int),com.mongodb.DBPort{ int getLocalPort() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),getPool,MethodDescriptor((): com.mongodb.DBPortPool),com.mongodb.DBPort{ public com.mongodb.DBPortPool getPool() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBPort),go,MethodDescriptor((com.mongodb.OutMessage, com.mongodb.DBCollection): com.mongodb.Response),com.mongodb.DBPort{ private com.mongodb.Response go(com.mongodb.OutMessage,com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),go,MethodDescriptor((com.mongodb.OutMessage, com.mongodb.DBCollection, boolean, com.mongodb.DBDecoder): com.mongodb.Response),com.mongodb.DBPort{ private com.mongodb.Response go(com.mongodb.OutMessage,com.mongodb.DBCollection,boolean,com.mongodb.DBDecoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),go,MethodDescriptor((com.mongodb.OutMessage, com.mongodb.DBCollection, com.mongodb.DBDecoder): com.mongodb.Response),com.mongodb.DBPort{ private com.mongodb.Response go(com.mongodb.OutMessage,com.mongodb.DBCollection,com.mongodb.DBDecoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),hashCode,MethodDescriptor((): int),com.mongodb.DBPort{ public int hashCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/DBPort),host,MethodDescriptor((): java.lang.String),com.mongodb.DBPort{ public java.lang.String host() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),runCommand,MethodDescriptor((com.mongodb.DB, com.mongodb.DBObject): com.mongodb.CommandResult),com.mongodb.DBPort{ com.mongodb.CommandResult runCommand(com.mongodb.DB,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),say,MethodDescriptor((com.mongodb.OutMessage): void),com.mongodb.DBPort{ void say(com.mongodb.OutMessage) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),serverAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.DBPort{ public com.mongodb.ServerAddress serverAddress() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBPort),toString,MethodDescriptor((): java.lang.String),com.mongodb.DBPort{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPort),tryGetLastError,MethodDescriptor((com.mongodb.DB, long, com.mongodb.WriteConcern): com.mongodb.CommandResult),com.mongodb.DBPort{ com.mongodb.CommandResult tryGetLastError(com.mongodb.DB,long,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool$ConnectionWaitTimeOut),<init>,MethodDescriptor((int): void),com.mongodb.DBPortPool$ConnectionWaitTimeOut{ void <init>(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool$ConnectionWaitTimeOut),getCode,MethodDescriptor((): int),com.mongodb.MongoException{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/DBPortPool$Holder),<clinit>,MethodDescriptor((): void),com.mongodb.DBPortPool$Holder{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool$Holder),<init>,MethodDescriptor((com.mongodb.MongoOptions): void),com.mongodb.DBPortPool$Holder{ void <init>(com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool$Holder),close,MethodDescriptor((): void),com.mongodb.DBPortPool$Holder{ void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool$Holder),createObjectName,MethodDescriptor((com.mongodb.ServerAddress): java.lang.String),com.mongodb.DBPortPool$Holder{ private java.lang.String createObjectName(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool$Holder),createPool,MethodDescriptor((com.mongodb.ServerAddress): com.mongodb.DBPortPool),com.mongodb.DBPortPool$Holder{ private com.mongodb.DBPortPool createPool(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool$Holder),get,MethodDescriptor((com.mongodb.ServerAddress): com.mongodb.DBPortPool),com.mongodb.DBPortPool$Holder{ com.mongodb.DBPortPool get(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool$NoMoreConnection),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.DBPortPool$NoMoreConnection{ void <init>(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/DBPortPool$NoMoreConnection),getCode,MethodDescriptor((): int),com.mongodb.MongoException{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/DBPortPool$SemaphoresOut),<init>,MethodDescriptor((): void),com.mongodb.DBPortPool$SemaphoresOut{ void <init>() }) => DPure
DefinedMethod(ObjectType(com/mongodb/DBPortPool$SemaphoresOut),<init>,MethodDescriptor((int): void),com.mongodb.DBPortPool$SemaphoresOut{ void <init>(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool$SemaphoresOut),getCode,MethodDescriptor((): int),com.mongodb.MongoException{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/DBPortPool),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.MongoOptions): void),com.mongodb.DBPortPool{ void <init>(com.mongodb.ServerAddress,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),access$000,MethodDescriptor((com.mongodb.DBPortPool): void),com.mongodb.DBPortPool{ static void access$000(com.mongodb.DBPortPool) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),cleanup,MethodDescriptor((com.mongodb.DBPort): void),com.mongodb.DBPortPool{ public void cleanup(com.mongodb.DBPort) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),cleanup,MethodDescriptor((java.lang.Object): void),com.mongodb.DBPortPool{ public void cleanup(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),close,MethodDescriptor((): void),com.mongodb.util.SimplePool{ protected void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),createNew,MethodDescriptor((): com.mongodb.DBPort),com.mongodb.DBPortPool{ protected com.mongodb.DBPort createNew() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),createNew,MethodDescriptor((): java.lang.Object),com.mongodb.DBPortPool{ protected java.lang.Object createNew() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),done,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void done(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),get,MethodDescriptor((): com.mongodb.DBPort),com.mongodb.DBPortPool{ public com.mongodb.DBPort get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),get,MethodDescriptor((): java.lang.Object),com.mongodb.DBPortPool{ public java.lang.Object get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),get,MethodDescriptor((long): java.lang.Object),com.mongodb.util.SimplePool{ public java.lang.Object get(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),getAvailable,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getAvailable() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),getHost,MethodDescriptor((): java.lang.String),com.mongodb.DBPortPool{ public java.lang.String getHost() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),getInUse,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getInUse() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),getInUseConnections,MethodDescriptor((): com.mongodb.InUseConnectionBean[]),com.mongodb.DBPortPool{ private com.mongodb.InUseConnectionBean[] getInUseConnections() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),getMaxSize,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getMaxSize() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/DBPortPool),getName,MethodDescriptor((): java.lang.String),com.mongodb.util.SimplePool{ public java.lang.String getName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBPortPool),getPort,MethodDescriptor((): int),com.mongodb.DBPortPool{ public int getPort() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),getServerAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.DBPortPool{ public com.mongodb.ServerAddress getServerAddress() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBPortPool),getStatistics,MethodDescriptor((): com.mongodb.util.ConnectionPoolStatisticsBean),com.mongodb.DBPortPool{ public com.mongodb.util.ConnectionPoolStatisticsBean getStatistics() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),getTotal,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getTotal() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),gotError,MethodDescriptor((java.lang.Exception): boolean),com.mongodb.DBPortPool{ boolean gotError(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),memSize,MethodDescriptor((com.mongodb.DBPort): long),com.mongodb.DBPortPool{ protected long memSize(com.mongodb.DBPort) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/DBPortPool),pick,MethodDescriptor((int, boolean): int),com.mongodb.DBPortPool{ protected int pick(int,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),remove,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBPortPool),toString,MethodDescriptor((): java.lang.String),com.mongodb.util.SimplePool{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRef),<clinit>,MethodDescriptor((): void),com.mongodb.DBRef{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRef),<init>,MethodDescriptor((com.mongodb.DB, java.lang.String, java.lang.Object): void),com.mongodb.DBRef{ public void <init>(com.mongodb.DB,java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRef),<init>,MethodDescriptor((com.mongodb.DB, org.bson.BSONObject): void),com.mongodb.DBRef{ public void <init>(com.mongodb.DB,org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRef),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.DBRefBase{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRef),fetch,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBRefBase{ public com.mongodb.DBObject fetch() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRef),fetch,MethodDescriptor((com.mongodb.DB, com.mongodb.DBObject): com.mongodb.DBObject),com.mongodb.DBRef{ public static com.mongodb.DBObject fetch(com.mongodb.DB,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRef),getDB,MethodDescriptor((): com.mongodb.DB),com.mongodb.DBRefBase{ public com.mongodb.DB getDB() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBRef),getId,MethodDescriptor((): java.lang.Object),com.mongodb.DBRefBase{ public java.lang.Object getId() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBRef),getRef,MethodDescriptor((): java.lang.String),com.mongodb.DBRefBase{ public java.lang.String getRef() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBRef),hashCode,MethodDescriptor((): int),com.mongodb.DBRefBase{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRef),toString,MethodDescriptor((): java.lang.String),com.mongodb.DBRefBase{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRefBase),<init>,MethodDescriptor((com.mongodb.DB, java.lang.String, java.lang.Object): void),com.mongodb.DBRefBase{ public void <init>(com.mongodb.DB,java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRefBase),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.DBRefBase{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRefBase),fetch,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DBRefBase{ public com.mongodb.DBObject fetch() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRefBase),getDB,MethodDescriptor((): com.mongodb.DB),com.mongodb.DBRefBase{ public com.mongodb.DB getDB() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBRefBase),getId,MethodDescriptor((): java.lang.Object),com.mongodb.DBRefBase{ public java.lang.Object getId() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBRefBase),getRef,MethodDescriptor((): java.lang.String),com.mongodb.DBRefBase{ public java.lang.String getRef() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBRefBase),hashCode,MethodDescriptor((): int),com.mongodb.DBRefBase{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBRefBase),toString,MethodDescriptor((): java.lang.String),com.mongodb.DBRefBase{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$MyPort),<init>,MethodDescriptor((com.mongodb.DBTCPConnector): void),com.mongodb.DBTCPConnector$MyPort{ void <init>(com.mongodb.DBTCPConnector) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$MyPort),done,MethodDescriptor((com.mongodb.DBPort): void),com.mongodb.DBTCPConnector$MyPort{ void done(com.mongodb.DBPort) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$MyPort),error,MethodDescriptor((com.mongodb.DBPort, java.lang.Exception): void),com.mongodb.DBTCPConnector$MyPort{ void error(com.mongodb.DBPort,java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$MyPort),get,MethodDescriptor((boolean, com.mongodb.ReadPreference, com.mongodb.ServerAddress): com.mongodb.DBPort),com.mongodb.DBTCPConnector$MyPort{ com.mongodb.DBPort get(boolean,com.mongodb.ReadPreference,com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$MyPort),getPinnedRequestPortForThread,MethodDescriptor((): com.mongodb.DBPort),com.mongodb.DBTCPConnector$MyPort{ com.mongodb.DBPort getPinnedRequestPortForThread() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$MyPort),getPinnedRequestStatusForThread,MethodDescriptor((): com.mongodb.DBTCPConnector$PinnedRequestStatus),com.mongodb.DBTCPConnector$MyPort{ com.mongodb.DBTCPConnector$PinnedRequestStatus getPinnedRequestStatusForThread() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$MyPort),requestDone,MethodDescriptor((): void),com.mongodb.DBTCPConnector$MyPort{ void requestDone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$MyPort),requestEnsureConnection,MethodDescriptor((): void),com.mongodb.DBTCPConnector$MyPort{ void requestEnsureConnection() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$MyPort),requestStart,MethodDescriptor((): void),com.mongodb.DBTCPConnector$MyPort{ void requestStart() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$MyPort),setPinnedRequestPortForThread,MethodDescriptor((com.mongodb.DBPort): void),com.mongodb.DBTCPConnector$MyPort{ void setPinnedRequestPortForThread(com.mongodb.DBPort) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$MyPort),threadHasPinnedRequest,MethodDescriptor((): boolean),com.mongodb.DBTCPConnector$MyPort{ boolean threadHasPinnedRequest() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector$PinnedRequestStatus),<init>,MethodDescriptor((): void),com.mongodb.DBTCPConnector$PinnedRequestStatus{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),<clinit>,MethodDescriptor((): void),com.mongodb.DBTCPConnector{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),<init>,MethodDescriptor((com.mongodb.Mongo): void),com.mongodb.DBTCPConnector{ public void <init>(com.mongodb.Mongo) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),_checkClosed,MethodDescriptor((): void),com.mongodb.DBTCPConnector{ void _checkClosed() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),_checkWriteError,MethodDescriptor((com.mongodb.DB, com.mongodb.DBPort, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBTCPConnector{ com.mongodb.WriteResult _checkWriteError(com.mongodb.DB,com.mongodb.DBPort,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),_error,MethodDescriptor((java.lang.Throwable, boolean): boolean),com.mongodb.DBTCPConnector{ boolean _error(java.lang.Throwable,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),access$000,MethodDescriptor((com.mongodb.DBTCPConnector): com.mongodb.DBPortPool$Holder),com.mongodb.DBTCPConnector{ static com.mongodb.DBPortPool$Holder access$000(com.mongodb.DBTCPConnector) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),access$100,MethodDescriptor((com.mongodb.DBTCPConnector): com.mongodb.DBPortPool),com.mongodb.DBTCPConnector{ static com.mongodb.DBPortPool access$100(com.mongodb.DBTCPConnector) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),access$200,MethodDescriptor((com.mongodb.DBTCPConnector): com.mongodb.ConnectionStatus),com.mongodb.DBTCPConnector{ static com.mongodb.ConnectionStatus access$200(com.mongodb.DBTCPConnector) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),authenticate,MethodDescriptor((com.mongodb.MongoCredential): com.mongodb.CommandResult),com.mongodb.DBTCPConnector{ public com.mongodb.CommandResult authenticate(com.mongodb.MongoCredential) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),call,MethodDescriptor((com.mongodb.DB, com.mongodb.DBCollection, com.mongodb.OutMessage, com.mongodb.ServerAddress, com.mongodb.DBDecoder): com.mongodb.Response),com.mongodb.DBTCPConnector{ public com.mongodb.Response call(com.mongodb.DB,com.mongodb.DBCollection,com.mongodb.OutMessage,com.mongodb.ServerAddress,com.mongodb.DBDecoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),call,MethodDescriptor((com.mongodb.DB, com.mongodb.DBCollection, com.mongodb.OutMessage, com.mongodb.ServerAddress, int): com.mongodb.Response),com.mongodb.DBTCPConnector{ public com.mongodb.Response call(com.mongodb.DB,com.mongodb.DBCollection,com.mongodb.OutMessage,com.mongodb.ServerAddress,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),call,MethodDescriptor((com.mongodb.DB, com.mongodb.DBCollection, com.mongodb.OutMessage, com.mongodb.ServerAddress, int, com.mongodb.ReadPreference, com.mongodb.DBDecoder): com.mongodb.Response),com.mongodb.DBTCPConnector{ public com.mongodb.Response call(com.mongodb.DB,com.mongodb.DBCollection,com.mongodb.OutMessage,com.mongodb.ServerAddress,int,com.mongodb.ReadPreference,com.mongodb.DBDecoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),checkMaster,MethodDescriptor((boolean, boolean): void),com.mongodb.DBTCPConnector{ void checkMaster(boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),close,MethodDescriptor((): void),com.mongodb.DBTCPConnector{ public void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),debugString,MethodDescriptor((): java.lang.String),com.mongodb.DBTCPConnector{ public java.lang.String debugString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),getAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.DBTCPConnector{ public com.mongodb.ServerAddress getAddress() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),getAllAddress,MethodDescriptor((): java.util.List),com.mongodb.DBTCPConnector{ public java.util.List getAllAddress() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),getConnectPoint,MethodDescriptor((): java.lang.String),com.mongodb.DBTCPConnector{ public java.lang.String getConnectPoint() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),getDBPortPool,MethodDescriptor((com.mongodb.ServerAddress): com.mongodb.DBPortPool),com.mongodb.DBTCPConnector{ public com.mongodb.DBPortPool getDBPortPool(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),getMaxBsonObjectSize,MethodDescriptor((): int),com.mongodb.DBTCPConnector{ public int getMaxBsonObjectSize() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),getMyPort,MethodDescriptor((): com.mongodb.DBTCPConnector$MyPort),com.mongodb.DBTCPConnector{ com.mongodb.DBTCPConnector$MyPort getMyPort() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),getReplicaSetStatus,MethodDescriptor((): com.mongodb.ReplicaSetStatus),com.mongodb.DBTCPConnector{ public com.mongodb.ReplicaSetStatus getReplicaSetStatus() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),getServerAddressList,MethodDescriptor((): java.util.List),com.mongodb.DBTCPConnector{ public java.util.List getServerAddressList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),initDirectConnection,MethodDescriptor((): void),com.mongodb.DBTCPConnector{ void initDirectConnection() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),innerCall,MethodDescriptor((com.mongodb.DB, com.mongodb.DBCollection, com.mongodb.OutMessage, com.mongodb.ServerAddress, int, com.mongodb.ReadPreference, com.mongodb.DBDecoder): com.mongodb.Response),com.mongodb.DBTCPConnector{ private com.mongodb.Response innerCall(com.mongodb.DB,com.mongodb.DBCollection,com.mongodb.OutMessage,com.mongodb.ServerAddress,int,com.mongodb.ReadPreference,com.mongodb.DBDecoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),isMongosConnection,MethodDescriptor((): boolean),com.mongodb.DBTCPConnector{ boolean isMongosConnection() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),isOpen,MethodDescriptor((): boolean),com.mongodb.DBTCPConnector{ public boolean isOpen() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),requestDone,MethodDescriptor((): void),com.mongodb.DBTCPConnector{ public void requestDone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),requestEnsureConnection,MethodDescriptor((): void),com.mongodb.DBTCPConnector{ public void requestEnsureConnection() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),requestStart,MethodDescriptor((): void),com.mongodb.DBTCPConnector{ public void requestStart() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),say,MethodDescriptor((com.mongodb.DB, com.mongodb.OutMessage, com.mongodb.WriteConcern): com.mongodb.WriteResult),com.mongodb.DBTCPConnector{ public com.mongodb.WriteResult say(com.mongodb.DB,com.mongodb.OutMessage,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),say,MethodDescriptor((com.mongodb.DB, com.mongodb.OutMessage, com.mongodb.WriteConcern, com.mongodb.ServerAddress): com.mongodb.WriteResult),com.mongodb.DBTCPConnector{ public com.mongodb.WriteResult say(com.mongodb.DB,com.mongodb.OutMessage,com.mongodb.WriteConcern,com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),setMaster,MethodDescriptor((com.mongodb.ConnectionStatus$Node): void),com.mongodb.DBTCPConnector{ void setMaster(com.mongodb.ConnectionStatus$Node) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),setMasterAddress,MethodDescriptor((com.mongodb.ServerAddress): boolean),com.mongodb.DBTCPConnector{ private boolean setMasterAddress(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),start,MethodDescriptor((): void),com.mongodb.DBTCPConnector{ public void start() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DBTCPConnector),updatePortPool,MethodDescriptor((com.mongodb.ServerAddress): void),com.mongodb.DBTCPConnector{ public void updatePortPool(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback$DefaultFactory),<init>,MethodDescriptor((): void),com.mongodb.DefaultDBCallback$DefaultFactory{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback$DefaultFactory),create,MethodDescriptor((com.mongodb.DBCollection): com.mongodb.DBCallback),com.mongodb.DefaultDBCallback$DefaultFactory{ public com.mongodb.DBCallback create(com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),<clinit>,MethodDescriptor((): void),com.mongodb.DefaultDBCallback{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),<init>,MethodDescriptor((com.mongodb.DBCollection): void),com.mongodb.DefaultDBCallback{ public void <init>(com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),_create,MethodDescriptor((java.util.List): com.mongodb.DBObject),com.mongodb.DefaultDBCallback{ private com.mongodb.DBObject _create(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),_put,MethodDescriptor((java.lang.String, java.lang.Object): void),org.bson.BasicBSONCallback{ protected void _put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),arrayDone,MethodDescriptor((): java.lang.Object),org.bson.BasicBSONCallback{ public java.lang.Object arrayDone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),arrayStart,MethodDescriptor((): void),org.bson.BasicBSONCallback{ public void arrayStart() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),arrayStart,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void arrayStart(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),create,MethodDescriptor((): org.bson.BSONObject),com.mongodb.DefaultDBCallback{ public org.bson.BSONObject create() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),create,MethodDescriptor((boolean, java.util.List): org.bson.BSONObject),com.mongodb.DefaultDBCallback{ public org.bson.BSONObject create(boolean,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),createBSONCallback,MethodDescriptor((): org.bson.BSONCallback),org.bson.BasicBSONCallback{ public org.bson.BSONCallback createBSONCallback() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),createList,MethodDescriptor((): org.bson.BSONObject),org.bson.BasicBSONCallback{ protected org.bson.BSONObject createList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),cur,MethodDescriptor((): org.bson.BSONObject),org.bson.BasicBSONCallback{ protected org.bson.BSONObject cur() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),curName,MethodDescriptor((): java.lang.String),org.bson.BasicBSONCallback{ protected java.lang.String curName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),dbget,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.DefaultDBCallback{ com.mongodb.DBObject dbget() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),get,MethodDescriptor((): java.lang.Object),org.bson.BasicBSONCallback{ public java.lang.Object get() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotBinary,MethodDescriptor((java.lang.String, byte, byte[]): void),org.bson.BasicBSONCallback{ public void gotBinary(java.lang.String,byte,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotBinaryArray,MethodDescriptor((java.lang.String, byte[]): void),org.bson.BasicBSONCallback{ public void gotBinaryArray(java.lang.String,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotBoolean,MethodDescriptor((java.lang.String, boolean): void),org.bson.BasicBSONCallback{ public void gotBoolean(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotCode,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotCode(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotCodeWScope,MethodDescriptor((java.lang.String, java.lang.String, java.lang.Object): void),org.bson.BasicBSONCallback{ public void gotCodeWScope(java.lang.String,java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotDBRef,MethodDescriptor((java.lang.String, java.lang.String, org.bson.types.ObjectId): void),com.mongodb.DefaultDBCallback{ public void gotDBRef(java.lang.String,java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotDate,MethodDescriptor((java.lang.String, long): void),org.bson.BasicBSONCallback{ public void gotDate(java.lang.String,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotDouble,MethodDescriptor((java.lang.String, double): void),org.bson.BasicBSONCallback{ public void gotDouble(java.lang.String,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotInt,MethodDescriptor((java.lang.String, int): void),org.bson.BasicBSONCallback{ public void gotInt(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotLong,MethodDescriptor((java.lang.String, long): void),org.bson.BasicBSONCallback{ public void gotLong(java.lang.String,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotMaxKey,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotMaxKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotMinKey,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotMinKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotNull,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotNull(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): void),org.bson.BasicBSONCallback{ public void gotObjectId(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotRegex,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotRegex(java.lang.String,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotString,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotString(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotSymbol,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotSymbol(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotTimestamp,MethodDescriptor((java.lang.String, int, int): void),org.bson.BasicBSONCallback{ public void gotTimestamp(java.lang.String,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotUUID,MethodDescriptor((java.lang.String, long, long): void),org.bson.BasicBSONCallback{ public void gotUUID(java.lang.String,long,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),gotUndefined,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotUndefined(java.lang.String) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),isStackEmpty,MethodDescriptor((): boolean),org.bson.BasicBSONCallback{ protected boolean isStackEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),objectDone,MethodDescriptor((): java.lang.Object),com.mongodb.DefaultDBCallback{ public java.lang.Object objectDone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),objectStart,MethodDescriptor((): void),org.bson.BasicBSONCallback{ public void objectStart() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),objectStart,MethodDescriptor((boolean): void),org.bson.BasicBSONCallback{ public void objectStart(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),objectStart,MethodDescriptor((boolean, java.lang.String): void),com.mongodb.DefaultDBCallback{ public void objectStart(boolean,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),objectStart,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void objectStart(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),reset,MethodDescriptor((): void),com.mongodb.DefaultDBCallback{ public void reset() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBCallback),setRoot,MethodDescriptor((java.lang.Object): void),org.bson.BasicBSONCallback{ protected void setRoot(java.lang.Object) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder$DefaultFactory),<init>,MethodDescriptor((): void),com.mongodb.DefaultDBDecoder$DefaultFactory{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder$DefaultFactory),create,MethodDescriptor((): com.mongodb.DBDecoder),com.mongodb.DefaultDBDecoder$DefaultFactory{ public com.mongodb.DBDecoder create() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder$DefaultFactory),toString,MethodDescriptor((): java.lang.String),com.mongodb.DefaultDBDecoder$DefaultFactory{ public java.lang.String toString() }) => Pure
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),<clinit>,MethodDescriptor((): void),com.mongodb.DefaultDBDecoder{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),<init>,MethodDescriptor((): void),com.mongodb.DefaultDBDecoder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),_binary,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONDecoder{ protected void _binary(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),_readBasicObject,MethodDescriptor((): java.lang.Object),org.bson.BasicBSONDecoder{ java.lang.Object _readBasicObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),decode,MethodDescriptor((boolean): int),org.bson.BasicBSONDecoder{ int decode(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),decode,MethodDescriptor((byte[], com.mongodb.DBCollection): com.mongodb.DBObject),com.mongodb.DefaultDBDecoder{ public com.mongodb.DBObject decode(byte[],com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),decode,MethodDescriptor((byte[], org.bson.BSONCallback): int),org.bson.BasicBSONDecoder{ public int decode(byte[],org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),decode,MethodDescriptor((java.io.InputStream, com.mongodb.DBCollection): com.mongodb.DBObject),com.mongodb.DefaultDBDecoder{ public com.mongodb.DBObject decode(java.io.InputStream,com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),decode,MethodDescriptor((java.io.InputStream, org.bson.BSONCallback): int),org.bson.BasicBSONDecoder{ public int decode(java.io.InputStream,org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),decodeElement,MethodDescriptor((): boolean),org.bson.BasicBSONDecoder{ boolean decodeElement() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),getDBCallback,MethodDescriptor((com.mongodb.DBCollection): com.mongodb.DBCallback),com.mongodb.DefaultDBDecoder{ public com.mongodb.DBCallback getDBCallback(com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),readObject,MethodDescriptor((byte[]): org.bson.BSONObject),org.bson.BasicBSONDecoder{ public org.bson.BSONObject readObject(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),readObject,MethodDescriptor((java.io.InputStream): org.bson.BSONObject),org.bson.BasicBSONDecoder{ public org.bson.BSONObject readObject(java.io.InputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBDecoder),toString,MethodDescriptor((): java.lang.String),com.mongodb.DefaultDBDecoder{ public java.lang.String toString() }) => Pure
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder$DefaultFactory),<init>,MethodDescriptor((): void),com.mongodb.DefaultDBEncoder$DefaultFactory{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder$DefaultFactory),create,MethodDescriptor((): com.mongodb.DBEncoder),com.mongodb.DefaultDBEncoder$DefaultFactory{ public com.mongodb.DBEncoder create() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder$DefaultFactory),toString,MethodDescriptor((): java.lang.String),com.mongodb.DefaultDBEncoder$DefaultFactory{ public java.lang.String toString() }) => Pure
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),<clinit>,MethodDescriptor((): void),com.mongodb.DefaultDBEncoder{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),<init>,MethodDescriptor((): void),com.mongodb.DefaultDBEncoder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),_put,MethodDescriptor((byte, java.lang.String): void),org.bson.BasicBSONEncoder{ protected void _put(byte,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),_put,MethodDescriptor((java.lang.String): int),org.bson.BasicBSONEncoder{ protected int _put(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),_putObjectField,MethodDescriptor((java.lang.String, java.lang.Object): void),org.bson.BasicBSONEncoder{ protected void _putObjectField(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),_putValueString,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ protected void _putValueString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),_reset,MethodDescriptor((java.nio.Buffer): void),org.bson.BasicBSONEncoder{ void _reset(java.nio.Buffer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),done,MethodDescriptor((): void),org.bson.BasicBSONEncoder{ public void done() }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),encode,MethodDescriptor((org.bson.BSONObject): byte[]),org.bson.BasicBSONEncoder{ public byte[] encode(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),handleSpecialObjects,MethodDescriptor((java.lang.String, org.bson.BSONObject): boolean),org.bson.BasicBSONEncoder{ protected boolean handleSpecialObjects(java.lang.String,org.bson.BSONObject) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putBinary,MethodDescriptor((java.lang.String, byte[]): void),org.bson.BasicBSONEncoder{ protected void putBinary(java.lang.String,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putBinary,MethodDescriptor((java.lang.String, org.bson.types.Binary): void),org.bson.BasicBSONEncoder{ protected void putBinary(java.lang.String,org.bson.types.Binary) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putBoolean,MethodDescriptor((java.lang.String, java.lang.Boolean): void),org.bson.BasicBSONEncoder{ protected void putBoolean(java.lang.String,java.lang.Boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putCode,MethodDescriptor((java.lang.String, org.bson.types.Code): void),org.bson.BasicBSONEncoder{ protected void putCode(java.lang.String,org.bson.types.Code) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putCodeWScope,MethodDescriptor((java.lang.String, org.bson.types.CodeWScope): void),org.bson.BasicBSONEncoder{ protected void putCodeWScope(java.lang.String,org.bson.types.CodeWScope) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putDBPointer,MethodDescriptor((java.lang.String, java.lang.String, org.bson.types.ObjectId): void),com.mongodb.DefaultDBEncoder{ protected void putDBPointer(java.lang.String,java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putDBRef,MethodDescriptor((java.lang.String, com.mongodb.DBRefBase): void),com.mongodb.DefaultDBEncoder{ protected void putDBRef(java.lang.String,com.mongodb.DBRefBase) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putDate,MethodDescriptor((java.lang.String, java.util.Date): void),org.bson.BasicBSONEncoder{ protected void putDate(java.lang.String,java.util.Date) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putNull,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ protected void putNull(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putNumber,MethodDescriptor((java.lang.String, java.lang.Number): void),org.bson.BasicBSONEncoder{ protected void putNumber(java.lang.String,java.lang.Number) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putObject,MethodDescriptor((java.lang.String, org.bson.BSONObject): int),org.bson.BasicBSONEncoder{ protected int putObject(java.lang.String,org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putObject,MethodDescriptor((org.bson.BSONObject): int),org.bson.BasicBSONEncoder{ public int putObject(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): void),org.bson.BasicBSONEncoder{ protected void putObjectId(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putSpecial,MethodDescriptor((java.lang.String, java.lang.Object): boolean),com.mongodb.DefaultDBEncoder{ protected boolean putSpecial(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putString,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONEncoder{ protected void putString(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putSymbol,MethodDescriptor((java.lang.String, org.bson.types.Symbol): void),org.bson.BasicBSONEncoder{ protected void putSymbol(java.lang.String,org.bson.types.Symbol) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putTimestamp,MethodDescriptor((java.lang.String, org.bson.types.BSONTimestamp): void),org.bson.BasicBSONEncoder{ protected void putTimestamp(java.lang.String,org.bson.types.BSONTimestamp) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putUUID,MethodDescriptor((java.lang.String, java.util.UUID): void),org.bson.BasicBSONEncoder{ protected void putUUID(java.lang.String,java.util.UUID) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),putUndefined,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ protected void putUndefined(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),set,MethodDescriptor((org.bson.io.OutputBuffer): void),org.bson.BasicBSONEncoder{ public void set(org.bson.io.OutputBuffer) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),toString,MethodDescriptor((): java.lang.String),com.mongodb.DefaultDBEncoder{ public java.lang.String toString() }) => Pure
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),writeCString,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ public void writeCString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),writeInt,MethodDescriptor((int): void),org.bson.BasicBSONEncoder{ public void writeInt(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),writeLong,MethodDescriptor((long): void),org.bson.BasicBSONEncoder{ public void writeLong(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DefaultDBEncoder),writeObject,MethodDescriptor((org.bson.io.OutputBuffer, org.bson.BSONObject): int),com.mongodb.DefaultDBEncoder{ public int writeObject(org.bson.io.OutputBuffer,org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus$1),<init>,MethodDescriptor((com.mongodb.DynamicConnectionStatus, com.mongodb.ServerAddress): void),com.mongodb.DynamicConnectionStatus$1{ void <init>(com.mongodb.DynamicConnectionStatus,com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus$1),run,MethodDescriptor((): void),com.mongodb.DynamicConnectionStatus$1{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus$DynamicNode),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.Mongo, com.mongodb.MongoOptions): void),com.mongodb.DynamicConnectionStatus$DynamicNode{ void <init>(com.mongodb.ServerAddress,com.mongodb.Mongo,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus$DynamicNode),access$200,MethodDescriptor((com.mongodb.DynamicConnectionStatus$DynamicNode): boolean),com.mongodb.DynamicConnectionStatus$DynamicNode{ static boolean access$200(com.mongodb.DynamicConnectionStatus$DynamicNode) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus$DynamicNode),getLogger,MethodDescriptor((): java.util.logging.Logger),com.mongodb.DynamicConnectionStatus$DynamicNode{ protected java.util.logging.Logger getLogger() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus$DynamicNode),isOk,MethodDescriptor((): boolean),com.mongodb.ConnectionStatus$UpdatableNode{ public boolean isOk() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus$DynamicNode),update,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.DynamicConnectionStatus$DynamicNode{ public com.mongodb.CommandResult update() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),<clinit>,MethodDescriptor((): void),com.mongodb.DynamicConnectionStatus{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),<init>,MethodDescriptor((com.mongodb.Mongo, java.util.List): void),com.mongodb.DynamicConnectionStatus{ void <init>(com.mongodb.Mongo,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),access$000,MethodDescriptor((com.mongodb.DynamicConnectionStatus, com.mongodb.DynamicConnectionStatus$DynamicNode): void),com.mongodb.DynamicConnectionStatus{ static void access$000(com.mongodb.DynamicConnectionStatus,com.mongodb.DynamicConnectionStatus$DynamicNode) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),access$100,MethodDescriptor((): java.util.logging.Logger),com.mongodb.DynamicConnectionStatus{ static java.util.logging.Logger access$100() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),asMongosStatus,MethodDescriptor((): com.mongodb.MongosStatus),com.mongodb.DynamicConnectionStatus{ com.mongodb.MongosStatus asMongosStatus() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),asReplicaSetStatus,MethodDescriptor((): com.mongodb.ReplicaSetStatus),com.mongodb.DynamicConnectionStatus{ com.mongodb.ReplicaSetStatus asReplicaSetStatus() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),checkClosed,MethodDescriptor((): void),com.mongodb.ConnectionStatus{ void checkClosed() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),close,MethodDescriptor((): void),com.mongodb.DynamicConnectionStatus{ void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),ensureMaster,MethodDescriptor((): com.mongodb.ConnectionStatus$Node),com.mongodb.DynamicConnectionStatus{ com.mongodb.ConnectionStatus$Node ensureMaster() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),getConnectionStatus,MethodDescriptor((): com.mongodb.ConnectionStatus),com.mongodb.DynamicConnectionStatus{ private com.mongodb.ConnectionStatus getConnectionStatus() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),getServerAddressList,MethodDescriptor((): java.util.List),com.mongodb.DynamicConnectionStatus{ java.util.List getServerAddressList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),hasServerUp,MethodDescriptor((): boolean),com.mongodb.DynamicConnectionStatus{ boolean hasServerUp() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),initExecutorService,MethodDescriptor((): void),com.mongodb.DynamicConnectionStatus{ void initExecutorService() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),notifyOfOkNode,MethodDescriptor((com.mongodb.DynamicConnectionStatus$DynamicNode): void),com.mongodb.DynamicConnectionStatus{ private void notifyOfOkNode(com.mongodb.DynamicConnectionStatus$DynamicNode) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/DynamicConnectionStatus),start,MethodDescriptor((): void),com.mongodb.DynamicConnectionStatus{ void start() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/GroupCommand),<init>,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.DBObject, java.lang.String, java.lang.String): void),com.mongodb.GroupCommand{ public void <init>(com.mongodb.DBCollection,com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/GroupCommand),toDBObject,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.GroupCommand{ public com.mongodb.DBObject toDBObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/InUseConnectionBean),<init>,MethodDescriptor((com.mongodb.DBPort, long): void),com.mongodb.InUseConnectionBean{ void <init>(com.mongodb.DBPort,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/InUseConnectionBean),getDurationMS,MethodDescriptor((): long),com.mongodb.InUseConnectionBean{ public long getDurationMS() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/InUseConnectionBean),getLocalPort,MethodDescriptor((): int),com.mongodb.InUseConnectionBean{ public int getLocalPort() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/InUseConnectionBean),getNamespace,MethodDescriptor((): java.lang.String),com.mongodb.InUseConnectionBean{ public java.lang.String getNamespace() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/InUseConnectionBean),getNumDocuments,MethodDescriptor((): int),com.mongodb.InUseConnectionBean{ public int getNumDocuments() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/InUseConnectionBean),getOpCode,MethodDescriptor((): com.mongodb.OutMessage$OpCode),com.mongodb.InUseConnectionBean{ public com.mongodb.OutMessage$OpCode getOpCode() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/InUseConnectionBean),getQuery,MethodDescriptor((): java.lang.String),com.mongodb.InUseConnectionBean{ public java.lang.String getQuery() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/InUseConnectionBean),getThreadName,MethodDescriptor((): java.lang.String),com.mongodb.InUseConnectionBean{ public java.lang.String getThreadName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.MongoOptions): void),com.mongodb.Java5MongoConnectionPool{ void <init>(com.mongodb.ServerAddress,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),cleanup,MethodDescriptor((com.mongodb.DBPort): void),com.mongodb.DBPortPool{ public void cleanup(com.mongodb.DBPort) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),cleanup,MethodDescriptor((java.lang.Object): void),com.mongodb.DBPortPool{ public void cleanup(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),close,MethodDescriptor((): void),com.mongodb.util.SimplePool{ protected void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),createNew,MethodDescriptor((): com.mongodb.DBPort),com.mongodb.DBPortPool{ protected com.mongodb.DBPort createNew() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),createNew,MethodDescriptor((): java.lang.Object),com.mongodb.DBPortPool{ protected java.lang.Object createNew() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),done,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void done(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),get,MethodDescriptor((): com.mongodb.DBPort),com.mongodb.DBPortPool{ public com.mongodb.DBPort get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),get,MethodDescriptor((): java.lang.Object),com.mongodb.DBPortPool{ public java.lang.Object get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),get,MethodDescriptor((long): java.lang.Object),com.mongodb.util.SimplePool{ public java.lang.Object get(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),getAvailable,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getAvailable() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),getHost,MethodDescriptor((): java.lang.String),com.mongodb.DBPortPool{ public java.lang.String getHost() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),getInUse,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getInUse() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),getMaxSize,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getMaxSize() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),getName,MethodDescriptor((): java.lang.String),com.mongodb.util.SimplePool{ public java.lang.String getName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),getPort,MethodDescriptor((): int),com.mongodb.DBPortPool{ public int getPort() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),getServerAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.DBPortPool{ public com.mongodb.ServerAddress getServerAddress() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),getStatistics,MethodDescriptor((): com.mongodb.util.ConnectionPoolStatisticsBean),com.mongodb.DBPortPool{ public com.mongodb.util.ConnectionPoolStatisticsBean getStatistics() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),getTotal,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getTotal() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),gotError,MethodDescriptor((java.lang.Exception): boolean),com.mongodb.DBPortPool{ boolean gotError(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),memSize,MethodDescriptor((com.mongodb.DBPort): long),com.mongodb.DBPortPool{ protected long memSize(com.mongodb.DBPort) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),pick,MethodDescriptor((int, boolean): int),com.mongodb.DBPortPool{ protected int pick(int,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),remove,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Java5MongoConnectionPool),toString,MethodDescriptor((): java.lang.String),com.mongodb.util.SimplePool{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),<clinit>,MethodDescriptor((): void),com.mongodb.LazyDBCallback{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),<init>,MethodDescriptor((com.mongodb.DBCollection): void),com.mongodb.LazyDBCallback{ public void <init>(com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),arrayDone,MethodDescriptor((): java.lang.Object),org.bson.EmptyBSONCallback{ public java.lang.Object arrayDone() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),arrayStart,MethodDescriptor((): void),org.bson.EmptyBSONCallback{ public void arrayStart() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),arrayStart,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void arrayStart(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),createArray,MethodDescriptor((byte[], int): java.util.List),org.bson.LazyBSONCallback{ public java.util.List createArray(byte[],int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),createBSONCallback,MethodDescriptor((): org.bson.BSONCallback),org.bson.EmptyBSONCallback{ public org.bson.BSONCallback createBSONCallback() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),createDBRef,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): java.lang.Object),com.mongodb.LazyDBCallback{ public java.lang.Object createDBRef(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),createObject,MethodDescriptor((byte[], int): java.lang.Object),com.mongodb.LazyDBCallback{ public java.lang.Object createObject(byte[],int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),get,MethodDescriptor((): java.lang.Object),org.bson.LazyBSONCallback{ public java.lang.Object get() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotBinary,MethodDescriptor((java.lang.String, byte, byte[]): void),org.bson.LazyBSONCallback{ public void gotBinary(java.lang.String,byte,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotBinaryArray,MethodDescriptor((java.lang.String, byte[]): void),org.bson.EmptyBSONCallback{ public void gotBinaryArray(java.lang.String,byte[]) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotBoolean,MethodDescriptor((java.lang.String, boolean): void),org.bson.EmptyBSONCallback{ public void gotBoolean(java.lang.String,boolean) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotCode,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotCode(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotCodeWScope,MethodDescriptor((java.lang.String, java.lang.String, java.lang.Object): void),org.bson.EmptyBSONCallback{ public void gotCodeWScope(java.lang.String,java.lang.String,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotDBRef,MethodDescriptor((java.lang.String, java.lang.String, org.bson.types.ObjectId): void),org.bson.EmptyBSONCallback{ public void gotDBRef(java.lang.String,java.lang.String,org.bson.types.ObjectId) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotDate,MethodDescriptor((java.lang.String, long): void),org.bson.EmptyBSONCallback{ public void gotDate(java.lang.String,long) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotDouble,MethodDescriptor((java.lang.String, double): void),org.bson.EmptyBSONCallback{ public void gotDouble(java.lang.String,double) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotInt,MethodDescriptor((java.lang.String, int): void),org.bson.EmptyBSONCallback{ public void gotInt(java.lang.String,int) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotLong,MethodDescriptor((java.lang.String, long): void),org.bson.EmptyBSONCallback{ public void gotLong(java.lang.String,long) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotMaxKey,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotMaxKey(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotMinKey,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotMinKey(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotNull,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotNull(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): void),org.bson.EmptyBSONCallback{ public void gotObjectId(java.lang.String,org.bson.types.ObjectId) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotRegex,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotRegex(java.lang.String,java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotString,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotString(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotSymbol,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotSymbol(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotTimestamp,MethodDescriptor((java.lang.String, int, int): void),org.bson.EmptyBSONCallback{ public void gotTimestamp(java.lang.String,int,int) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotUUID,MethodDescriptor((java.lang.String, long, long): void),org.bson.EmptyBSONCallback{ public void gotUUID(java.lang.String,long,long) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),gotUndefined,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotUndefined(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),objectDone,MethodDescriptor((): java.lang.Object),org.bson.LazyBSONCallback{ public java.lang.Object objectDone() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),objectStart,MethodDescriptor((): void),org.bson.LazyBSONCallback{ public void objectStart() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),objectStart,MethodDescriptor((boolean): void),org.bson.LazyBSONCallback{ public void objectStart(boolean) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),objectStart,MethodDescriptor((java.lang.String): void),org.bson.LazyBSONCallback{ public void objectStart(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),reset,MethodDescriptor((): void),org.bson.LazyBSONCallback{ public void reset() }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/LazyDBCallback),setRootObject,MethodDescriptor((java.lang.Object): void),org.bson.LazyBSONCallback{ public void setRootObject(java.lang.Object) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/LazyDBDecoder$LazyDBDecoderFactory),<init>,MethodDescriptor((): void),com.mongodb.LazyDBDecoder$LazyDBDecoderFactory{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBDecoder$LazyDBDecoderFactory),create,MethodDescriptor((): com.mongodb.DBDecoder),com.mongodb.LazyDBDecoder$LazyDBDecoderFactory{ public com.mongodb.DBDecoder create() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBDecoder),<clinit>,MethodDescriptor((): void),com.mongodb.LazyDBDecoder{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBDecoder),<init>,MethodDescriptor((): void),com.mongodb.LazyDBDecoder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBDecoder),decode,MethodDescriptor((byte[], com.mongodb.DBCollection): com.mongodb.DBObject),com.mongodb.LazyDBDecoder{ public com.mongodb.DBObject decode(byte[],com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBDecoder),decode,MethodDescriptor((byte[], org.bson.BSONCallback): int),org.bson.LazyBSONDecoder{ public int decode(byte[],org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBDecoder),decode,MethodDescriptor((java.io.InputStream, com.mongodb.DBCollection): com.mongodb.DBObject),com.mongodb.LazyDBDecoder{ public com.mongodb.DBObject decode(java.io.InputStream,com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBDecoder),decode,MethodDescriptor((java.io.InputStream, org.bson.BSONCallback): int),org.bson.LazyBSONDecoder{ public int decode(java.io.InputStream,org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBDecoder),getDBCallback,MethodDescriptor((com.mongodb.DBCollection): com.mongodb.DBCallback),com.mongodb.LazyDBDecoder{ public com.mongodb.DBCallback getDBCallback(com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBDecoder),readObject,MethodDescriptor((byte[]): org.bson.BSONObject),org.bson.LazyBSONDecoder{ public org.bson.BSONObject readObject(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBDecoder),readObject,MethodDescriptor((java.io.InputStream): org.bson.BSONObject),org.bson.LazyBSONDecoder{ public org.bson.BSONObject readObject(java.io.InputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBEncoder),<init>,MethodDescriptor((): void),com.mongodb.LazyDBEncoder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBEncoder),writeObject,MethodDescriptor((org.bson.io.OutputBuffer, org.bson.BSONObject): int),com.mongodb.LazyDBEncoder{ public int writeObject(org.bson.io.OutputBuffer,org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),<init>,MethodDescriptor((byte[], int, org.bson.LazyBSONCallback): void),com.mongodb.LazyDBObject{ public void <init>(byte[],int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),<init>,MethodDescriptor((byte[], org.bson.LazyBSONCallback): void),com.mongodb.LazyDBObject{ public void <init>(byte[],org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, int, org.bson.LazyBSONCallback): void),com.mongodb.LazyDBObject{ public void <init>(org.bson.io.BSONByteBuffer,int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, org.bson.LazyBSONCallback): void),com.mongodb.LazyDBObject{ public void <init>(org.bson.io.BSONByteBuffer,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),containsField,MethodDescriptor((java.lang.String): boolean),org.bson.LazyBSONObject{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),containsKey,MethodDescriptor((java.lang.String): boolean),org.bson.LazyBSONObject{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),entrySet,MethodDescriptor((): java.util.Set),org.bson.LazyBSONObject{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),get,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),getBSONSize,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int getBSONSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),getElement,MethodDescriptor((java.lang.String): org.bson.LazyBSONObject$ElementRecord),org.bson.LazyBSONObject{ org.bson.LazyBSONObject$ElementRecord getElement(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),getElementBSONSize,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int getElementBSONSize(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),getElementType,MethodDescriptor((int): byte),org.bson.LazyBSONObject{ protected byte getElementType(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),getElementValue,MethodDescriptor((org.bson.LazyBSONObject$ElementRecord): java.lang.Object),org.bson.LazyBSONObject{ protected java.lang.Object getElementValue(org.bson.LazyBSONObject$ElementRecord) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),getElements,MethodDescriptor((): java.util.List),org.bson.LazyBSONObject{ java.util.List getElements() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),hashCode,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),isElementEmpty,MethodDescriptor((int): boolean),org.bson.LazyBSONObject{ protected boolean isElementEmpty(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),isEmpty,MethodDescriptor((): boolean),org.bson.LazyBSONObject{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),isPartialObject,MethodDescriptor((): boolean),com.mongodb.LazyDBObject{ public boolean isPartialObject() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),keySet,MethodDescriptor((): java.util.Set),org.bson.LazyBSONObject{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),markAsPartialObject,MethodDescriptor((): void),com.mongodb.LazyDBObject{ public void markAsPartialObject() }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),pipe,MethodDescriptor((java.io.OutputStream): int),org.bson.LazyBSONObject{ public int pipe(java.io.OutputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),putAll,MethodDescriptor((java.util.Map): void),org.bson.LazyBSONObject{ public void putAll(java.util.Map) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),putAll,MethodDescriptor((org.bson.BSONObject): void),org.bson.LazyBSONObject{ public void putAll(org.bson.BSONObject) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),removeField,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object removeField(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),sizeCString,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int sizeCString(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),toMap,MethodDescriptor((): java.util.Map),org.bson.LazyBSONObject{ public java.util.Map toMap() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyDBObject),toString,MethodDescriptor((): java.lang.String),org.bson.LazyBSONObject{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),<clinit>,MethodDescriptor((): void),com.mongodb.LazyWriteableDBCallback{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),<init>,MethodDescriptor((com.mongodb.DBCollection): void),com.mongodb.LazyWriteableDBCallback{ public void <init>(com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),arrayDone,MethodDescriptor((): java.lang.Object),org.bson.EmptyBSONCallback{ public java.lang.Object arrayDone() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),arrayStart,MethodDescriptor((): void),org.bson.EmptyBSONCallback{ public void arrayStart() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),arrayStart,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void arrayStart(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),createArray,MethodDescriptor((byte[], int): java.util.List),org.bson.LazyBSONCallback{ public java.util.List createArray(byte[],int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),createBSONCallback,MethodDescriptor((): org.bson.BSONCallback),org.bson.EmptyBSONCallback{ public org.bson.BSONCallback createBSONCallback() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),createDBRef,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): java.lang.Object),com.mongodb.LazyDBCallback{ public java.lang.Object createDBRef(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),createObject,MethodDescriptor((byte[], int): java.lang.Object),com.mongodb.LazyWriteableDBCallback{ public java.lang.Object createObject(byte[],int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),get,MethodDescriptor((): java.lang.Object),org.bson.LazyBSONCallback{ public java.lang.Object get() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotBinary,MethodDescriptor((java.lang.String, byte, byte[]): void),org.bson.LazyBSONCallback{ public void gotBinary(java.lang.String,byte,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotBinaryArray,MethodDescriptor((java.lang.String, byte[]): void),org.bson.EmptyBSONCallback{ public void gotBinaryArray(java.lang.String,byte[]) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotBoolean,MethodDescriptor((java.lang.String, boolean): void),org.bson.EmptyBSONCallback{ public void gotBoolean(java.lang.String,boolean) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotCode,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotCode(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotCodeWScope,MethodDescriptor((java.lang.String, java.lang.String, java.lang.Object): void),org.bson.EmptyBSONCallback{ public void gotCodeWScope(java.lang.String,java.lang.String,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotDBRef,MethodDescriptor((java.lang.String, java.lang.String, org.bson.types.ObjectId): void),org.bson.EmptyBSONCallback{ public void gotDBRef(java.lang.String,java.lang.String,org.bson.types.ObjectId) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotDate,MethodDescriptor((java.lang.String, long): void),org.bson.EmptyBSONCallback{ public void gotDate(java.lang.String,long) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotDouble,MethodDescriptor((java.lang.String, double): void),org.bson.EmptyBSONCallback{ public void gotDouble(java.lang.String,double) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotInt,MethodDescriptor((java.lang.String, int): void),org.bson.EmptyBSONCallback{ public void gotInt(java.lang.String,int) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotLong,MethodDescriptor((java.lang.String, long): void),org.bson.EmptyBSONCallback{ public void gotLong(java.lang.String,long) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotMaxKey,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotMaxKey(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotMinKey,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotMinKey(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotNull,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotNull(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): void),org.bson.EmptyBSONCallback{ public void gotObjectId(java.lang.String,org.bson.types.ObjectId) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotRegex,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotRegex(java.lang.String,java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotString,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotString(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotSymbol,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotSymbol(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotTimestamp,MethodDescriptor((java.lang.String, int, int): void),org.bson.EmptyBSONCallback{ public void gotTimestamp(java.lang.String,int,int) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotUUID,MethodDescriptor((java.lang.String, long, long): void),org.bson.EmptyBSONCallback{ public void gotUUID(java.lang.String,long,long) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),gotUndefined,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotUndefined(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),objectDone,MethodDescriptor((): java.lang.Object),org.bson.LazyBSONCallback{ public java.lang.Object objectDone() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),objectStart,MethodDescriptor((): void),org.bson.LazyBSONCallback{ public void objectStart() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),objectStart,MethodDescriptor((boolean): void),org.bson.LazyBSONCallback{ public void objectStart(boolean) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),objectStart,MethodDescriptor((java.lang.String): void),org.bson.LazyBSONCallback{ public void objectStart(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),reset,MethodDescriptor((): void),org.bson.LazyBSONCallback{ public void reset() }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBCallback),setRootObject,MethodDescriptor((java.lang.Object): void),org.bson.LazyBSONCallback{ public void setRootObject(java.lang.Object) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBDecoder$LazyDBDecoderFactory),<init>,MethodDescriptor((): void),com.mongodb.LazyWriteableDBDecoder$LazyDBDecoderFactory{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBDecoder$LazyDBDecoderFactory),create,MethodDescriptor((): com.mongodb.DBDecoder),com.mongodb.LazyWriteableDBDecoder$LazyDBDecoderFactory{ public com.mongodb.DBDecoder create() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBDecoder),<clinit>,MethodDescriptor((): void),com.mongodb.LazyWriteableDBDecoder{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBDecoder),<init>,MethodDescriptor((): void),com.mongodb.LazyWriteableDBDecoder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBDecoder),decode,MethodDescriptor((byte[], com.mongodb.DBCollection): com.mongodb.DBObject),com.mongodb.LazyDBDecoder{ public com.mongodb.DBObject decode(byte[],com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBDecoder),decode,MethodDescriptor((byte[], org.bson.BSONCallback): int),org.bson.LazyBSONDecoder{ public int decode(byte[],org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBDecoder),decode,MethodDescriptor((java.io.InputStream, com.mongodb.DBCollection): com.mongodb.DBObject),com.mongodb.LazyDBDecoder{ public com.mongodb.DBObject decode(java.io.InputStream,com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBDecoder),decode,MethodDescriptor((java.io.InputStream, org.bson.BSONCallback): int),org.bson.LazyBSONDecoder{ public int decode(java.io.InputStream,org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBDecoder),getDBCallback,MethodDescriptor((com.mongodb.DBCollection): com.mongodb.DBCallback),com.mongodb.LazyWriteableDBDecoder{ public com.mongodb.DBCallback getDBCallback(com.mongodb.DBCollection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBDecoder),readObject,MethodDescriptor((byte[]): org.bson.BSONObject),org.bson.LazyBSONDecoder{ public org.bson.BSONObject readObject(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBDecoder),readObject,MethodDescriptor((java.io.InputStream): org.bson.BSONObject),org.bson.LazyBSONDecoder{ public org.bson.BSONObject readObject(java.io.InputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),<init>,MethodDescriptor((byte[], int, org.bson.LazyBSONCallback): void),com.mongodb.LazyWriteableDBObject{ public void <init>(byte[],int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),<init>,MethodDescriptor((byte[], org.bson.LazyBSONCallback): void),com.mongodb.LazyWriteableDBObject{ public void <init>(byte[],org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, int, org.bson.LazyBSONCallback): void),com.mongodb.LazyWriteableDBObject{ public void <init>(org.bson.io.BSONByteBuffer,int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, org.bson.LazyBSONCallback): void),com.mongodb.LazyWriteableDBObject{ public void <init>(org.bson.io.BSONByteBuffer,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),containsField,MethodDescriptor((java.lang.String): boolean),com.mongodb.LazyWriteableDBObject{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),containsKey,MethodDescriptor((java.lang.String): boolean),org.bson.LazyBSONObject{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),entrySet,MethodDescriptor((): java.util.Set),org.bson.LazyBSONObject{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),get,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.LazyWriteableDBObject{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),getBSONSize,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int getBSONSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),getElement,MethodDescriptor((java.lang.String): org.bson.LazyBSONObject$ElementRecord),org.bson.LazyBSONObject{ org.bson.LazyBSONObject$ElementRecord getElement(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),getElementBSONSize,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int getElementBSONSize(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),getElementType,MethodDescriptor((int): byte),org.bson.LazyBSONObject{ protected byte getElementType(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),getElementValue,MethodDescriptor((org.bson.LazyBSONObject$ElementRecord): java.lang.Object),org.bson.LazyBSONObject{ protected java.lang.Object getElementValue(org.bson.LazyBSONObject$ElementRecord) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),getElements,MethodDescriptor((): java.util.List),org.bson.LazyBSONObject{ java.util.List getElements() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),hashCode,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),isElementEmpty,MethodDescriptor((int): boolean),org.bson.LazyBSONObject{ protected boolean isElementEmpty(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),isEmpty,MethodDescriptor((): boolean),com.mongodb.LazyWriteableDBObject{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),isPartialObject,MethodDescriptor((): boolean),com.mongodb.LazyDBObject{ public boolean isPartialObject() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),keySet,MethodDescriptor((): java.util.Set),com.mongodb.LazyWriteableDBObject{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),markAsPartialObject,MethodDescriptor((): void),com.mongodb.LazyDBObject{ public void markAsPartialObject() }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),pipe,MethodDescriptor((java.io.OutputStream): int),org.bson.LazyBSONObject{ public int pipe(java.io.OutputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),com.mongodb.LazyWriteableDBObject{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),putAll,MethodDescriptor((java.util.Map): void),com.mongodb.LazyWriteableDBObject{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),putAll,MethodDescriptor((org.bson.BSONObject): void),com.mongodb.LazyWriteableDBObject{ public void putAll(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),removeField,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.LazyWriteableDBObject{ public java.lang.Object removeField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),sizeCString,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int sizeCString(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),toMap,MethodDescriptor((): java.util.Map),org.bson.LazyBSONObject{ public java.util.Map toMap() }) => DPure
DefinedMethod(ObjectType(com/mongodb/LazyWriteableDBObject),toString,MethodDescriptor((): java.lang.String),org.bson.LazyBSONObject{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand$1),<clinit>,MethodDescriptor((): void),com.mongodb.MapReduceCommand$1{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand$OutputType),<clinit>,MethodDescriptor((): void),com.mongodb.MapReduceCommand$OutputType{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand$OutputType),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.MapReduceCommand$OutputType{ private void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand$OutputType),valueOf,MethodDescriptor((java.lang.String): com.mongodb.MapReduceCommand$OutputType),com.mongodb.MapReduceCommand$OutputType{ public static com.mongodb.MapReduceCommand$OutputType valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand$OutputType),values,MethodDescriptor((): com.mongodb.MapReduceCommand$OutputType[]),com.mongodb.MapReduceCommand$OutputType{ public static com.mongodb.MapReduceCommand$OutputType[] values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),<init>,MethodDescriptor((com.mongodb.DBCollection, java.lang.String, java.lang.String, java.lang.String, com.mongodb.MapReduceCommand$OutputType, com.mongodb.DBObject): void),com.mongodb.MapReduceCommand{ public void <init>(com.mongodb.DBCollection,java.lang.String,java.lang.String,java.lang.String,com.mongodb.MapReduceCommand$OutputType,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),addExtraOption,MethodDescriptor((java.lang.String, java.lang.Object): void),com.mongodb.MapReduceCommand{ public void addExtraOption(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getExtraOptions,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.MapReduceCommand{ public com.mongodb.DBObject getExtraOptions() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getFinalize,MethodDescriptor((): java.lang.String),com.mongodb.MapReduceCommand{ public java.lang.String getFinalize() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getInput,MethodDescriptor((): java.lang.String),com.mongodb.MapReduceCommand{ public java.lang.String getInput() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getLimit,MethodDescriptor((): int),com.mongodb.MapReduceCommand{ public int getLimit() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getMap,MethodDescriptor((): java.lang.String),com.mongodb.MapReduceCommand{ public java.lang.String getMap() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getOutputTarget,MethodDescriptor((): java.lang.String),com.mongodb.MapReduceCommand{ public java.lang.String getOutputTarget() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getOutputType,MethodDescriptor((): com.mongodb.MapReduceCommand$OutputType),com.mongodb.MapReduceCommand{ public com.mongodb.MapReduceCommand$OutputType getOutputType() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getQuery,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.MapReduceCommand{ public com.mongodb.DBObject getQuery() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getReadPreference,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.MapReduceCommand{ public com.mongodb.ReadPreference getReadPreference() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getReduce,MethodDescriptor((): java.lang.String),com.mongodb.MapReduceCommand{ public java.lang.String getReduce() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getScope,MethodDescriptor((): java.util.Map),com.mongodb.MapReduceCommand{ public java.util.Map getScope() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),getSort,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.MapReduceCommand{ public com.mongodb.DBObject getSort() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),isVerbose,MethodDescriptor((): java.lang.Boolean),com.mongodb.MapReduceCommand{ public java.lang.Boolean isVerbose() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),setFinalize,MethodDescriptor((java.lang.String): void),com.mongodb.MapReduceCommand{ public void setFinalize(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),setLimit,MethodDescriptor((int): void),com.mongodb.MapReduceCommand{ public void setLimit(int) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),setOutputDB,MethodDescriptor((java.lang.String): void),com.mongodb.MapReduceCommand{ public void setOutputDB(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),setReadPreference,MethodDescriptor((com.mongodb.ReadPreference): void),com.mongodb.MapReduceCommand{ public void setReadPreference(com.mongodb.ReadPreference) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),setScope,MethodDescriptor((java.util.Map): void),com.mongodb.MapReduceCommand{ public void setScope(java.util.Map) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),setSort,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.MapReduceCommand{ public void setSort(com.mongodb.DBObject) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),setVerbose,MethodDescriptor((java.lang.Boolean): void),com.mongodb.MapReduceCommand{ public void setVerbose(java.lang.Boolean) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),toDBObject,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.MapReduceCommand{ public com.mongodb.DBObject toDBObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceCommand),toString,MethodDescriptor((): java.lang.String),com.mongodb.MapReduceCommand{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceOutput),<init>,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.DBObject, com.mongodb.CommandResult): void),com.mongodb.MapReduceOutput{ public void <init>(com.mongodb.DBCollection,com.mongodb.DBObject,com.mongodb.CommandResult) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceOutput),drop,MethodDescriptor((): void),com.mongodb.MapReduceOutput{ public void drop() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceOutput),getCommand,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.MapReduceOutput{ public com.mongodb.DBObject getCommand() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceOutput),getCommandResult,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.MapReduceOutput{ public com.mongodb.CommandResult getCommandResult() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceOutput),getOutputCollection,MethodDescriptor((): com.mongodb.DBCollection),com.mongodb.MapReduceOutput{ public com.mongodb.DBCollection getOutputCollection() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceOutput),getRaw,MethodDescriptor((): com.mongodb.BasicDBObject),com.mongodb.MapReduceOutput{ public com.mongodb.BasicDBObject getRaw() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceOutput),getServerUsed,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.MapReduceOutput{ public com.mongodb.ServerAddress getServerUsed() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MapReduceOutput),results,MethodDescriptor((): java.lang.Iterable),com.mongodb.MapReduceOutput{ public java.lang.Iterable results() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MapReduceOutput),toString,MethodDescriptor((): java.lang.String),com.mongodb.MapReduceOutput{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$1),<init>,MethodDescriptor((com.mongodb.Mongo, int): void),com.mongodb.Mongo$1{ void <init>(com.mongodb.Mongo,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$1),createNew,MethodDescriptor((): java.lang.Object),com.mongodb.Mongo$1{ protected java.lang.Object createNew() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$1),createNew,MethodDescriptor((): org.bson.io.PoolOutputBuffer),com.mongodb.Mongo$1{ protected org.bson.io.PoolOutputBuffer createNew() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$1),done,MethodDescriptor((java.lang.Object): void),org.bson.util.SimplePool{ public void done(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$1),get,MethodDescriptor((): java.lang.Object),org.bson.util.SimplePool{ public java.lang.Object get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$1),ok,MethodDescriptor((java.lang.Object): boolean),org.bson.util.SimplePool{ protected boolean ok(java.lang.Object) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/Mongo$CursorCleanerThread),<init>,MethodDescriptor((com.mongodb.Mongo): void),com.mongodb.Mongo$CursorCleanerThread{ void <init>(com.mongodb.Mongo) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$CursorCleanerThread),run,MethodDescriptor((): void),com.mongodb.Mongo$CursorCleanerThread{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$Holder),<clinit>,MethodDescriptor((): void),com.mongodb.Mongo$Holder{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$Holder),<init>,MethodDescriptor((): void),com.mongodb.Mongo$Holder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$Holder),_toKey,MethodDescriptor((com.mongodb.MongoURI): java.lang.String),com.mongodb.Mongo$Holder{ java.lang.String _toKey(com.mongodb.MongoURI) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$Holder),connect,MethodDescriptor((com.mongodb.MongoURI): com.mongodb.Mongo),com.mongodb.Mongo$Holder{ public com.mongodb.Mongo connect(com.mongodb.MongoURI) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo$Holder),singleton,MethodDescriptor((): com.mongodb.Mongo$Holder),com.mongodb.Mongo$Holder{ public static com.mongodb.Mongo$Holder singleton() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Mongo),<clinit>,MethodDescriptor((): void),com.mongodb.Mongo{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((): void),com.mongodb.Mongo{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((com.mongodb.MongoAuthority, com.mongodb.MongoOptions): void),com.mongodb.Mongo{ void <init>(com.mongodb.MongoAuthority,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((com.mongodb.MongoURI): void),com.mongodb.Mongo{ public void <init>(com.mongodb.MongoURI) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((com.mongodb.ServerAddress): void),com.mongodb.Mongo{ public void <init>(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.MongoOptions): void),com.mongodb.Mongo{ public void <init>(com.mongodb.ServerAddress,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.ServerAddress): void),com.mongodb.Mongo{ public void <init>(com.mongodb.ServerAddress,com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.ServerAddress, com.mongodb.MongoOptions): void),com.mongodb.Mongo{ public void <init>(com.mongodb.ServerAddress,com.mongodb.ServerAddress,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.Mongo{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((java.lang.String, com.mongodb.MongoOptions): void),com.mongodb.Mongo{ public void <init>(java.lang.String,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.Mongo{ public void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((java.util.List): void),com.mongodb.Mongo{ public void <init>(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),<init>,MethodDescriptor((java.util.List, com.mongodb.MongoOptions): void),com.mongodb.Mongo{ public void <init>(java.util.List,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),_applyMongoOptions,MethodDescriptor((): void),com.mongodb.Mongo{ void _applyMongoOptions() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),addOption,MethodDescriptor((int): void),com.mongodb.Mongo{ public void addOption(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),close,MethodDescriptor((): void),com.mongodb.Mongo{ public void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),connect,MethodDescriptor((com.mongodb.DBAddress): com.mongodb.DB),com.mongodb.Mongo{ public static com.mongodb.DB connect(com.mongodb.DBAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),debugString,MethodDescriptor((): java.lang.String),com.mongodb.Mongo{ public java.lang.String debugString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),dropDatabase,MethodDescriptor((java.lang.String): void),com.mongodb.Mongo{ public void dropDatabase(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),fsync,MethodDescriptor((boolean): com.mongodb.CommandResult),com.mongodb.Mongo{ public com.mongodb.CommandResult fsync(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),fsyncAndLock,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.Mongo{ public com.mongodb.CommandResult fsyncAndLock() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),getAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.Mongo{ public com.mongodb.ServerAddress getAddress() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),getAllAddress,MethodDescriptor((): java.util.List),com.mongodb.Mongo{ public java.util.List getAllAddress() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),getAuthority,MethodDescriptor((): com.mongodb.MongoAuthority),com.mongodb.Mongo{ com.mongodb.MongoAuthority getAuthority() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Mongo),getConnectPoint,MethodDescriptor((): java.lang.String),com.mongodb.Mongo{ public java.lang.String getConnectPoint() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),getConnector,MethodDescriptor((): com.mongodb.DBTCPConnector),com.mongodb.Mongo{ public com.mongodb.DBTCPConnector getConnector() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Mongo),getDB,MethodDescriptor((java.lang.String): com.mongodb.DB),com.mongodb.Mongo{ public com.mongodb.DB getDB(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),getDatabaseNames,MethodDescriptor((): java.util.List),com.mongodb.Mongo{ public java.util.List getDatabaseNames() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),getMajorVersion,MethodDescriptor((): int),com.mongodb.Mongo{ public static int getMajorVersion() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/Mongo),getMaxBsonObjectSize,MethodDescriptor((): int),com.mongodb.Mongo{ public int getMaxBsonObjectSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),getMinorVersion,MethodDescriptor((): int),com.mongodb.Mongo{ public static int getMinorVersion() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/Mongo),getMongoAuthorityFromURI,MethodDescriptor((com.mongodb.MongoURI): com.mongodb.MongoAuthority),com.mongodb.Mongo{ private static com.mongodb.MongoAuthority getMongoAuthorityFromURI(com.mongodb.MongoURI) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),getMongoOptions,MethodDescriptor((): com.mongodb.MongoOptions),com.mongodb.Mongo{ public com.mongodb.MongoOptions getMongoOptions() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Mongo),getOptions,MethodDescriptor((): int),com.mongodb.Mongo{ public int getOptions() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/Mongo),getReadPreference,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.Mongo{ public com.mongodb.ReadPreference getReadPreference() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Mongo),getReplicaSetStatus,MethodDescriptor((): com.mongodb.ReplicaSetStatus),com.mongodb.Mongo{ public com.mongodb.ReplicaSetStatus getReplicaSetStatus() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),getServerAddressList,MethodDescriptor((): java.util.List),com.mongodb.Mongo{ public java.util.List getServerAddressList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),getUsedDatabases,MethodDescriptor((): java.util.Collection),com.mongodb.Mongo{ public java.util.Collection getUsedDatabases() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),getVersion,MethodDescriptor((): java.lang.String),com.mongodb.Mongo{ public java.lang.String getVersion() }) => Pure
DefinedMethod(ObjectType(com/mongodb/Mongo),getWriteConcern,MethodDescriptor((): com.mongodb.WriteConcern),com.mongodb.Mongo{ public com.mongodb.WriteConcern getWriteConcern() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Mongo),isLocked,MethodDescriptor((): boolean),com.mongodb.Mongo{ public boolean isLocked() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),isMongosConnection,MethodDescriptor((): boolean),com.mongodb.Mongo{ boolean isMongosConnection() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),resetOptions,MethodDescriptor((): void),com.mongodb.Mongo{ public void resetOptions() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),setOptions,MethodDescriptor((int): void),com.mongodb.Mongo{ public void setOptions(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),setReadPreference,MethodDescriptor((com.mongodb.ReadPreference): void),com.mongodb.Mongo{ public void setReadPreference(com.mongodb.ReadPreference) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/Mongo),setWriteConcern,MethodDescriptor((com.mongodb.WriteConcern): void),com.mongodb.Mongo{ public void setWriteConcern(com.mongodb.WriteConcern) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/Mongo),slaveOk,MethodDescriptor((): void),com.mongodb.Mongo{ public void slaveOk() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),toString,MethodDescriptor((): java.lang.String),com.mongodb.Mongo{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Mongo),unlock,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.Mongo{ public com.mongodb.DBObject unlock() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority$Type),<clinit>,MethodDescriptor((): void),com.mongodb.MongoAuthority$Type{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority$Type),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.MongoAuthority$Type{ private void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority$Type),valueOf,MethodDescriptor((java.lang.String): com.mongodb.MongoAuthority$Type),com.mongodb.MongoAuthority$Type{ public static com.mongodb.MongoAuthority$Type valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority$Type),values,MethodDescriptor((): com.mongodb.MongoAuthority$Type[]),com.mongodb.MongoAuthority$Type{ public static com.mongodb.MongoAuthority$Type[] values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.MongoCredentialsStore): void),com.mongodb.MongoAuthority{ private void <init>(com.mongodb.ServerAddress,com.mongodb.MongoCredentialsStore) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),<init>,MethodDescriptor((java.util.List, com.mongodb.MongoAuthority$Type, com.mongodb.MongoCredentialsStore): void),com.mongodb.MongoAuthority{ private void <init>(java.util.List,com.mongodb.MongoAuthority$Type,com.mongodb.MongoCredentialsStore) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),direct,MethodDescriptor((com.mongodb.ServerAddress): com.mongodb.MongoAuthority),com.mongodb.MongoAuthority{ public static com.mongodb.MongoAuthority direct(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),direct,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.MongoCredential): com.mongodb.MongoAuthority),com.mongodb.MongoAuthority{ public static com.mongodb.MongoAuthority direct(com.mongodb.ServerAddress,com.mongodb.MongoCredential) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),direct,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.MongoCredentialsStore): com.mongodb.MongoAuthority),com.mongodb.MongoAuthority{ public static com.mongodb.MongoAuthority direct(com.mongodb.ServerAddress,com.mongodb.MongoCredentialsStore) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),dynamicSet,MethodDescriptor((java.util.List): com.mongodb.MongoAuthority),com.mongodb.MongoAuthority{ public static com.mongodb.MongoAuthority dynamicSet(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),dynamicSet,MethodDescriptor((java.util.List, com.mongodb.MongoCredential): com.mongodb.MongoAuthority),com.mongodb.MongoAuthority{ public static com.mongodb.MongoAuthority dynamicSet(java.util.List,com.mongodb.MongoCredential) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),dynamicSet,MethodDescriptor((java.util.List, com.mongodb.MongoCredentialsStore): com.mongodb.MongoAuthority),com.mongodb.MongoAuthority{ public static com.mongodb.MongoAuthority dynamicSet(java.util.List,com.mongodb.MongoCredentialsStore) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.MongoAuthority{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),getCredentialsStore,MethodDescriptor((): com.mongodb.MongoCredentialsStore),com.mongodb.MongoAuthority{ public com.mongodb.MongoCredentialsStore getCredentialsStore() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),getServerAddresses,MethodDescriptor((): java.util.List),com.mongodb.MongoAuthority{ public java.util.List getServerAddresses() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),getType,MethodDescriptor((): com.mongodb.MongoAuthority$Type),com.mongodb.MongoAuthority{ public com.mongodb.MongoAuthority$Type getType() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),hashCode,MethodDescriptor((): int),com.mongodb.MongoAuthority{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoAuthority),toString,MethodDescriptor((): java.lang.String),com.mongodb.MongoAuthority{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((): void),com.mongodb.MongoClient{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((com.mongodb.MongoClientURI): void),com.mongodb.MongoClient{ public void <init>(com.mongodb.MongoClientURI) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((com.mongodb.ServerAddress): void),com.mongodb.MongoClient{ public void <init>(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.MongoClientOptions): void),com.mongodb.MongoClient{ public void <init>(com.mongodb.ServerAddress,com.mongodb.MongoClientOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((com.mongodb.ServerAddress, java.util.List): void),com.mongodb.MongoClient{ public void <init>(com.mongodb.ServerAddress,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((com.mongodb.ServerAddress, java.util.List, com.mongodb.MongoClientOptions): void),com.mongodb.MongoClient{ public void <init>(com.mongodb.ServerAddress,java.util.List,com.mongodb.MongoClientOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.MongoClient{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((java.lang.String, com.mongodb.MongoClientOptions): void),com.mongodb.MongoClient{ public void <init>(java.lang.String,com.mongodb.MongoClientOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.MongoClient{ public void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((java.util.List): void),com.mongodb.MongoClient{ public void <init>(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((java.util.List, com.mongodb.MongoClientOptions): void),com.mongodb.MongoClient{ public void <init>(java.util.List,com.mongodb.MongoClientOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((java.util.List, java.util.List): void),com.mongodb.MongoClient{ public void <init>(java.util.List,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),<init>,MethodDescriptor((java.util.List, java.util.List, com.mongodb.MongoClientOptions): void),com.mongodb.MongoClient{ public void <init>(java.util.List,java.util.List,com.mongodb.MongoClientOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),_applyMongoOptions,MethodDescriptor((): void),com.mongodb.Mongo{ void _applyMongoOptions() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),addOption,MethodDescriptor((int): void),com.mongodb.Mongo{ public void addOption(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),close,MethodDescriptor((): void),com.mongodb.Mongo{ public void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),debugString,MethodDescriptor((): java.lang.String),com.mongodb.Mongo{ public java.lang.String debugString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),dropDatabase,MethodDescriptor((java.lang.String): void),com.mongodb.Mongo{ public void dropDatabase(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),fsync,MethodDescriptor((boolean): com.mongodb.CommandResult),com.mongodb.Mongo{ public com.mongodb.CommandResult fsync(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),fsyncAndLock,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.Mongo{ public com.mongodb.CommandResult fsyncAndLock() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),getAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.Mongo{ public com.mongodb.ServerAddress getAddress() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),getAllAddress,MethodDescriptor((): java.util.List),com.mongodb.Mongo{ public java.util.List getAllAddress() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),getAuthority,MethodDescriptor((): com.mongodb.MongoAuthority),com.mongodb.Mongo{ com.mongodb.MongoAuthority getAuthority() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClient),getConnectPoint,MethodDescriptor((): java.lang.String),com.mongodb.Mongo{ public java.lang.String getConnectPoint() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),getConnector,MethodDescriptor((): com.mongodb.DBTCPConnector),com.mongodb.Mongo{ public com.mongodb.DBTCPConnector getConnector() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClient),getCredentialsList,MethodDescriptor((): java.util.List),com.mongodb.MongoClient{ public java.util.List getCredentialsList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),getDB,MethodDescriptor((java.lang.String): com.mongodb.DB),com.mongodb.Mongo{ public com.mongodb.DB getDB(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),getDatabaseNames,MethodDescriptor((): java.util.List),com.mongodb.Mongo{ public java.util.List getDatabaseNames() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),getMaxBsonObjectSize,MethodDescriptor((): int),com.mongodb.Mongo{ public int getMaxBsonObjectSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),getMongoClientOptions,MethodDescriptor((): com.mongodb.MongoClientOptions),com.mongodb.MongoClient{ public com.mongodb.MongoClientOptions getMongoClientOptions() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClient),getMongoOptions,MethodDescriptor((): com.mongodb.MongoOptions),com.mongodb.Mongo{ public com.mongodb.MongoOptions getMongoOptions() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClient),getOptions,MethodDescriptor((): int),com.mongodb.Mongo{ public int getOptions() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClient),getReadPreference,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.Mongo{ public com.mongodb.ReadPreference getReadPreference() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClient),getReplicaSetStatus,MethodDescriptor((): com.mongodb.ReplicaSetStatus),com.mongodb.Mongo{ public com.mongodb.ReplicaSetStatus getReplicaSetStatus() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),getServerAddressList,MethodDescriptor((): java.util.List),com.mongodb.Mongo{ public java.util.List getServerAddressList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),getUsedDatabases,MethodDescriptor((): java.util.Collection),com.mongodb.Mongo{ public java.util.Collection getUsedDatabases() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),getVersion,MethodDescriptor((): java.lang.String),com.mongodb.Mongo{ public java.lang.String getVersion() }) => Pure
DefinedMethod(ObjectType(com/mongodb/MongoClient),getWriteConcern,MethodDescriptor((): com.mongodb.WriteConcern),com.mongodb.Mongo{ public com.mongodb.WriteConcern getWriteConcern() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClient),isLocked,MethodDescriptor((): boolean),com.mongodb.Mongo{ public boolean isLocked() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),isMongosConnection,MethodDescriptor((): boolean),com.mongodb.Mongo{ boolean isMongosConnection() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),resetOptions,MethodDescriptor((): void),com.mongodb.Mongo{ public void resetOptions() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),setOptions,MethodDescriptor((int): void),com.mongodb.Mongo{ public void setOptions(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),setReadPreference,MethodDescriptor((com.mongodb.ReadPreference): void),com.mongodb.Mongo{ public void setReadPreference(com.mongodb.ReadPreference) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoClient),setWriteConcern,MethodDescriptor((com.mongodb.WriteConcern): void),com.mongodb.Mongo{ public void setWriteConcern(com.mongodb.WriteConcern) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoClient),slaveOk,MethodDescriptor((): void),com.mongodb.Mongo{ public void slaveOk() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),toString,MethodDescriptor((): java.lang.String),com.mongodb.Mongo{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClient),unlock,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.Mongo{ public com.mongodb.DBObject unlock() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),<init>,MethodDescriptor((): void),com.mongodb.MongoClientOptions$Builder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$100,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): java.lang.String),com.mongodb.MongoClientOptions$Builder{ static java.lang.String access$100(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$1000,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): com.mongodb.ReadPreference),com.mongodb.MongoClientOptions$Builder{ static com.mongodb.ReadPreference access$1000(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$1100,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): com.mongodb.DBDecoderFactory),com.mongodb.MongoClientOptions$Builder{ static com.mongodb.DBDecoderFactory access$1100(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$1200,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): com.mongodb.DBEncoderFactory),com.mongodb.MongoClientOptions$Builder{ static com.mongodb.DBEncoderFactory access$1200(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$1300,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): com.mongodb.WriteConcern),com.mongodb.MongoClientOptions$Builder{ static com.mongodb.WriteConcern access$1300(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$1400,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): javax.net.SocketFactory),com.mongodb.MongoClientOptions$Builder{ static javax.net.SocketFactory access$1400(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$1500,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): boolean),com.mongodb.MongoClientOptions$Builder{ static boolean access$1500(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$1600,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): boolean),com.mongodb.MongoClientOptions$Builder{ static boolean access$1600(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$200,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): int),com.mongodb.MongoClientOptions$Builder{ static int access$200(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$300,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): int),com.mongodb.MongoClientOptions$Builder{ static int access$300(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$400,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): int),com.mongodb.MongoClientOptions$Builder{ static int access$400(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$500,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): int),com.mongodb.MongoClientOptions$Builder{ static int access$500(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$600,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): int),com.mongodb.MongoClientOptions$Builder{ static int access$600(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$700,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): boolean),com.mongodb.MongoClientOptions$Builder{ static boolean access$700(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$800,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): boolean),com.mongodb.MongoClientOptions$Builder{ static boolean access$800(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),access$900,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): long),com.mongodb.MongoClientOptions$Builder{ static long access$900(com.mongodb.MongoClientOptions$Builder) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),alwaysUseMBeans,MethodDescriptor((boolean): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder alwaysUseMBeans(boolean) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),autoConnectRetry,MethodDescriptor((boolean): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder autoConnectRetry(boolean) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),build,MethodDescriptor((): com.mongodb.MongoClientOptions),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions build() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),connectTimeout,MethodDescriptor((int): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder connectTimeout(int) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),connectionsPerHost,MethodDescriptor((int): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder connectionsPerHost(int) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),cursorFinalizerEnabled,MethodDescriptor((boolean): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder cursorFinalizerEnabled(boolean) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),dbDecoderFactory,MethodDescriptor((com.mongodb.DBDecoderFactory): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder dbDecoderFactory(com.mongodb.DBDecoderFactory) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),dbEncoderFactory,MethodDescriptor((com.mongodb.DBEncoderFactory): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder dbEncoderFactory(com.mongodb.DBEncoderFactory) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),description,MethodDescriptor((java.lang.String): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder description(java.lang.String) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),legacyDefaults,MethodDescriptor((): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder legacyDefaults() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),maxAutoConnectRetryTime,MethodDescriptor((long): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder maxAutoConnectRetryTime(long) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),maxWaitTime,MethodDescriptor((int): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder maxWaitTime(int) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),readPreference,MethodDescriptor((com.mongodb.ReadPreference): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder readPreference(com.mongodb.ReadPreference) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),socketFactory,MethodDescriptor((javax.net.SocketFactory): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder socketFactory(javax.net.SocketFactory) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),socketKeepAlive,MethodDescriptor((boolean): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder socketKeepAlive(boolean) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),socketTimeout,MethodDescriptor((int): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder socketTimeout(int) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),threadsAllowedToBlockForConnectionMultiplier,MethodDescriptor((int): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder threadsAllowedToBlockForConnectionMultiplier(int) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions$Builder),writeConcern,MethodDescriptor((com.mongodb.WriteConcern): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions$Builder{ public com.mongodb.MongoClientOptions$Builder writeConcern(com.mongodb.WriteConcern) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),<init>,MethodDescriptor((com.mongodb.MongoClientOptions$Builder): void),com.mongodb.MongoClientOptions{ private void <init>(com.mongodb.MongoClientOptions$Builder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),<init>,MethodDescriptor((com.mongodb.MongoClientOptions$Builder, com.mongodb.MongoClientOptions$1): void),com.mongodb.MongoClientOptions{ void <init>(com.mongodb.MongoClientOptions$Builder,com.mongodb.MongoClientOptions$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),builder,MethodDescriptor((): com.mongodb.MongoClientOptions$Builder),com.mongodb.MongoClientOptions{ public static com.mongodb.MongoClientOptions$Builder builder() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.MongoClientOptions{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getConnectTimeout,MethodDescriptor((): int),com.mongodb.MongoClientOptions{ public int getConnectTimeout() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getConnectionsPerHost,MethodDescriptor((): int),com.mongodb.MongoClientOptions{ public int getConnectionsPerHost() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getDbDecoderFactory,MethodDescriptor((): com.mongodb.DBDecoderFactory),com.mongodb.MongoClientOptions{ public com.mongodb.DBDecoderFactory getDbDecoderFactory() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getDbEncoderFactory,MethodDescriptor((): com.mongodb.DBEncoderFactory),com.mongodb.MongoClientOptions{ public com.mongodb.DBEncoderFactory getDbEncoderFactory() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getDescription,MethodDescriptor((): java.lang.String),com.mongodb.MongoClientOptions{ public java.lang.String getDescription() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getMaxAutoConnectRetryTime,MethodDescriptor((): long),com.mongodb.MongoClientOptions{ public long getMaxAutoConnectRetryTime() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getMaxWaitTime,MethodDescriptor((): int),com.mongodb.MongoClientOptions{ public int getMaxWaitTime() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getReadPreference,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.MongoClientOptions{ public com.mongodb.ReadPreference getReadPreference() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getSocketFactory,MethodDescriptor((): javax.net.SocketFactory),com.mongodb.MongoClientOptions{ public javax.net.SocketFactory getSocketFactory() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getSocketTimeout,MethodDescriptor((): int),com.mongodb.MongoClientOptions{ public int getSocketTimeout() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getThreadsAllowedToBlockForConnectionMultiplier,MethodDescriptor((): int),com.mongodb.MongoClientOptions{ public int getThreadsAllowedToBlockForConnectionMultiplier() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),getWriteConcern,MethodDescriptor((): com.mongodb.WriteConcern),com.mongodb.MongoClientOptions{ public com.mongodb.WriteConcern getWriteConcern() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),hashCode,MethodDescriptor((): int),com.mongodb.MongoClientOptions{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),isAlwaysUseMBeans,MethodDescriptor((): boolean),com.mongodb.MongoClientOptions{ public boolean isAlwaysUseMBeans() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),isAutoConnectRetry,MethodDescriptor((): boolean),com.mongodb.MongoClientOptions{ public boolean isAutoConnectRetry() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),isCursorFinalizerEnabled,MethodDescriptor((): boolean),com.mongodb.MongoClientOptions{ public boolean isCursorFinalizerEnabled() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoClientOptions),isSocketKeepAlive,MethodDescriptor((): boolean),com.mongodb.MongoClientOptions{ public boolean isSocketKeepAlive() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),<clinit>,MethodDescriptor((): void),com.mongodb.MongoClientURI{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.MongoClientURI{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),<init>,MethodDescriptor((java.lang.String, com.mongodb.MongoClientOptions$Builder): void),com.mongodb.MongoClientURI{ public void <init>(java.lang.String,com.mongodb.MongoClientOptions$Builder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),_parseBoolean,MethodDescriptor((java.lang.String): boolean),com.mongodb.MongoClientURI{ boolean _parseBoolean(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),buildReadPreference,MethodDescriptor((java.lang.String, com.mongodb.DBObject, java.util.List, java.lang.Boolean): com.mongodb.ReadPreference),com.mongodb.MongoClientURI{ private com.mongodb.ReadPreference buildReadPreference(java.lang.String,com.mongodb.DBObject,java.util.List,java.lang.Boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),buildWriteConcern,MethodDescriptor((java.lang.Boolean, java.lang.String, int, boolean, boolean): com.mongodb.WriteConcern),com.mongodb.MongoClientURI{ private com.mongodb.WriteConcern buildWriteConcern(java.lang.Boolean,java.lang.String,int,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),createCredentials,MethodDescriptor((java.util.Map, java.lang.String, char[], java.lang.String): com.mongodb.MongoCredential),com.mongodb.MongoClientURI{ private com.mongodb.MongoCredential createCredentials(java.util.Map,java.lang.String,char[],java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),createOptions,MethodDescriptor((java.util.Map, com.mongodb.MongoClientOptions$Builder): com.mongodb.MongoClientOptions),com.mongodb.MongoClientURI{ private com.mongodb.MongoClientOptions createOptions(java.util.Map,com.mongodb.MongoClientOptions$Builder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),createReadPreference,MethodDescriptor((java.util.Map): com.mongodb.ReadPreference),com.mongodb.MongoClientURI{ private com.mongodb.ReadPreference createReadPreference(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),createWriteConcern,MethodDescriptor((java.util.Map): com.mongodb.WriteConcern),com.mongodb.MongoClientURI{ private com.mongodb.WriteConcern createWriteConcern(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),getCollection,MethodDescriptor((): java.lang.String),com.mongodb.MongoClientURI{ public java.lang.String getCollection() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),getCredentials,MethodDescriptor((): com.mongodb.MongoCredential),com.mongodb.MongoClientURI{ public com.mongodb.MongoCredential getCredentials() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),getDatabase,MethodDescriptor((): java.lang.String),com.mongodb.MongoClientURI{ public java.lang.String getDatabase() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),getHosts,MethodDescriptor((): java.util.List),com.mongodb.MongoClientURI{ public java.util.List getHosts() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),getLastValue,MethodDescriptor((java.util.Map, java.lang.String): java.lang.String),com.mongodb.MongoClientURI{ private java.lang.String getLastValue(java.util.Map,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),getOptions,MethodDescriptor((): com.mongodb.MongoClientOptions),com.mongodb.MongoClientURI{ public com.mongodb.MongoClientOptions getOptions() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),getPassword,MethodDescriptor((): char[]),com.mongodb.MongoClientURI{ public char[] getPassword() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),getTagSet,MethodDescriptor((java.lang.String): com.mongodb.DBObject),com.mongodb.MongoClientURI{ private com.mongodb.DBObject getTagSet(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),getURI,MethodDescriptor((): java.lang.String),com.mongodb.MongoClientURI{ public java.lang.String getURI() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),getUsername,MethodDescriptor((): java.lang.String),com.mongodb.MongoClientURI{ public java.lang.String getUsername() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),parseOptions,MethodDescriptor((java.lang.String): java.util.Map),com.mongodb.MongoClientURI{ private java.util.Map parseOptions(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),toString,MethodDescriptor((): java.lang.String),com.mongodb.MongoClientURI{ public java.lang.String toString() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoClientURI),warnOnUnsupportedOptions,MethodDescriptor((java.util.Map): void),com.mongodb.MongoClientURI{ private void warnOnUnsupportedOptions(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.MongoOptions): void),com.mongodb.MongoConnectionPool{ void <init>(com.mongodb.ServerAddress,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),cleanup,MethodDescriptor((com.mongodb.DBPort): void),com.mongodb.DBPortPool{ public void cleanup(com.mongodb.DBPort) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),cleanup,MethodDescriptor((java.lang.Object): void),com.mongodb.DBPortPool{ public void cleanup(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),close,MethodDescriptor((): void),com.mongodb.util.SimplePool{ protected void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),createNew,MethodDescriptor((): com.mongodb.DBPort),com.mongodb.DBPortPool{ protected com.mongodb.DBPort createNew() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),createNew,MethodDescriptor((): java.lang.Object),com.mongodb.DBPortPool{ protected java.lang.Object createNew() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),done,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void done(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),get,MethodDescriptor((): com.mongodb.DBPort),com.mongodb.DBPortPool{ public com.mongodb.DBPort get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),get,MethodDescriptor((): java.lang.Object),com.mongodb.DBPortPool{ public java.lang.Object get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),get,MethodDescriptor((long): java.lang.Object),com.mongodb.util.SimplePool{ public java.lang.Object get(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),getAvailable,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getAvailable() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),getHost,MethodDescriptor((): java.lang.String),com.mongodb.DBPortPool{ public java.lang.String getHost() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),getInUse,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getInUse() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),getMaxSize,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getMaxSize() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),getName,MethodDescriptor((): java.lang.String),com.mongodb.util.SimplePool{ public java.lang.String getName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),getPort,MethodDescriptor((): int),com.mongodb.DBPortPool{ public int getPort() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),getServerAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.DBPortPool{ public com.mongodb.ServerAddress getServerAddress() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),getStatistics,MethodDescriptor((): com.mongodb.util.ConnectionPoolStatisticsBean),com.mongodb.DBPortPool{ public com.mongodb.util.ConnectionPoolStatisticsBean getStatistics() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),getTotal,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getTotal() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),gotError,MethodDescriptor((java.lang.Exception): boolean),com.mongodb.DBPortPool{ boolean gotError(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),memSize,MethodDescriptor((com.mongodb.DBPort): long),com.mongodb.DBPortPool{ protected long memSize(com.mongodb.DBPort) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),pick,MethodDescriptor((int, boolean): int),com.mongodb.DBPortPool{ protected int pick(int,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),remove,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoConnectionPool),toString,MethodDescriptor((): java.lang.String),com.mongodb.util.SimplePool{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredential),<init>,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String, char[]): void),com.mongodb.MongoCredential{ void <init>(java.lang.String,java.lang.String,java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredential),createGSSAPICredential,MethodDescriptor((java.lang.String): com.mongodb.MongoCredential),com.mongodb.MongoCredential{ public static com.mongodb.MongoCredential createGSSAPICredential(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredential),createMongoCRCredential,MethodDescriptor((java.lang.String, java.lang.String, char[]): com.mongodb.MongoCredential),com.mongodb.MongoCredential{ public static com.mongodb.MongoCredential createMongoCRCredential(java.lang.String,java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredential),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.MongoCredential{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredential),getMechanism,MethodDescriptor((): java.lang.String),com.mongodb.MongoCredential{ public java.lang.String getMechanism() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoCredential),getPassword,MethodDescriptor((): char[]),com.mongodb.MongoCredential{ public char[] getPassword() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredential),getSource,MethodDescriptor((): java.lang.String),com.mongodb.MongoCredential{ public java.lang.String getSource() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoCredential),getUserName,MethodDescriptor((): java.lang.String),com.mongodb.MongoCredential{ public java.lang.String getUserName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoCredential),hashCode,MethodDescriptor((): int),com.mongodb.MongoCredential{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredential),toString,MethodDescriptor((): java.lang.String),com.mongodb.MongoCredential{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredentialsStore),<init>,MethodDescriptor((): void),com.mongodb.MongoCredentialsStore{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredentialsStore),<init>,MethodDescriptor((com.mongodb.MongoCredential): void),com.mongodb.MongoCredentialsStore{ public void <init>(com.mongodb.MongoCredential) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredentialsStore),<init>,MethodDescriptor((java.lang.Iterable): void),com.mongodb.MongoCredentialsStore{ public void <init>(java.lang.Iterable) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredentialsStore),add,MethodDescriptor((com.mongodb.MongoCredential): void),com.mongodb.MongoCredentialsStore{ void add(com.mongodb.MongoCredential) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredentialsStore),asList,MethodDescriptor((): java.util.List),com.mongodb.MongoCredentialsStore{ public java.util.List asList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredentialsStore),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.MongoCredentialsStore{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredentialsStore),get,MethodDescriptor((java.lang.String): com.mongodb.MongoCredential),com.mongodb.MongoCredentialsStore{ public com.mongodb.MongoCredential get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredentialsStore),getDatabases,MethodDescriptor((): java.util.Set),com.mongodb.MongoCredentialsStore{ public java.util.Set getDatabases() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredentialsStore),hashCode,MethodDescriptor((): int),com.mongodb.MongoCredentialsStore{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoCredentialsStore),toString,MethodDescriptor((): java.lang.String),com.mongodb.MongoCredentialsStore{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoException$CursorNotFound),<init>,MethodDescriptor((long, com.mongodb.ServerAddress): void),com.mongodb.MongoException$CursorNotFound{ public void <init>(long,com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoException$CursorNotFound),getCode,MethodDescriptor((): int),com.mongodb.MongoException{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoException$CursorNotFound),getCursorId,MethodDescriptor((): long),com.mongodb.MongoException$CursorNotFound{ public long getCursorId() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoException$CursorNotFound),getServerAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.MongoException$CursorNotFound{ public com.mongodb.ServerAddress getServerAddress() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoException$DuplicateKey),<init>,MethodDescriptor((com.mongodb.CommandResult): void),com.mongodb.MongoException$DuplicateKey{ public void <init>(com.mongodb.CommandResult) }) => DPure
DefinedMethod(ObjectType(com/mongodb/MongoException$DuplicateKey),getCode,MethodDescriptor((): int),com.mongodb.MongoException{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoException$DuplicateKey),getCommandResult,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.WriteConcernException{ public com.mongodb.CommandResult getCommandResult() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoException$Network),<init>,MethodDescriptor((java.io.IOException): void),com.mongodb.MongoException$Network{ public void <init>(java.io.IOException) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoException$Network),<init>,MethodDescriptor((java.lang.String, java.io.IOException): void),com.mongodb.MongoException$Network{ public void <init>(java.lang.String,java.io.IOException) }) => DPure
DefinedMethod(ObjectType(com/mongodb/MongoException$Network),getCode,MethodDescriptor((): int),com.mongodb.MongoException{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoException),<init>,MethodDescriptor((int, java.lang.String): void),com.mongodb.MongoException{ public void <init>(int,java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/MongoException),<init>,MethodDescriptor((int, java.lang.String, java.lang.Throwable): void),com.mongodb.MongoException{ public void <init>(int,java.lang.String,java.lang.Throwable) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoException),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.MongoException{ public void <init>(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/MongoException),<init>,MethodDescriptor((java.lang.String, java.lang.Throwable): void),com.mongodb.MongoException{ public void <init>(java.lang.String,java.lang.Throwable) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoException),<init>,MethodDescriptor((org.bson.BSONObject): void),com.mongodb.MongoException{ public void <init>(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoException),_massage,MethodDescriptor((java.lang.Throwable): java.lang.Throwable),com.mongodb.MongoException{ static java.lang.Throwable _massage(java.lang.Throwable) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoException),getCode,MethodDescriptor((): int),com.mongodb.MongoException{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoException),parse,MethodDescriptor((org.bson.BSONObject): com.mongodb.MongoException),com.mongodb.MongoException{ static com.mongodb.MongoException parse(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoInternalException),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.MongoInternalException{ public void <init>(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/MongoInternalException),<init>,MethodDescriptor((java.lang.String, java.lang.Throwable): void),com.mongodb.MongoInternalException{ public void <init>(java.lang.String,java.lang.Throwable) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoInternalException),getCode,MethodDescriptor((): int),com.mongodb.MongoException{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoInterruptedException),<init>,MethodDescriptor((java.lang.InterruptedException): void),com.mongodb.MongoInterruptedException{ public void <init>(java.lang.InterruptedException) }) => DPure
DefinedMethod(ObjectType(com/mongodb/MongoInterruptedException),<init>,MethodDescriptor((java.lang.String, java.lang.InterruptedException): void),com.mongodb.MongoInterruptedException{ public void <init>(java.lang.String,java.lang.InterruptedException) }) => DPure
DefinedMethod(ObjectType(com/mongodb/MongoInterruptedException),getCode,MethodDescriptor((): int),com.mongodb.MongoException{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),<init>,MethodDescriptor((): void),com.mongodb.MongoOptions{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoOptions),<init>,MethodDescriptor((com.mongodb.MongoClientOptions): void),com.mongodb.MongoOptions{ public void <init>(com.mongodb.MongoClientOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoOptions),copy,MethodDescriptor((): com.mongodb.MongoOptions),com.mongodb.MongoOptions{ public com.mongodb.MongoOptions copy() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoOptions),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.MongoOptions{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getConnectTimeout,MethodDescriptor((): int),com.mongodb.MongoOptions{ public int getConnectTimeout() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getConnectionsPerHost,MethodDescriptor((): int),com.mongodb.MongoOptions{ public int getConnectionsPerHost() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getDbDecoderFactory,MethodDescriptor((): com.mongodb.DBDecoderFactory),com.mongodb.MongoOptions{ public com.mongodb.DBDecoderFactory getDbDecoderFactory() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getDbEncoderFactory,MethodDescriptor((): com.mongodb.DBEncoderFactory),com.mongodb.MongoOptions{ public com.mongodb.DBEncoderFactory getDbEncoderFactory() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getDescription,MethodDescriptor((): java.lang.String),com.mongodb.MongoOptions{ public java.lang.String getDescription() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getMaxAutoConnectRetryTime,MethodDescriptor((): long),com.mongodb.MongoOptions{ public long getMaxAutoConnectRetryTime() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getMaxWaitTime,MethodDescriptor((): int),com.mongodb.MongoOptions{ public int getMaxWaitTime() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getReadPreference,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.MongoOptions{ public com.mongodb.ReadPreference getReadPreference() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getSocketFactory,MethodDescriptor((): javax.net.SocketFactory),com.mongodb.MongoOptions{ public javax.net.SocketFactory getSocketFactory() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getSocketTimeout,MethodDescriptor((): int),com.mongodb.MongoOptions{ public int getSocketTimeout() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getThreadsAllowedToBlockForConnectionMultiplier,MethodDescriptor((): int),com.mongodb.MongoOptions{ public int getThreadsAllowedToBlockForConnectionMultiplier() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getW,MethodDescriptor((): int),com.mongodb.MongoOptions{ public int getW() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getWriteConcern,MethodDescriptor((): com.mongodb.WriteConcern),com.mongodb.MongoOptions{ public com.mongodb.WriteConcern getWriteConcern() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoOptions),getWtimeout,MethodDescriptor((): int),com.mongodb.MongoOptions{ public int getWtimeout() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),hashCode,MethodDescriptor((): int),com.mongodb.MongoOptions{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoOptions),isAlwaysUseMBeans,MethodDescriptor((): boolean),com.mongodb.MongoOptions{ public boolean isAlwaysUseMBeans() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),isAutoConnectRetry,MethodDescriptor((): boolean),com.mongodb.MongoOptions{ public boolean isAutoConnectRetry() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),isCursorFinalizerEnabled,MethodDescriptor((): boolean),com.mongodb.MongoOptions{ public boolean isCursorFinalizerEnabled() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),isFsync,MethodDescriptor((): boolean),com.mongodb.MongoOptions{ public boolean isFsync() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),isJ,MethodDescriptor((): boolean),com.mongodb.MongoOptions{ public boolean isJ() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),isSafe,MethodDescriptor((): boolean),com.mongodb.MongoOptions{ public boolean isSafe() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),isSocketKeepAlive,MethodDescriptor((): boolean),com.mongodb.MongoOptions{ public boolean isSocketKeepAlive() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoOptions),reset,MethodDescriptor((): void),com.mongodb.MongoOptions{ public void reset() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setAlwaysUseMBeans,MethodDescriptor((boolean): void),com.mongodb.MongoOptions{ public void setAlwaysUseMBeans(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setAutoConnectRetry,MethodDescriptor((boolean): void),com.mongodb.MongoOptions{ public void setAutoConnectRetry(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setConnectTimeout,MethodDescriptor((int): void),com.mongodb.MongoOptions{ public void setConnectTimeout(int) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setConnectionsPerHost,MethodDescriptor((int): void),com.mongodb.MongoOptions{ public void setConnectionsPerHost(int) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setCursorFinalizerEnabled,MethodDescriptor((boolean): void),com.mongodb.MongoOptions{ public void setCursorFinalizerEnabled(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setDbDecoderFactory,MethodDescriptor((com.mongodb.DBDecoderFactory): void),com.mongodb.MongoOptions{ public void setDbDecoderFactory(com.mongodb.DBDecoderFactory) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setDbEncoderFactory,MethodDescriptor((com.mongodb.DBEncoderFactory): void),com.mongodb.MongoOptions{ public void setDbEncoderFactory(com.mongodb.DBEncoderFactory) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setDescription,MethodDescriptor((java.lang.String): void),com.mongodb.MongoOptions{ public void setDescription(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setFsync,MethodDescriptor((boolean): void),com.mongodb.MongoOptions{ public void setFsync(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setJ,MethodDescriptor((boolean): void),com.mongodb.MongoOptions{ public void setJ(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setMaxAutoConnectRetryTime,MethodDescriptor((long): void),com.mongodb.MongoOptions{ public void setMaxAutoConnectRetryTime(long) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setMaxWaitTime,MethodDescriptor((int): void),com.mongodb.MongoOptions{ public void setMaxWaitTime(int) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setReadPreference,MethodDescriptor((com.mongodb.ReadPreference): void),com.mongodb.MongoOptions{ public void setReadPreference(com.mongodb.ReadPreference) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setSafe,MethodDescriptor((boolean): void),com.mongodb.MongoOptions{ public void setSafe(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setSocketFactory,MethodDescriptor((javax.net.SocketFactory): void),com.mongodb.MongoOptions{ public void setSocketFactory(javax.net.SocketFactory) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setSocketKeepAlive,MethodDescriptor((boolean): void),com.mongodb.MongoOptions{ public void setSocketKeepAlive(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setSocketTimeout,MethodDescriptor((int): void),com.mongodb.MongoOptions{ public void setSocketTimeout(int) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setThreadsAllowedToBlockForConnectionMultiplier,MethodDescriptor((int): void),com.mongodb.MongoOptions{ public void setThreadsAllowedToBlockForConnectionMultiplier(int) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setW,MethodDescriptor((int): void),com.mongodb.MongoOptions{ public void setW(int) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setWriteConcern,MethodDescriptor((com.mongodb.WriteConcern): void),com.mongodb.MongoOptions{ public void setWriteConcern(com.mongodb.WriteConcern) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),setWtimeout,MethodDescriptor((int): void),com.mongodb.MongoOptions{ public void setWtimeout(int) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/MongoOptions),toString,MethodDescriptor((): java.lang.String),com.mongodb.MongoOptions{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),<init>,MethodDescriptor((com.mongodb.MongoClientURI): void),com.mongodb.MongoURI{ public void <init>(com.mongodb.MongoClientURI) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.MongoURI{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),connect,MethodDescriptor((): com.mongodb.Mongo),com.mongodb.MongoURI{ public com.mongodb.Mongo connect() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),connectCollection,MethodDescriptor((com.mongodb.DB): com.mongodb.DBCollection),com.mongodb.MongoURI{ public com.mongodb.DBCollection connectCollection(com.mongodb.DB) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),connectCollection,MethodDescriptor((com.mongodb.Mongo): com.mongodb.DBCollection),com.mongodb.MongoURI{ public com.mongodb.DBCollection connectCollection(com.mongodb.Mongo) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),connectDB,MethodDescriptor((): com.mongodb.DB),com.mongodb.MongoURI{ public com.mongodb.DB connectDB() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),connectDB,MethodDescriptor((com.mongodb.Mongo): com.mongodb.DB),com.mongodb.MongoURI{ public com.mongodb.DB connectDB(com.mongodb.Mongo) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),getCollection,MethodDescriptor((): java.lang.String),com.mongodb.MongoURI{ public java.lang.String getCollection() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),getCredentials,MethodDescriptor((): com.mongodb.MongoCredential),com.mongodb.MongoURI{ public com.mongodb.MongoCredential getCredentials() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),getDatabase,MethodDescriptor((): java.lang.String),com.mongodb.MongoURI{ public java.lang.String getDatabase() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),getHosts,MethodDescriptor((): java.util.List),com.mongodb.MongoURI{ public java.util.List getHosts() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),getOptions,MethodDescriptor((): com.mongodb.MongoOptions),com.mongodb.MongoURI{ public com.mongodb.MongoOptions getOptions() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongoURI),getPassword,MethodDescriptor((): char[]),com.mongodb.MongoURI{ public char[] getPassword() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),getUsername,MethodDescriptor((): java.lang.String),com.mongodb.MongoURI{ public java.lang.String getUsername() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongoURI),toString,MethodDescriptor((): java.lang.String),com.mongodb.MongoURI{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus$MongosNode),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.Mongo, com.mongodb.MongoOptions): void),com.mongodb.MongosStatus$MongosNode{ void <init>(com.mongodb.ServerAddress,com.mongodb.Mongo,com.mongodb.MongoOptions) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus$MongosNode),getLogger,MethodDescriptor((): java.util.logging.Logger),com.mongodb.MongosStatus$MongosNode{ protected java.util.logging.Logger getLogger() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongosStatus$MongosNode),isOk,MethodDescriptor((): boolean),com.mongodb.ConnectionStatus$UpdatableNode{ public boolean isOk() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongosStatus$MongosNode),update,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.ConnectionStatus$UpdatableNode{ public com.mongodb.CommandResult update() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus$MongosUpdater),<init>,MethodDescriptor((com.mongodb.MongosStatus): void),com.mongodb.MongosStatus$MongosUpdater{ void <init>(com.mongodb.MongosStatus) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus$MongosUpdater),getMongosNodes,MethodDescriptor((): java.util.List),com.mongodb.MongosStatus$MongosUpdater{ private java.util.List getMongosNodes() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus$MongosUpdater),run,MethodDescriptor((): void),com.mongodb.MongosStatus$MongosUpdater{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus),<clinit>,MethodDescriptor((): void),com.mongodb.MongosStatus{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus),<init>,MethodDescriptor((com.mongodb.Mongo, java.util.List): void),com.mongodb.MongosStatus{ void <init>(com.mongodb.Mongo,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus),access$000,MethodDescriptor((com.mongodb.MongosStatus, com.mongodb.MongosStatus$MongosNode): void),com.mongodb.MongosStatus{ static void access$000(com.mongodb.MongosStatus,com.mongodb.MongosStatus$MongosNode) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus),access$100,MethodDescriptor((): java.util.logging.Logger),com.mongodb.MongosStatus{ static java.util.logging.Logger access$100() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongosStatus),access$200,MethodDescriptor((com.mongodb.MongosStatus): com.mongodb.ConnectionStatus$Node),com.mongodb.MongosStatus{ static com.mongodb.ConnectionStatus$Node access$200(com.mongodb.MongosStatus) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongosStatus),checkClosed,MethodDescriptor((): void),com.mongodb.ConnectionStatus{ void checkClosed() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongosStatus),close,MethodDescriptor((): void),com.mongodb.ConnectionStatus{ void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus),ensureMaster,MethodDescriptor((): com.mongodb.ConnectionStatus$Node),com.mongodb.MongosStatus{ com.mongodb.ConnectionStatus$Node ensureMaster() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus),getPreferred,MethodDescriptor((): com.mongodb.ConnectionStatus$Node),com.mongodb.MongosStatus{ private com.mongodb.ConnectionStatus$Node getPreferred() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus),getServerAddressList,MethodDescriptor((): java.util.List),com.mongodb.MongosStatus{ java.util.List getServerAddressList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus),hasServerUp,MethodDescriptor((): boolean),com.mongodb.MongosStatus{ boolean hasServerUp() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/MongosStatus),setPreferred,MethodDescriptor((com.mongodb.MongosStatus$MongosNode): void),com.mongodb.MongosStatus{ private void setPreferred(com.mongodb.MongosStatus$MongosNode) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/MongosStatus),start,MethodDescriptor((): void),com.mongodb.ConnectionStatus{ void start() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/NativeAuthenticationHelper),<init>,MethodDescriptor((): void),com.mongodb.NativeAuthenticationHelper{ private void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/NativeAuthenticationHelper),createHash,MethodDescriptor((java.lang.String, char[]): byte[]),com.mongodb.NativeAuthenticationHelper{ static byte[] createHash(java.lang.String,char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/NativeAuthenticationHelper),getAuthCommand,MethodDescriptor((java.lang.String, byte[], java.lang.String): com.mongodb.DBObject),com.mongodb.NativeAuthenticationHelper{ static com.mongodb.DBObject getAuthCommand(java.lang.String,byte[],java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/NativeAuthenticationHelper),getAuthCommand,MethodDescriptor((java.lang.String, char[], java.lang.String): com.mongodb.DBObject),com.mongodb.NativeAuthenticationHelper{ static com.mongodb.DBObject getAuthCommand(java.lang.String,char[],java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/NativeAuthenticationHelper),getNonceCommand,MethodDescriptor((): com.mongodb.BasicDBObject),com.mongodb.NativeAuthenticationHelper{ static com.mongodb.BasicDBObject getNonceCommand() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage$OpCode),<clinit>,MethodDescriptor((): void),com.mongodb.OutMessage$OpCode{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage$OpCode),<init>,MethodDescriptor((java.lang.String, int, int): void),com.mongodb.OutMessage$OpCode{ private void <init>(java.lang.String,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage$OpCode),getValue,MethodDescriptor((): int),com.mongodb.OutMessage$OpCode{ public int getValue() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/OutMessage$OpCode),valueOf,MethodDescriptor((java.lang.String): com.mongodb.OutMessage$OpCode),com.mongodb.OutMessage$OpCode{ public static com.mongodb.OutMessage$OpCode valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage$OpCode),values,MethodDescriptor((): com.mongodb.OutMessage$OpCode[]),com.mongodb.OutMessage$OpCode{ public static com.mongodb.OutMessage$OpCode[] values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),<clinit>,MethodDescriptor((): void),com.mongodb.OutMessage{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),<init>,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.DBEncoder, com.mongodb.DBObject, int, com.mongodb.ReadPreference): void),com.mongodb.OutMessage{ private void <init>(com.mongodb.DBCollection,com.mongodb.DBEncoder,com.mongodb.DBObject,int,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),<init>,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.Mongo, com.mongodb.OutMessage$OpCode, com.mongodb.DBEncoder): void),com.mongodb.OutMessage{ private void <init>(com.mongodb.DBCollection,com.mongodb.Mongo,com.mongodb.OutMessage$OpCode,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),<init>,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.Mongo, com.mongodb.OutMessage$OpCode, com.mongodb.DBEncoder, com.mongodb.DBObject, int, com.mongodb.ReadPreference): void),com.mongodb.OutMessage{ private void <init>(com.mongodb.DBCollection,com.mongodb.Mongo,com.mongodb.OutMessage$OpCode,com.mongodb.DBEncoder,com.mongodb.DBObject,int,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),<init>,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.OutMessage$OpCode): void),com.mongodb.OutMessage{ private void <init>(com.mongodb.DBCollection,com.mongodb.OutMessage$OpCode) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),<init>,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.OutMessage$OpCode, com.mongodb.DBEncoder): void),com.mongodb.OutMessage{ private void <init>(com.mongodb.DBCollection,com.mongodb.OutMessage$OpCode,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),<init>,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.OutMessage$OpCode, com.mongodb.DBEncoder, com.mongodb.DBObject): void),com.mongodb.OutMessage{ private void <init>(com.mongodb.DBCollection,com.mongodb.OutMessage$OpCode,com.mongodb.DBEncoder,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),<init>,MethodDescriptor((com.mongodb.Mongo, com.mongodb.OutMessage$OpCode): void),com.mongodb.OutMessage{ private void <init>(com.mongodb.Mongo,com.mongodb.OutMessage$OpCode) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),_put,MethodDescriptor((byte, java.lang.String): void),org.bson.BasicBSONEncoder{ protected void _put(byte,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),_put,MethodDescriptor((java.lang.String): int),org.bson.BasicBSONEncoder{ protected int _put(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),_putObjectField,MethodDescriptor((java.lang.String, java.lang.Object): void),org.bson.BasicBSONEncoder{ protected void _putObjectField(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),_putValueString,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ protected void _putValueString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),_reset,MethodDescriptor((java.nio.Buffer): void),org.bson.BasicBSONEncoder{ void _reset(java.nio.Buffer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),done,MethodDescriptor((): void),org.bson.BasicBSONEncoder{ public void done() }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/OutMessage),doneWithMessage,MethodDescriptor((): void),com.mongodb.OutMessage{ void doneWithMessage() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),encode,MethodDescriptor((org.bson.BSONObject): byte[]),org.bson.BasicBSONEncoder{ public byte[] encode(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),getId,MethodDescriptor((): int),com.mongodb.OutMessage{ int getId() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/OutMessage),getMore,MethodDescriptor((com.mongodb.DBCollection, long, int): com.mongodb.OutMessage),com.mongodb.OutMessage{ static com.mongodb.OutMessage getMore(com.mongodb.DBCollection,long,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),getNamespace,MethodDescriptor((): java.lang.String),com.mongodb.OutMessage{ java.lang.String getNamespace() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),getNumDocuments,MethodDescriptor((): int),com.mongodb.OutMessage{ int getNumDocuments() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/OutMessage),getOpCode,MethodDescriptor((): com.mongodb.OutMessage$OpCode),com.mongodb.OutMessage{ com.mongodb.OutMessage$OpCode getOpCode() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/OutMessage),getQuery,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.OutMessage{ com.mongodb.DBObject getQuery() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/OutMessage),handleSpecialObjects,MethodDescriptor((java.lang.String, org.bson.BSONObject): boolean),org.bson.BasicBSONEncoder{ protected boolean handleSpecialObjects(java.lang.String,org.bson.BSONObject) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/OutMessage),hasOption,MethodDescriptor((int): boolean),com.mongodb.OutMessage{ boolean hasOption(int) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/OutMessage),insert,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.DBEncoder, com.mongodb.WriteConcern): com.mongodb.OutMessage),com.mongodb.OutMessage{ public static com.mongodb.OutMessage insert(com.mongodb.DBCollection,com.mongodb.DBEncoder,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),killCursors,MethodDescriptor((com.mongodb.Mongo, int): com.mongodb.OutMessage),com.mongodb.OutMessage{ static com.mongodb.OutMessage killCursors(com.mongodb.Mongo,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),pipe,MethodDescriptor((java.io.OutputStream): void),com.mongodb.OutMessage{ void pipe(java.io.OutputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),prepare,MethodDescriptor((): void),com.mongodb.OutMessage{ void prepare() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putBinary,MethodDescriptor((java.lang.String, byte[]): void),org.bson.BasicBSONEncoder{ protected void putBinary(java.lang.String,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putBinary,MethodDescriptor((java.lang.String, org.bson.types.Binary): void),org.bson.BasicBSONEncoder{ protected void putBinary(java.lang.String,org.bson.types.Binary) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putBoolean,MethodDescriptor((java.lang.String, java.lang.Boolean): void),org.bson.BasicBSONEncoder{ protected void putBoolean(java.lang.String,java.lang.Boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putCode,MethodDescriptor((java.lang.String, org.bson.types.Code): void),org.bson.BasicBSONEncoder{ protected void putCode(java.lang.String,org.bson.types.Code) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putCodeWScope,MethodDescriptor((java.lang.String, org.bson.types.CodeWScope): void),org.bson.BasicBSONEncoder{ protected void putCodeWScope(java.lang.String,org.bson.types.CodeWScope) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putDate,MethodDescriptor((java.lang.String, java.util.Date): void),org.bson.BasicBSONEncoder{ protected void putDate(java.lang.String,java.util.Date) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putNull,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ protected void putNull(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putNumber,MethodDescriptor((java.lang.String, java.lang.Number): void),org.bson.BasicBSONEncoder{ protected void putNumber(java.lang.String,java.lang.Number) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putObject,MethodDescriptor((java.lang.String, org.bson.BSONObject): int),org.bson.BasicBSONEncoder{ protected int putObject(java.lang.String,org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putObject,MethodDescriptor((org.bson.BSONObject): int),com.mongodb.OutMessage{ public int putObject(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): void),org.bson.BasicBSONEncoder{ protected void putObjectId(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putSpecial,MethodDescriptor((java.lang.String, java.lang.Object): boolean),org.bson.BasicBSONEncoder{ protected boolean putSpecial(java.lang.String,java.lang.Object) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/OutMessage),putString,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONEncoder{ protected void putString(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putSymbol,MethodDescriptor((java.lang.String, org.bson.types.Symbol): void),org.bson.BasicBSONEncoder{ protected void putSymbol(java.lang.String,org.bson.types.Symbol) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putTimestamp,MethodDescriptor((java.lang.String, org.bson.types.BSONTimestamp): void),org.bson.BasicBSONEncoder{ protected void putTimestamp(java.lang.String,org.bson.types.BSONTimestamp) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putUUID,MethodDescriptor((java.lang.String, java.util.UUID): void),org.bson.BasicBSONEncoder{ protected void putUUID(java.lang.String,java.util.UUID) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),putUndefined,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ protected void putUndefined(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),query,MethodDescriptor((com.mongodb.DBCollection, int, int, int, com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.OutMessage),com.mongodb.OutMessage{ static com.mongodb.OutMessage query(com.mongodb.DBCollection,int,int,int,com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),query,MethodDescriptor((com.mongodb.DBCollection, int, int, int, com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.ReadPreference): com.mongodb.OutMessage),com.mongodb.OutMessage{ static com.mongodb.OutMessage query(com.mongodb.DBCollection,int,int,int,com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.ReadPreference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),query,MethodDescriptor((com.mongodb.DBCollection, int, int, int, com.mongodb.DBObject, com.mongodb.DBObject, com.mongodb.ReadPreference, com.mongodb.DBEncoder): com.mongodb.OutMessage),com.mongodb.OutMessage{ static com.mongodb.OutMessage query(com.mongodb.DBCollection,int,int,int,com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.ReadPreference,com.mongodb.DBEncoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),remove,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.DBEncoder, com.mongodb.DBObject): com.mongodb.OutMessage),com.mongodb.OutMessage{ public static com.mongodb.OutMessage remove(com.mongodb.DBCollection,com.mongodb.DBEncoder,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),set,MethodDescriptor((org.bson.io.OutputBuffer): void),org.bson.BasicBSONEncoder{ public void set(org.bson.io.OutputBuffer) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/OutMessage),size,MethodDescriptor((): int),com.mongodb.OutMessage{ int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),update,MethodDescriptor((com.mongodb.DBCollection, com.mongodb.DBEncoder, boolean, boolean, com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.OutMessage),com.mongodb.OutMessage{ public static com.mongodb.OutMessage update(com.mongodb.DBCollection,com.mongodb.DBEncoder,boolean,boolean,com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),writeCString,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ public void writeCString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),writeGetMore,MethodDescriptor((long, int): void),com.mongodb.OutMessage{ private void writeGetMore(long,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),writeInsertPrologue,MethodDescriptor((com.mongodb.WriteConcern): void),com.mongodb.OutMessage{ private void writeInsertPrologue(com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),writeInt,MethodDescriptor((int): void),org.bson.BasicBSONEncoder{ public void writeInt(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),writeKillCursorsPrologue,MethodDescriptor((int): void),com.mongodb.OutMessage{ private void writeKillCursorsPrologue(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),writeLong,MethodDescriptor((long): void),org.bson.BasicBSONEncoder{ public void writeLong(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),writeMessagePrologue,MethodDescriptor((com.mongodb.OutMessage$OpCode): void),com.mongodb.OutMessage{ private void writeMessagePrologue(com.mongodb.OutMessage$OpCode) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),writeQuery,MethodDescriptor((com.mongodb.DBObject, int, int): void),com.mongodb.OutMessage{ private void writeQuery(com.mongodb.DBObject,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),writeRemove,MethodDescriptor((): void),com.mongodb.OutMessage{ private void writeRemove() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/OutMessage),writeUpdate,MethodDescriptor((boolean, boolean, com.mongodb.DBObject, com.mongodb.DBObject): void),com.mongodb.OutMessage{ private void writeUpdate(boolean,boolean,com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder$NullObject),<init>,MethodDescriptor((): void),com.mongodb.QueryBuilder$NullObject{ private void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder$NullObject),<init>,MethodDescriptor((com.mongodb.QueryBuilder$1): void),com.mongodb.QueryBuilder$NullObject{ void <init>(com.mongodb.QueryBuilder$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder$QueryBuilderException),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.QueryBuilder$QueryBuilderException{ void <init>(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),<init>,MethodDescriptor((): void),com.mongodb.QueryBuilder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),addOperand,MethodDescriptor((java.lang.String, java.lang.Object): void),com.mongodb.QueryBuilder{ private void addOperand(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),all,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder all(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),and,MethodDescriptor((com.mongodb.DBObject[]): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder and(com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),and,MethodDescriptor((java.lang.String): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder and(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),elemMatch,MethodDescriptor((com.mongodb.DBObject): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder elemMatch(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),exists,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder exists(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),get,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.QueryBuilder{ public com.mongodb.DBObject get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),greaterThan,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder greaterThan(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),greaterThanEquals,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder greaterThanEquals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),in,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder in(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),is,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder is(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),lessThan,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder lessThan(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),lessThanEquals,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder lessThanEquals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),mod,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder mod(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),near,MethodDescriptor((double, double): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder near(double,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),near,MethodDescriptor((double, double, double): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder near(double,double,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),nearSphere,MethodDescriptor((double, double): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder nearSphere(double,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),nearSphere,MethodDescriptor((double, double, double): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder nearSphere(double,double,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),not,MethodDescriptor((): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder not() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),notEquals,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder notEquals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),notIn,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder notIn(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),or,MethodDescriptor((com.mongodb.DBObject[]): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder or(com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),put,MethodDescriptor((java.lang.String): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder put(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),regex,MethodDescriptor((java.util.regex.Pattern): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder regex(java.util.regex.Pattern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),size,MethodDescriptor((java.lang.Object): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder size(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),start,MethodDescriptor((): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public static com.mongodb.QueryBuilder start() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),start,MethodDescriptor((java.lang.String): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public static com.mongodb.QueryBuilder start(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),withinBox,MethodDescriptor((double, double, double, double): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder withinBox(double,double,double,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),withinCenter,MethodDescriptor((double, double, double): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder withinCenter(double,double,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),withinCenterSphere,MethodDescriptor((double, double, double): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder withinCenterSphere(double,double,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryBuilder),withinPolygon,MethodDescriptor((java.util.List): com.mongodb.QueryBuilder),com.mongodb.QueryBuilder{ public com.mongodb.QueryBuilder withinPolygon(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),<init>,MethodDescriptor((): void),com.mongodb.QueryOpBuilder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),addExplain,MethodDescriptor((boolean): com.mongodb.QueryOpBuilder),com.mongodb.QueryOpBuilder{ public com.mongodb.QueryOpBuilder addExplain(boolean) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),addHint,MethodDescriptor((com.mongodb.DBObject): com.mongodb.QueryOpBuilder),com.mongodb.QueryOpBuilder{ public com.mongodb.QueryOpBuilder addHint(com.mongodb.DBObject) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),addHint,MethodDescriptor((java.lang.String): com.mongodb.QueryOpBuilder),com.mongodb.QueryOpBuilder{ public com.mongodb.QueryOpBuilder addHint(java.lang.String) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),addOrderBy,MethodDescriptor((com.mongodb.DBObject): com.mongodb.QueryOpBuilder),com.mongodb.QueryOpBuilder{ public com.mongodb.QueryOpBuilder addOrderBy(com.mongodb.DBObject) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),addQuery,MethodDescriptor((com.mongodb.DBObject): com.mongodb.QueryOpBuilder),com.mongodb.QueryOpBuilder{ public com.mongodb.QueryOpBuilder addQuery(com.mongodb.DBObject) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),addReadPreference,MethodDescriptor((com.mongodb.ReadPreference): com.mongodb.QueryOpBuilder),com.mongodb.QueryOpBuilder{ public com.mongodb.QueryOpBuilder addReadPreference(com.mongodb.ReadPreference) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),addSnapshot,MethodDescriptor((boolean): com.mongodb.QueryOpBuilder),com.mongodb.QueryOpBuilder{ public com.mongodb.QueryOpBuilder addSnapshot(boolean) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),addSpecialFields,MethodDescriptor((com.mongodb.DBObject): com.mongodb.QueryOpBuilder),com.mongodb.QueryOpBuilder{ public com.mongodb.QueryOpBuilder addSpecialFields(com.mongodb.DBObject) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),addToQueryObject,MethodDescriptor((com.mongodb.DBObject, java.lang.String, com.mongodb.DBObject, boolean): void),com.mongodb.QueryOpBuilder{ private void addToQueryObject(com.mongodb.DBObject,java.lang.String,com.mongodb.DBObject,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),addToQueryObject,MethodDescriptor((com.mongodb.DBObject, java.lang.String, java.lang.Object): void),com.mongodb.QueryOpBuilder{ private void addToQueryObject(com.mongodb.DBObject,java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),get,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.QueryOpBuilder{ public com.mongodb.DBObject get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryOpBuilder),hasSpecialQueryFields,MethodDescriptor((): boolean),com.mongodb.QueryOpBuilder{ private boolean hasSpecialQueryFields() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/QueryOperators),<init>,MethodDescriptor((): void),com.mongodb.QueryOperators{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject$Element),<init>,MethodDescriptor((com.mongodb.RawDBObject, int): void),com.mongodb.RawDBObject$Element{ void <init>(com.mongodb.RawDBObject,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject$Element),eoo,MethodDescriptor((): boolean),com.mongodb.RawDBObject$Element{ boolean eoo() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/RawDBObject$Element),fieldName,MethodDescriptor((): java.lang.String),com.mongodb.RawDBObject$Element{ java.lang.String fieldName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/RawDBObject$Element),getObject,MethodDescriptor((): java.lang.Object),com.mongodb.RawDBObject$Element{ java.lang.Object getObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject$Element),size,MethodDescriptor((): int),com.mongodb.RawDBObject$Element{ int size() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/RawDBObject$ElementIter),<init>,MethodDescriptor((com.mongodb.RawDBObject): void),com.mongodb.RawDBObject$ElementIter{ void <init>(com.mongodb.RawDBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject$ElementIter),hasNext,MethodDescriptor((): boolean),com.mongodb.RawDBObject$ElementIter{ boolean hasNext() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject$ElementIter),next,MethodDescriptor((): com.mongodb.RawDBObject$Element),com.mongodb.RawDBObject$ElementIter{ com.mongodb.RawDBObject$Element next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),<clinit>,MethodDescriptor((): void),com.mongodb.RawDBObject{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),<init>,MethodDescriptor((java.nio.ByteBuffer): void),com.mongodb.RawDBObject{ void <init>(java.nio.ByteBuffer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),<init>,MethodDescriptor((java.nio.ByteBuffer, int): void),com.mongodb.RawDBObject{ void <init>(java.nio.ByteBuffer,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),_cStrLength,MethodDescriptor((int): int),com.mongodb.RawDBObject{ int _cStrLength(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),_readCStr,MethodDescriptor((int): java.lang.String),com.mongodb.RawDBObject{ java.lang.String _readCStr(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),_readCStr,MethodDescriptor((int, int[]): java.lang.String),com.mongodb.RawDBObject{ java.lang.String _readCStr(int,int[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),_readJavaString,MethodDescriptor((int): java.lang.String),com.mongodb.RawDBObject{ java.lang.String _readJavaString(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),containsField,MethodDescriptor((java.lang.String): boolean),com.mongodb.RawDBObject{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),containsKey,MethodDescriptor((java.lang.String): boolean),com.mongodb.RawDBObject{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),findElement,MethodDescriptor((java.lang.String): com.mongodb.RawDBObject$Element),com.mongodb.RawDBObject{ com.mongodb.RawDBObject$Element findElement(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),get,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.RawDBObject{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),isPartialObject,MethodDescriptor((): boolean),com.mongodb.RawDBObject{ public boolean isPartialObject() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/RawDBObject),keySet,MethodDescriptor((): java.util.Set),com.mongodb.RawDBObject{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),markAsPartialObject,MethodDescriptor((): void),com.mongodb.RawDBObject{ public void markAsPartialObject() }) => DPure
DefinedMethod(ObjectType(com/mongodb/RawDBObject),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),com.mongodb.RawDBObject{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(com/mongodb/RawDBObject),putAll,MethodDescriptor((java.util.Map): void),com.mongodb.RawDBObject{ public void putAll(java.util.Map) }) => DPure
DefinedMethod(ObjectType(com/mongodb/RawDBObject),putAll,MethodDescriptor((org.bson.BSONObject): void),com.mongodb.RawDBObject{ public void putAll(org.bson.BSONObject) }) => DPure
DefinedMethod(ObjectType(com/mongodb/RawDBObject),removeField,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.RawDBObject{ public java.lang.Object removeField(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/RawDBObject),toMap,MethodDescriptor((): java.util.Map),com.mongodb.RawDBObject{ public java.util.Map toMap() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/RawDBObject),toString,MethodDescriptor((): java.lang.String),com.mongodb.RawDBObject{ public java.lang.String toString() }) => Pure
DefinedMethod(ObjectType(com/mongodb/ReadPreference$PrimaryReadPreference),<init>,MethodDescriptor((): void),com.mongodb.ReadPreference$PrimaryReadPreference{ private void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$PrimaryReadPreference),<init>,MethodDescriptor((com.mongodb.ReadPreference$1): void),com.mongodb.ReadPreference$PrimaryReadPreference{ void <init>(com.mongodb.ReadPreference$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$PrimaryReadPreference),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.ReadPreference$PrimaryReadPreference{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$PrimaryReadPreference),getName,MethodDescriptor((): java.lang.String),com.mongodb.ReadPreference$PrimaryReadPreference{ public java.lang.String getName() }) => Pure
DefinedMethod(ObjectType(com/mongodb/ReadPreference$PrimaryReadPreference),getNode,MethodDescriptor((com.mongodb.ReplicaSetStatus$ReplicaSet): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.ReadPreference$PrimaryReadPreference{ com.mongodb.ReplicaSetStatus$ReplicaSetNode getNode(com.mongodb.ReplicaSetStatus$ReplicaSet) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReadPreference$PrimaryReadPreference),hashCode,MethodDescriptor((): int),com.mongodb.ReadPreference$PrimaryReadPreference{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$PrimaryReadPreference),isSlaveOk,MethodDescriptor((): boolean),com.mongodb.ReadPreference$PrimaryReadPreference{ public boolean isSlaveOk() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ReadPreference$PrimaryReadPreference),toDBObject,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.ReadPreference$PrimaryReadPreference{ public com.mongodb.DBObject toDBObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$PrimaryReadPreference),toString,MethodDescriptor((): java.lang.String),com.mongodb.ReadPreference$PrimaryReadPreference{ public java.lang.String toString() }) => Pure
DefinedMethod(ObjectType(com/mongodb/ReadPreference$TaggedReadPreference),<init>,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.ReadPreference$TaggedReadPreference{ public void <init>(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$TaggedReadPreference),<init>,MethodDescriptor((java.util.Map): void),com.mongodb.ReadPreference$TaggedReadPreference{ public void <init>(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$TaggedReadPreference),getName,MethodDescriptor((): java.lang.String),com.mongodb.ReadPreference$TaggedReadPreference{ public java.lang.String getName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$TaggedReadPreference),getNode,MethodDescriptor((com.mongodb.ReplicaSetStatus$ReplicaSet): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.ReadPreference$TaggedReadPreference{ com.mongodb.ReplicaSetStatus$ReplicaSetNode getNode(com.mongodb.ReplicaSetStatus$ReplicaSet) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$TaggedReadPreference),getRemainingMaps,MethodDescriptor((java.util.List): com.mongodb.DBObject[]),com.mongodb.ReadPreference$TaggedReadPreference{ private com.mongodb.DBObject[] getRemainingMaps(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$TaggedReadPreference),getTags,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.ReadPreference$TaggedReadPreference{ public com.mongodb.DBObject getTags() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$TaggedReadPreference),isSlaveOk,MethodDescriptor((): boolean),com.mongodb.ReadPreference$TaggedReadPreference{ public boolean isSlaveOk() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$TaggedReadPreference),splitMapIntoMultipleMaps,MethodDescriptor((com.mongodb.DBObject): java.util.List),com.mongodb.ReadPreference$TaggedReadPreference{ private static java.util.List splitMapIntoMultipleMaps(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference$TaggedReadPreference),toDBObject,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.ReadPreference$TaggedReadPreference{ public com.mongodb.DBObject toDBObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference),<clinit>,MethodDescriptor((): void),com.mongodb.ReadPreference{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference),<init>,MethodDescriptor((): void),com.mongodb.ReadPreference{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference),nearest,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.ReadPreference nearest() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReadPreference),nearest,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject[]): com.mongodb.TaggableReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.TaggableReadPreference nearest(com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference),primary,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.ReadPreference primary() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReadPreference),primaryPreferred,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.ReadPreference primaryPreferred() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReadPreference),primaryPreferred,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject[]): com.mongodb.TaggableReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.TaggableReadPreference primaryPreferred(com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference),secondary,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.ReadPreference secondary() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReadPreference),secondary,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject[]): com.mongodb.TaggableReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.TaggableReadPreference secondary(com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference),secondaryPreferred,MethodDescriptor((): com.mongodb.ReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.ReadPreference secondaryPreferred() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReadPreference),secondaryPreferred,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject[]): com.mongodb.TaggableReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.TaggableReadPreference secondaryPreferred(com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference),valueOf,MethodDescriptor((java.lang.String): com.mongodb.ReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.ReadPreference valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference),valueOf,MethodDescriptor((java.lang.String, com.mongodb.DBObject, com.mongodb.DBObject[]): com.mongodb.TaggableReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.TaggableReadPreference valueOf(java.lang.String,com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference),withTags,MethodDescriptor((com.mongodb.DBObject): com.mongodb.ReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.ReadPreference withTags(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReadPreference),withTags,MethodDescriptor((java.util.Map): com.mongodb.ReadPreference),com.mongodb.ReadPreference{ public static com.mongodb.ReadPreference withTags(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject$FieldInfo),<init>,MethodDescriptor((java.lang.String, java.lang.Class): void),com.mongodb.ReflectionDBObject$FieldInfo{ void <init>(java.lang.String,java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject$FieldInfo),ok,MethodDescriptor((): boolean),com.mongodb.ReflectionDBObject$FieldInfo{ boolean ok() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject$JavaWrapper),<init>,MethodDescriptor((java.lang.Class): void),com.mongodb.ReflectionDBObject$JavaWrapper{ void <init>(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject$JavaWrapper),containsKey,MethodDescriptor((java.lang.String): boolean),com.mongodb.ReflectionDBObject$JavaWrapper{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject$JavaWrapper),get,MethodDescriptor((com.mongodb.ReflectionDBObject, java.lang.String): java.lang.Object),com.mongodb.ReflectionDBObject$JavaWrapper{ public java.lang.Object get(com.mongodb.ReflectionDBObject,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject$JavaWrapper),getInternalClass,MethodDescriptor((java.lang.String): java.lang.Class),com.mongodb.ReflectionDBObject$JavaWrapper{ java.lang.Class getInternalClass(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject$JavaWrapper),keySet,MethodDescriptor((): java.util.Set),com.mongodb.ReflectionDBObject$JavaWrapper{ public java.util.Set keySet() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject$JavaWrapper),set,MethodDescriptor((com.mongodb.ReflectionDBObject, java.lang.String, java.lang.Object): java.lang.Object),com.mongodb.ReflectionDBObject$JavaWrapper{ public java.lang.Object set(com.mongodb.ReflectionDBObject,java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),<clinit>,MethodDescriptor((): void),com.mongodb.ReflectionDBObject{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),<init>,MethodDescriptor((): void),com.mongodb.ReflectionDBObject{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),access$000,MethodDescriptor((): java.util.Set),com.mongodb.ReflectionDBObject{ static java.util.Set access$000() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),containsField,MethodDescriptor((java.lang.String): boolean),com.mongodb.ReflectionDBObject{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),containsKey,MethodDescriptor((java.lang.String): boolean),com.mongodb.ReflectionDBObject{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),get,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.ReflectionDBObject{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),getWrapper,MethodDescriptor((): com.mongodb.ReflectionDBObject$JavaWrapper),com.mongodb.ReflectionDBObject{ com.mongodb.ReflectionDBObject$JavaWrapper getWrapper() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),getWrapper,MethodDescriptor((java.lang.Class): com.mongodb.ReflectionDBObject$JavaWrapper),com.mongodb.ReflectionDBObject{ public static com.mongodb.ReflectionDBObject$JavaWrapper getWrapper(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),getWrapperIfReflectionObject,MethodDescriptor((java.lang.Class): com.mongodb.ReflectionDBObject$JavaWrapper),com.mongodb.ReflectionDBObject{ public static com.mongodb.ReflectionDBObject$JavaWrapper getWrapperIfReflectionObject(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),get_id,MethodDescriptor((): java.lang.Object),com.mongodb.ReflectionDBObject{ public java.lang.Object get_id() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),isPartialObject,MethodDescriptor((): boolean),com.mongodb.ReflectionDBObject{ public boolean isPartialObject() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),keySet,MethodDescriptor((): java.util.Set),com.mongodb.ReflectionDBObject{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),markAsPartialObject,MethodDescriptor((): void),com.mongodb.ReflectionDBObject{ public void markAsPartialObject() }) => DPure
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),com.mongodb.ReflectionDBObject{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),putAll,MethodDescriptor((java.util.Map): void),com.mongodb.ReflectionDBObject{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),putAll,MethodDescriptor((org.bson.BSONObject): void),com.mongodb.ReflectionDBObject{ public void putAll(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),removeField,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.ReflectionDBObject{ public java.lang.Object removeField(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),set_id,MethodDescriptor((java.lang.Object): void),com.mongodb.ReflectionDBObject{ public void set_id(java.lang.Object) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/ReflectionDBObject),toMap,MethodDescriptor((): java.util.Map),com.mongodb.ReflectionDBObject{ public java.util.Map toMap() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),<init>,MethodDescriptor((java.util.List, java.util.Random, int): void),com.mongodb.ReplicaSetStatus$ReplicaSet{ public void <init>(java.util.List,java.util.Random,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),calculateBestPingTime,MethodDescriptor((java.util.List, boolean): float),com.mongodb.ReplicaSetStatus$ReplicaSet{ static float calculateBestPingTime(java.util.List,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),calculateGoodMembers,MethodDescriptor((java.util.List, float, int, boolean): java.util.List),com.mongodb.ReplicaSetStatus$ReplicaSet{ static java.util.List calculateGoodMembers(java.util.List,float,int,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),checkStatus,MethodDescriptor((): void),com.mongodb.ReplicaSetStatus$ReplicaSet{ private void checkStatus() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),determineSetName,MethodDescriptor((): java.lang.String),com.mongodb.ReplicaSetStatus$ReplicaSet{ private java.lang.String determineSetName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),findMaster,MethodDescriptor((): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.ReplicaSetStatus$ReplicaSet{ private com.mongodb.ReplicaSetStatus$ReplicaSetNode findMaster() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getAMember,MethodDescriptor((): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.ReplicaSetStatus$ReplicaSet{ public com.mongodb.ReplicaSetStatus$ReplicaSetNode getAMember() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getAMember,MethodDescriptor((java.util.List): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.ReplicaSetStatus$ReplicaSet{ public com.mongodb.ReplicaSetStatus$ReplicaSetNode getAMember(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getASecondary,MethodDescriptor((): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.ReplicaSetStatus$ReplicaSet{ public com.mongodb.ReplicaSetStatus$ReplicaSetNode getASecondary() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getASecondary,MethodDescriptor((java.util.List): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.ReplicaSetStatus$ReplicaSet{ public com.mongodb.ReplicaSetStatus$ReplicaSetNode getASecondary(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getAll,MethodDescriptor((): java.util.List),com.mongodb.ReplicaSetStatus$ReplicaSet{ public java.util.List getAll() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getErrorStatus,MethodDescriptor((): com.mongodb.ReplicaSetStatus$ReplicaSetErrorStatus),com.mongodb.ReplicaSetStatus$ReplicaSet{ public com.mongodb.ReplicaSetStatus$ReplicaSetErrorStatus getErrorStatus() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getGoodMembersByTags,MethodDescriptor((java.util.List): java.util.List),com.mongodb.ReplicaSetStatus$ReplicaSet{ public java.util.List getGoodMembersByTags(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getGoodSecondaries,MethodDescriptor((java.util.List): java.util.List),com.mongodb.ReplicaSetStatus$ReplicaSet{ java.util.List getGoodSecondaries(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getGoodSecondariesByTags,MethodDescriptor((java.util.List): java.util.List),com.mongodb.ReplicaSetStatus$ReplicaSet{ public java.util.List getGoodSecondariesByTags(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getMaster,MethodDescriptor((): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.ReplicaSetStatus$ReplicaSet{ public com.mongodb.ReplicaSetStatus$ReplicaSetNode getMaster() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getMaxBsonObjectSize,MethodDescriptor((): int),com.mongodb.ReplicaSetStatus$ReplicaSet{ public int getMaxBsonObjectSize() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getMembersByTags,MethodDescriptor((java.util.List, java.util.List): java.util.List),com.mongodb.ReplicaSetStatus$ReplicaSet{ static java.util.List getMembersByTags(java.util.List,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),getSetName,MethodDescriptor((): java.lang.String),com.mongodb.ReplicaSetStatus$ReplicaSet{ public java.lang.String getSetName() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),hasMaster,MethodDescriptor((): boolean),com.mongodb.ReplicaSetStatus$ReplicaSet{ public boolean hasMaster() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),toString,MethodDescriptor((): java.lang.String),com.mongodb.ReplicaSetStatus$ReplicaSet{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSet),validate,MethodDescriptor((): com.mongodb.ReplicaSetStatus$ReplicaSetErrorStatus),com.mongodb.ReplicaSetStatus$ReplicaSet{ private com.mongodb.ReplicaSetStatus$ReplicaSetErrorStatus validate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetErrorStatus),<init>,MethodDescriptor((boolean, java.lang.String): void),com.mongodb.ReplicaSetStatus$ReplicaSetErrorStatus{ void <init>(boolean,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetErrorStatus),getError,MethodDescriptor((): java.lang.String),com.mongodb.ReplicaSetStatus$ReplicaSetErrorStatus{ public java.lang.String getError() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetErrorStatus),isOk,MethodDescriptor((): boolean),com.mongodb.ReplicaSetStatus$ReplicaSetErrorStatus{ public boolean isOk() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetHolder),<init>,MethodDescriptor((com.mongodb.ReplicaSetStatus): void),com.mongodb.ReplicaSetStatus$ReplicaSetHolder{ void <init>(com.mongodb.ReplicaSetStatus) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetHolder),close,MethodDescriptor((): void),com.mongodb.ReplicaSetStatus$ReplicaSetHolder{ public void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetHolder),get,MethodDescriptor((): com.mongodb.ReplicaSetStatus$ReplicaSet),com.mongodb.ReplicaSetStatus$ReplicaSetHolder{ com.mongodb.ReplicaSetStatus$ReplicaSet get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetHolder),set,MethodDescriptor((com.mongodb.ReplicaSetStatus$ReplicaSet): void),com.mongodb.ReplicaSetStatus$ReplicaSetHolder{ void set(com.mongodb.ReplicaSetStatus$ReplicaSet) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetHolder),toString,MethodDescriptor((): java.lang.String),com.mongodb.ReplicaSetStatus$ReplicaSetHolder{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetHolder),waitForNextUpdate,MethodDescriptor((): void),com.mongodb.ReplicaSetStatus$ReplicaSetHolder{ void waitForNextUpdate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),<init>,MethodDescriptor((com.mongodb.ServerAddress, java.util.Set, java.lang.String, float, boolean, boolean, boolean, java.util.LinkedHashMap, int): void),com.mongodb.ReplicaSetStatus$ReplicaSetNode{ void <init>(com.mongodb.ServerAddress,java.util.Set,java.lang.String,float,boolean,boolean,boolean,java.util.LinkedHashMap,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.ReplicaSetStatus$ReplicaSetNode{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),getMaxBsonObjectSize,MethodDescriptor((): int),com.mongodb.ConnectionStatus$Node{ public int getMaxBsonObjectSize() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),getNames,MethodDescriptor((): java.util.Set),com.mongodb.ReplicaSetStatus$ReplicaSetNode{ public java.util.Set getNames() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),getPingTime,MethodDescriptor((): float),com.mongodb.ReplicaSetStatus$ReplicaSetNode{ public float getPingTime() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),getServerAddress,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.ConnectionStatus$Node{ public com.mongodb.ServerAddress getServerAddress() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),getSetName,MethodDescriptor((): java.lang.String),com.mongodb.ReplicaSetStatus$ReplicaSetNode{ public java.lang.String getSetName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),getTags,MethodDescriptor((): java.util.Set),com.mongodb.ReplicaSetStatus$ReplicaSetNode{ public java.util.Set getTags() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),getTagsFromMap,MethodDescriptor((java.util.LinkedHashMap): java.util.Set),com.mongodb.ReplicaSetStatus$ReplicaSetNode{ private static java.util.Set getTagsFromMap(java.util.LinkedHashMap) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),hashCode,MethodDescriptor((): int),com.mongodb.ReplicaSetStatus$ReplicaSetNode{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),isOk,MethodDescriptor((): boolean),com.mongodb.ConnectionStatus$Node{ public boolean isOk() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),master,MethodDescriptor((): boolean),com.mongodb.ReplicaSetStatus$ReplicaSetNode{ public boolean master() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),secondary,MethodDescriptor((): boolean),com.mongodb.ReplicaSetStatus$ReplicaSetNode{ public boolean secondary() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$ReplicaSetNode),toJSON,MethodDescriptor((): java.lang.String),com.mongodb.ReplicaSetStatus$ReplicaSetNode{ public java.lang.String toJSON() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$Tag),<init>,MethodDescriptor((java.lang.String, java.lang.String): void),com.mongodb.ReplicaSetStatus$Tag{ void <init>(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$Tag),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.ReplicaSetStatus$Tag{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$Tag),hashCode,MethodDescriptor((): int),com.mongodb.ReplicaSetStatus$Tag{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$Tag),toDBObject,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.ReplicaSetStatus$Tag{ public com.mongodb.DBObject toDBObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$UpdatableReplicaSetNode),<init>,MethodDescriptor((com.mongodb.ServerAddress, java.util.List, java.util.concurrent.atomic.AtomicReference, com.mongodb.Mongo, com.mongodb.MongoOptions, java.util.concurrent.atomic.AtomicReference): void),com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode{ void <init>(com.mongodb.ServerAddress,java.util.List,java.util.concurrent.atomic.AtomicReference,com.mongodb.Mongo,com.mongodb.MongoOptions,java.util.concurrent.atomic.AtomicReference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$UpdatableReplicaSetNode),_addIfNotHere,MethodDescriptor((java.lang.String): com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode),com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode{ com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode _addIfNotHere(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$UpdatableReplicaSetNode),access$200,MethodDescriptor((com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode): java.util.Set),com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode{ static java.util.Set access$200(com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$UpdatableReplicaSetNode),access$300,MethodDescriptor((com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode): void),com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode{ static void access$300(com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$UpdatableReplicaSetNode),close,MethodDescriptor((): void),com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode{ public void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$UpdatableReplicaSetNode),findNode,MethodDescriptor((java.lang.String, java.util.List, java.util.concurrent.atomic.AtomicReference): com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode),com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode{ private com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode findNode(java.lang.String,java.util.List,java.util.concurrent.atomic.AtomicReference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$UpdatableReplicaSetNode),getLogger,MethodDescriptor((): java.util.logging.Logger),com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode{ protected java.util.logging.Logger getLogger() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$UpdatableReplicaSetNode),isOk,MethodDescriptor((): boolean),com.mongodb.ConnectionStatus$UpdatableNode{ public boolean isOk() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$UpdatableReplicaSetNode),update,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.ConnectionStatus$UpdatableNode{ public com.mongodb.CommandResult update() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$UpdatableReplicaSetNode),update,MethodDescriptor((java.util.Set): void),com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode{ void update(java.util.Set) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$UpdatableReplicaSetNode),updateAddr,MethodDescriptor((): void),com.mongodb.ReplicaSetStatus$UpdatableReplicaSetNode{ private void updateAddr() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$Updater),<init>,MethodDescriptor((com.mongodb.ReplicaSetStatus, java.util.List): void),com.mongodb.ReplicaSetStatus$Updater{ void <init>(com.mongodb.ReplicaSetStatus,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$Updater),closeAllNodes,MethodDescriptor((): void),com.mongodb.ReplicaSetStatus$Updater{ private void closeAllNodes() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$Updater),createNodeList,MethodDescriptor((): java.util.List),com.mongodb.ReplicaSetStatus$Updater{ private java.util.List createNodeList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$Updater),run,MethodDescriptor((): void),com.mongodb.ReplicaSetStatus$Updater{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$Updater),updateAll,MethodDescriptor((): void),com.mongodb.ReplicaSetStatus$Updater{ public void updateAll() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus$Updater),updateInetAddresses,MethodDescriptor((): void),com.mongodb.ReplicaSetStatus$Updater{ private void updateInetAddresses() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),<clinit>,MethodDescriptor((): void),com.mongodb.ReplicaSetStatus{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),<init>,MethodDescriptor((com.mongodb.Mongo, java.util.List): void),com.mongodb.ReplicaSetStatus{ void <init>(com.mongodb.Mongo,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),access$000,MethodDescriptor((com.mongodb.ReplicaSetStatus): java.util.concurrent.atomic.AtomicReference),com.mongodb.ReplicaSetStatus{ static java.util.concurrent.atomic.AtomicReference access$000(com.mongodb.ReplicaSetStatus) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),access$100,MethodDescriptor((com.mongodb.ReplicaSetStatus): java.util.concurrent.atomic.AtomicReference),com.mongodb.ReplicaSetStatus{ static java.util.concurrent.atomic.AtomicReference access$100(com.mongodb.ReplicaSetStatus) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),checkClosed,MethodDescriptor((): void),com.mongodb.ConnectionStatus{ void checkClosed() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),close,MethodDescriptor((): void),com.mongodb.ConnectionStatus{ void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),ensureMaster,MethodDescriptor((): com.mongodb.ConnectionStatus$Node),com.mongodb.ReplicaSetStatus{ com.mongodb.ConnectionStatus$Node ensureMaster() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),getASecondary,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.ReplicaSetStatus{ com.mongodb.ServerAddress getASecondary() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),getMaster,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.ReplicaSetStatus{ public com.mongodb.ServerAddress getMaster() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),getMasterNode,MethodDescriptor((): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.ReplicaSetStatus{ com.mongodb.ReplicaSetStatus$ReplicaSetNode getMasterNode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),getMaxBsonObjectSize,MethodDescriptor((): int),com.mongodb.ReplicaSetStatus{ public int getMaxBsonObjectSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),getName,MethodDescriptor((): java.lang.String),com.mongodb.ReplicaSetStatus{ public java.lang.String getName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),getServerAddressList,MethodDescriptor((): java.util.List),com.mongodb.ReplicaSetStatus{ java.util.List getServerAddressList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),hasServerUp,MethodDescriptor((): boolean),com.mongodb.ReplicaSetStatus{ boolean hasServerUp() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),isMaster,MethodDescriptor((com.mongodb.ServerAddress): boolean),com.mongodb.ReplicaSetStatus{ public boolean isMaster(com.mongodb.ServerAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),start,MethodDescriptor((): void),com.mongodb.ConnectionStatus{ void start() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ReplicaSetStatus),toString,MethodDescriptor((): java.lang.String),com.mongodb.ReplicaSetStatus{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Response$MyInputStream),<init>,MethodDescriptor((java.io.InputStream, int): void),com.mongodb.Response$MyInputStream{ void <init>(java.io.InputStream,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Response$MyInputStream),access$000,MethodDescriptor((com.mongodb.Response$MyInputStream): int),com.mongodb.Response$MyInputStream{ static int access$000(com.mongodb.Response$MyInputStream) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/Response$MyInputStream),available,MethodDescriptor((): int),com.mongodb.Response$MyInputStream{ public int available() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Response$MyInputStream),close,MethodDescriptor((): void),com.mongodb.Response$MyInputStream{ public void close() }) => DPure
DefinedMethod(ObjectType(com/mongodb/Response$MyInputStream),read,MethodDescriptor((): int),com.mongodb.Response$MyInputStream{ public int read() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Response$MyInputStream),read,MethodDescriptor((byte[], int, int): int),com.mongodb.Response$MyInputStream{ public int read(byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Response),<init>,MethodDescriptor((com.mongodb.ServerAddress, com.mongodb.DBCollection, java.io.InputStream, com.mongodb.DBDecoder): void),com.mongodb.Response{ void <init>(com.mongodb.ServerAddress,com.mongodb.DBCollection,java.io.InputStream,com.mongodb.DBDecoder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Response),cursor,MethodDescriptor((): long),com.mongodb.Response{ public long cursor() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Response),get,MethodDescriptor((int): com.mongodb.DBObject),com.mongodb.Response{ public com.mongodb.DBObject get(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Response),getError,MethodDescriptor((): com.mongodb.ServerError),com.mongodb.Response{ public com.mongodb.ServerError getError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Response),hasGetMore,MethodDescriptor((int): boolean),com.mongodb.Response{ public boolean hasGetMore(int) }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Response),iterator,MethodDescriptor((): java.util.Iterator),com.mongodb.Response{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/Response),serverUsed,MethodDescriptor((): com.mongodb.ServerAddress),com.mongodb.Response{ public com.mongodb.ServerAddress serverUsed() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/Response),size,MethodDescriptor((): int),com.mongodb.Response{ public int size() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/Response),toString,MethodDescriptor((): java.lang.String),com.mongodb.Response{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerAddress),<init>,MethodDescriptor((): void),com.mongodb.ServerAddress{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerAddress),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.ServerAddress{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerAddress),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.ServerAddress{ public void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerAddress),<init>,MethodDescriptor((java.net.InetAddress): void),com.mongodb.ServerAddress{ public void <init>(java.net.InetAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerAddress),<init>,MethodDescriptor((java.net.InetAddress, int): void),com.mongodb.ServerAddress{ public void <init>(java.net.InetAddress,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerAddress),<init>,MethodDescriptor((java.net.InetSocketAddress): void),com.mongodb.ServerAddress{ public void <init>(java.net.InetSocketAddress) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerAddress),defaultHost,MethodDescriptor((): java.lang.String),com.mongodb.ServerAddress{ public static java.lang.String defaultHost() }) => Pure
DefinedMethod(ObjectType(com/mongodb/ServerAddress),defaultPort,MethodDescriptor((): int),com.mongodb.ServerAddress{ public static int defaultPort() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ServerAddress),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.ServerAddress{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerAddress),getHost,MethodDescriptor((): java.lang.String),com.mongodb.ServerAddress{ public java.lang.String getHost() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ServerAddress),getPort,MethodDescriptor((): int),com.mongodb.ServerAddress{ public int getPort() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ServerAddress),getSocketAddress,MethodDescriptor((): java.net.InetSocketAddress),com.mongodb.ServerAddress{ public java.net.InetSocketAddress getSocketAddress() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ServerAddress),hashCode,MethodDescriptor((): int),com.mongodb.ServerAddress{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerAddress),sameHost,MethodDescriptor((java.lang.String): boolean),com.mongodb.ServerAddress{ public boolean sameHost(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerAddress),toString,MethodDescriptor((): java.lang.String),com.mongodb.ServerAddress{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerAddress),updateInetAddress,MethodDescriptor((): boolean),com.mongodb.ServerAddress{ boolean updateInetAddress() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerError),<init>,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.ServerError{ void <init>(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerError),getCode,MethodDescriptor((): int),com.mongodb.ServerError{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/ServerError),getCode,MethodDescriptor((org.bson.BSONObject): int),com.mongodb.ServerError{ static int getCode(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerError),getError,MethodDescriptor((): java.lang.String),com.mongodb.ServerError{ public java.lang.String getError() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/ServerError),getMsg,MethodDescriptor((org.bson.BSONObject, java.lang.String): java.lang.String),com.mongodb.ServerError{ static java.lang.String getMsg(org.bson.BSONObject,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerError),isNotMasterError,MethodDescriptor((): boolean),com.mongodb.ServerError{ public boolean isNotMasterError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/ServerError),toString,MethodDescriptor((): java.lang.String),com.mongodb.ServerError{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$NearestReadPreference),<init>,MethodDescriptor((): void),com.mongodb.TaggableReadPreference$NearestReadPreference{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$NearestReadPreference),<init>,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject[]): void),com.mongodb.TaggableReadPreference$NearestReadPreference{ void <init>(com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$NearestReadPreference),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.TaggableReadPreference{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$NearestReadPreference),getName,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference$NearestReadPreference{ public java.lang.String getName() }) => Pure
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$NearestReadPreference),getNode,MethodDescriptor((com.mongodb.ReplicaSetStatus$ReplicaSet): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.TaggableReadPreference$NearestReadPreference{ com.mongodb.ReplicaSetStatus$ReplicaSetNode getNode(com.mongodb.ReplicaSetStatus$ReplicaSet) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$NearestReadPreference),getTagSets,MethodDescriptor((): java.util.List),com.mongodb.TaggableReadPreference{ public java.util.List getTagSets() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$NearestReadPreference),hashCode,MethodDescriptor((): int),com.mongodb.TaggableReadPreference{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$NearestReadPreference),isSlaveOk,MethodDescriptor((): boolean),com.mongodb.TaggableReadPreference{ public boolean isSlaveOk() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$NearestReadPreference),printTags,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference{ java.lang.String printTags() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$NearestReadPreference),toDBObject,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.TaggableReadPreference{ public com.mongodb.DBObject toDBObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$NearestReadPreference),toString,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$PrimaryPreferredReadPreference),<init>,MethodDescriptor((): void),com.mongodb.TaggableReadPreference$PrimaryPreferredReadPreference{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$PrimaryPreferredReadPreference),<init>,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject[]): void),com.mongodb.TaggableReadPreference$PrimaryPreferredReadPreference{ void <init>(com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$PrimaryPreferredReadPreference),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.TaggableReadPreference{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$PrimaryPreferredReadPreference),getName,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference$PrimaryPreferredReadPreference{ public java.lang.String getName() }) => Pure
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$PrimaryPreferredReadPreference),getNode,MethodDescriptor((com.mongodb.ReplicaSetStatus$ReplicaSet): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.TaggableReadPreference$PrimaryPreferredReadPreference{ com.mongodb.ReplicaSetStatus$ReplicaSetNode getNode(com.mongodb.ReplicaSetStatus$ReplicaSet) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$PrimaryPreferredReadPreference),getTagSets,MethodDescriptor((): java.util.List),com.mongodb.TaggableReadPreference{ public java.util.List getTagSets() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$PrimaryPreferredReadPreference),hashCode,MethodDescriptor((): int),com.mongodb.TaggableReadPreference{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$PrimaryPreferredReadPreference),isSlaveOk,MethodDescriptor((): boolean),com.mongodb.TaggableReadPreference{ public boolean isSlaveOk() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$PrimaryPreferredReadPreference),printTags,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference{ java.lang.String printTags() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$PrimaryPreferredReadPreference),toDBObject,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.TaggableReadPreference{ public com.mongodb.DBObject toDBObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$PrimaryPreferredReadPreference),toString,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryPreferredReadPreference),<init>,MethodDescriptor((): void),com.mongodb.TaggableReadPreference$SecondaryPreferredReadPreference{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryPreferredReadPreference),<init>,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject[]): void),com.mongodb.TaggableReadPreference$SecondaryPreferredReadPreference{ void <init>(com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryPreferredReadPreference),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.TaggableReadPreference{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryPreferredReadPreference),getName,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference$SecondaryPreferredReadPreference{ public java.lang.String getName() }) => Pure
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryPreferredReadPreference),getNode,MethodDescriptor((com.mongodb.ReplicaSetStatus$ReplicaSet): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.TaggableReadPreference$SecondaryPreferredReadPreference{ com.mongodb.ReplicaSetStatus$ReplicaSetNode getNode(com.mongodb.ReplicaSetStatus$ReplicaSet) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryPreferredReadPreference),getTagSets,MethodDescriptor((): java.util.List),com.mongodb.TaggableReadPreference{ public java.util.List getTagSets() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryPreferredReadPreference),hashCode,MethodDescriptor((): int),com.mongodb.TaggableReadPreference{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryPreferredReadPreference),isSlaveOk,MethodDescriptor((): boolean),com.mongodb.TaggableReadPreference{ public boolean isSlaveOk() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryPreferredReadPreference),printTags,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference{ java.lang.String printTags() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryPreferredReadPreference),toDBObject,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.TaggableReadPreference{ public com.mongodb.DBObject toDBObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryPreferredReadPreference),toString,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryReadPreference),<init>,MethodDescriptor((): void),com.mongodb.TaggableReadPreference$SecondaryReadPreference{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryReadPreference),<init>,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject[]): void),com.mongodb.TaggableReadPreference$SecondaryReadPreference{ void <init>(com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryReadPreference),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.TaggableReadPreference{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryReadPreference),getName,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference$SecondaryReadPreference{ public java.lang.String getName() }) => Pure
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryReadPreference),getNode,MethodDescriptor((com.mongodb.ReplicaSetStatus$ReplicaSet): com.mongodb.ReplicaSetStatus$ReplicaSetNode),com.mongodb.TaggableReadPreference$SecondaryReadPreference{ com.mongodb.ReplicaSetStatus$ReplicaSetNode getNode(com.mongodb.ReplicaSetStatus$ReplicaSet) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryReadPreference),getTagSets,MethodDescriptor((): java.util.List),com.mongodb.TaggableReadPreference{ public java.util.List getTagSets() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryReadPreference),hashCode,MethodDescriptor((): int),com.mongodb.TaggableReadPreference{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryReadPreference),isSlaveOk,MethodDescriptor((): boolean),com.mongodb.TaggableReadPreference{ public boolean isSlaveOk() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryReadPreference),printTags,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference{ java.lang.String printTags() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryReadPreference),toDBObject,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.TaggableReadPreference{ public com.mongodb.DBObject toDBObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference$SecondaryReadPreference),toString,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),<clinit>,MethodDescriptor((): void),com.mongodb.TaggableReadPreference{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),<init>,MethodDescriptor((): void),com.mongodb.TaggableReadPreference{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),<init>,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject[]): void),com.mongodb.TaggableReadPreference{ void <init>(com.mongodb.DBObject,com.mongodb.DBObject[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),access$000,MethodDescriptor((com.mongodb.DBObject): java.util.List),com.mongodb.TaggableReadPreference{ static java.util.List access$000(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.TaggableReadPreference{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),getTagListFromDBObject,MethodDescriptor((com.mongodb.DBObject): java.util.List),com.mongodb.TaggableReadPreference{ private static java.util.List getTagListFromDBObject(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),getTagSets,MethodDescriptor((): java.util.List),com.mongodb.TaggableReadPreference{ public java.util.List getTagSets() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),hashCode,MethodDescriptor((): int),com.mongodb.TaggableReadPreference{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),isSlaveOk,MethodDescriptor((): boolean),com.mongodb.TaggableReadPreference{ public boolean isSlaveOk() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),printTags,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference{ java.lang.String printTags() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),toDBObject,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.TaggableReadPreference{ public com.mongodb.DBObject toDBObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/TaggableReadPreference),toString,MethodDescriptor((): java.lang.String),com.mongodb.TaggableReadPreference{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),<init>,MethodDescriptor((): void),com.mongodb.WriteConcern$Majority{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),<init>,MethodDescriptor((int, boolean, boolean): void),com.mongodb.WriteConcern$Majority{ public void <init>(int,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),callGetLastError,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean callGetLastError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),continueOnErrorForInsert,MethodDescriptor((boolean): com.mongodb.WriteConcern),com.mongodb.WriteConcern{ public com.mongodb.WriteConcern continueOnErrorForInsert(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.WriteConcern{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),fsync,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean fsync() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),getCommand,MethodDescriptor((): com.mongodb.BasicDBObject),com.mongodb.WriteConcern{ public com.mongodb.BasicDBObject getCommand() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),getContinueOnErrorForInsert,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean getContinueOnErrorForInsert() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),getFsync,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean getFsync() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),getJ,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean getJ() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),getW,MethodDescriptor((): int),com.mongodb.WriteConcern{ public int getW() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),getWObject,MethodDescriptor((): java.lang.Object),com.mongodb.WriteConcern{ public java.lang.Object getWObject() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),getWString,MethodDescriptor((): java.lang.String),com.mongodb.WriteConcern{ public java.lang.String getWString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),getWtimeout,MethodDescriptor((): int),com.mongodb.WriteConcern{ public int getWtimeout() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),hashCode,MethodDescriptor((): int),com.mongodb.WriteConcern{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),raiseNetworkErrors,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean raiseNetworkErrors() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),setWObject,MethodDescriptor((java.lang.Object): void),com.mongodb.WriteConcern{ public void setWObject(java.lang.Object) }) => DExternallyPure
DefinedMethod(ObjectType(com/mongodb/WriteConcern$Majority),toString,MethodDescriptor((): java.lang.String),com.mongodb.WriteConcern$Majority{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),<clinit>,MethodDescriptor((): void),com.mongodb.WriteConcern{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),<init>,MethodDescriptor((): void),com.mongodb.WriteConcern{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),<init>,MethodDescriptor((boolean): void),com.mongodb.WriteConcern{ public void <init>(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),<init>,MethodDescriptor((int): void),com.mongodb.WriteConcern{ public void <init>(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),<init>,MethodDescriptor((int, int): void),com.mongodb.WriteConcern{ public void <init>(int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),<init>,MethodDescriptor((int, int, boolean): void),com.mongodb.WriteConcern{ public void <init>(int,int,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),<init>,MethodDescriptor((int, int, boolean, boolean): void),com.mongodb.WriteConcern{ public void <init>(int,int,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),<init>,MethodDescriptor((int, int, boolean, boolean, boolean): void),com.mongodb.WriteConcern{ public void <init>(int,int,boolean,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.WriteConcern{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),<init>,MethodDescriptor((java.lang.String, int, boolean, boolean): void),com.mongodb.WriteConcern{ public void <init>(java.lang.String,int,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),<init>,MethodDescriptor((java.lang.String, int, boolean, boolean, boolean): void),com.mongodb.WriteConcern{ public void <init>(java.lang.String,int,boolean,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),callGetLastError,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean callGetLastError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),continueOnErrorForInsert,MethodDescriptor((boolean): com.mongodb.WriteConcern),com.mongodb.WriteConcern{ public com.mongodb.WriteConcern continueOnErrorForInsert(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),equals,MethodDescriptor((java.lang.Object): boolean),com.mongodb.WriteConcern{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),fsync,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean fsync() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteConcern),getCommand,MethodDescriptor((): com.mongodb.BasicDBObject),com.mongodb.WriteConcern{ public com.mongodb.BasicDBObject getCommand() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),getContinueOnErrorForInsert,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean getContinueOnErrorForInsert() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteConcern),getFsync,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean getFsync() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteConcern),getJ,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean getJ() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteConcern),getW,MethodDescriptor((): int),com.mongodb.WriteConcern{ public int getW() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),getWObject,MethodDescriptor((): java.lang.Object),com.mongodb.WriteConcern{ public java.lang.Object getWObject() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/WriteConcern),getWString,MethodDescriptor((): java.lang.String),com.mongodb.WriteConcern{ public java.lang.String getWString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),getWtimeout,MethodDescriptor((): int),com.mongodb.WriteConcern{ public int getWtimeout() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteConcern),hashCode,MethodDescriptor((): int),com.mongodb.WriteConcern{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),majorityWriteConcern,MethodDescriptor((int, boolean, boolean): com.mongodb.WriteConcern$Majority),com.mongodb.WriteConcern{ public static com.mongodb.WriteConcern$Majority majorityWriteConcern(int,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),raiseNetworkErrors,MethodDescriptor((): boolean),com.mongodb.WriteConcern{ public boolean raiseNetworkErrors() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),setWObject,MethodDescriptor((java.lang.Object): void),com.mongodb.WriteConcern{ public void setWObject(java.lang.Object) }) => DExternallyPure
DefinedMethod(ObjectType(com/mongodb/WriteConcern),toString,MethodDescriptor((): java.lang.String),com.mongodb.WriteConcern{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcern),valueOf,MethodDescriptor((java.lang.String): com.mongodb.WriteConcern),com.mongodb.WriteConcern{ public static com.mongodb.WriteConcern valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcernException),<init>,MethodDescriptor((com.mongodb.CommandResult): void),com.mongodb.WriteConcernException{ public void <init>(com.mongodb.CommandResult) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteConcernException),getCode,MethodDescriptor((): int),com.mongodb.MongoException{ public int getCode() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteConcernException),getCommandResult,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.WriteConcernException{ public com.mongodb.CommandResult getCommandResult() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/WriteResult),<init>,MethodDescriptor((com.mongodb.CommandResult, com.mongodb.WriteConcern): void),com.mongodb.WriteResult{ void <init>(com.mongodb.CommandResult,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteResult),<init>,MethodDescriptor((com.mongodb.DB, com.mongodb.DBPort, com.mongodb.WriteConcern): void),com.mongodb.WriteResult{ void <init>(com.mongodb.DB,com.mongodb.DBPort,com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteResult),getCachedLastError,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.WriteResult{ public com.mongodb.CommandResult getCachedLastError() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/WriteResult),getError,MethodDescriptor((): java.lang.String),com.mongodb.WriteResult{ public java.lang.String getError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteResult),getField,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.WriteResult{ public java.lang.Object getField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteResult),getLastConcern,MethodDescriptor((): com.mongodb.WriteConcern),com.mongodb.WriteResult{ public com.mongodb.WriteConcern getLastConcern() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/WriteResult),getLastError,MethodDescriptor((): com.mongodb.CommandResult),com.mongodb.WriteResult{ public com.mongodb.CommandResult getLastError() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteResult),getLastError,MethodDescriptor((com.mongodb.WriteConcern): com.mongodb.CommandResult),com.mongodb.WriteResult{ public com.mongodb.CommandResult getLastError(com.mongodb.WriteConcern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteResult),getN,MethodDescriptor((): int),com.mongodb.WriteResult{ public int getN() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/WriteResult),isLazy,MethodDescriptor((): boolean),com.mongodb.WriteResult{ public boolean isLazy() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/WriteResult),toString,MethodDescriptor((): java.lang.String),com.mongodb.WriteResult{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/CLI),<clinit>,MethodDescriptor((): void),com.mongodb.gridfs.CLI{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/CLI),<init>,MethodDescriptor((): void),com.mongodb.gridfs.CLI{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/CLI),getGridFS,MethodDescriptor((): com.mongodb.gridfs.GridFS),com.mongodb.gridfs.CLI{ private static com.mongodb.gridfs.GridFS getGridFS() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/CLI),getMongo,MethodDescriptor((): com.mongodb.Mongo),com.mongodb.gridfs.CLI{ private static com.mongodb.Mongo getMongo() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/CLI),main,MethodDescriptor((java.lang.String[]): void),com.mongodb.gridfs.CLI{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/CLI),printUsage,MethodDescriptor((): void),com.mongodb.gridfs.CLI{ private static void printUsage() }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),<clinit>,MethodDescriptor((): void),com.mongodb.gridfs.GridFS{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),<init>,MethodDescriptor((com.mongodb.DB): void),com.mongodb.gridfs.GridFS{ public void <init>(com.mongodb.DB) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),<init>,MethodDescriptor((com.mongodb.DB, java.lang.String): void),com.mongodb.gridfs.GridFS{ public void <init>(com.mongodb.DB,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),_fix,MethodDescriptor((java.lang.Object): com.mongodb.gridfs.GridFSDBFile),com.mongodb.gridfs.GridFS{ protected com.mongodb.gridfs.GridFSDBFile _fix(java.lang.Object) }) => DContextuallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),createFile,MethodDescriptor((): com.mongodb.gridfs.GridFSInputFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSInputFile createFile() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),createFile,MethodDescriptor((byte[]): com.mongodb.gridfs.GridFSInputFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSInputFile createFile(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),createFile,MethodDescriptor((java.io.File): com.mongodb.gridfs.GridFSInputFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSInputFile createFile(java.io.File) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),createFile,MethodDescriptor((java.io.InputStream): com.mongodb.gridfs.GridFSInputFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),createFile,MethodDescriptor((java.io.InputStream, boolean): com.mongodb.gridfs.GridFSInputFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),createFile,MethodDescriptor((java.io.InputStream, java.lang.String): com.mongodb.gridfs.GridFSInputFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),createFile,MethodDescriptor((java.io.InputStream, java.lang.String, boolean): com.mongodb.gridfs.GridFSInputFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream,java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),createFile,MethodDescriptor((java.lang.String): com.mongodb.gridfs.GridFSInputFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSInputFile createFile(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),find,MethodDescriptor((com.mongodb.DBObject): java.util.List),com.mongodb.gridfs.GridFS{ public java.util.List find(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),find,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): java.util.List),com.mongodb.gridfs.GridFS{ public java.util.List find(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),find,MethodDescriptor((java.lang.String): java.util.List),com.mongodb.gridfs.GridFS{ public java.util.List find(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),find,MethodDescriptor((java.lang.String, com.mongodb.DBObject): java.util.List),com.mongodb.gridfs.GridFS{ public java.util.List find(java.lang.String,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),find,MethodDescriptor((org.bson.types.ObjectId): com.mongodb.gridfs.GridFSDBFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSDBFile find(org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),findOne,MethodDescriptor((com.mongodb.DBObject): com.mongodb.gridfs.GridFSDBFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSDBFile findOne(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),findOne,MethodDescriptor((java.lang.String): com.mongodb.gridfs.GridFSDBFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSDBFile findOne(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),findOne,MethodDescriptor((org.bson.types.ObjectId): com.mongodb.gridfs.GridFSDBFile),com.mongodb.gridfs.GridFS{ public com.mongodb.gridfs.GridFSDBFile findOne(org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),getBucketName,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFS{ public java.lang.String getBucketName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),getDB,MethodDescriptor((): com.mongodb.DB),com.mongodb.gridfs.GridFS{ public com.mongodb.DB getDB() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),getFileList,MethodDescriptor((): com.mongodb.DBCursor),com.mongodb.gridfs.GridFS{ public com.mongodb.DBCursor getFileList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),getFileList,MethodDescriptor((com.mongodb.DBObject): com.mongodb.DBCursor),com.mongodb.gridfs.GridFS{ public com.mongodb.DBCursor getFileList(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),getFileList,MethodDescriptor((com.mongodb.DBObject, com.mongodb.DBObject): com.mongodb.DBCursor),com.mongodb.gridfs.GridFS{ public com.mongodb.DBCursor getFileList(com.mongodb.DBObject,com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),remove,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.gridfs.GridFS{ public void remove(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),remove,MethodDescriptor((java.lang.String): void),com.mongodb.gridfs.GridFS{ public void remove(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFS),remove,MethodDescriptor((org.bson.types.ObjectId): void),com.mongodb.gridfs.GridFS{ public void remove(org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile$MyInputStream),<init>,MethodDescriptor((com.mongodb.gridfs.GridFSDBFile): void),com.mongodb.gridfs.GridFSDBFile$MyInputStream{ void <init>(com.mongodb.gridfs.GridFSDBFile) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile$MyInputStream),available,MethodDescriptor((): int),com.mongodb.gridfs.GridFSDBFile$MyInputStream{ public int available() }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile$MyInputStream),close,MethodDescriptor((): void),com.mongodb.gridfs.GridFSDBFile$MyInputStream{ public void close() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile$MyInputStream),mark,MethodDescriptor((int): void),com.mongodb.gridfs.GridFSDBFile$MyInputStream{ public void mark(int) }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile$MyInputStream),markSupported,MethodDescriptor((): boolean),com.mongodb.gridfs.GridFSDBFile$MyInputStream{ public boolean markSupported() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile$MyInputStream),read,MethodDescriptor((): int),com.mongodb.gridfs.GridFSDBFile$MyInputStream{ public int read() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile$MyInputStream),read,MethodDescriptor((byte[]): int),com.mongodb.gridfs.GridFSDBFile$MyInputStream{ public int read(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile$MyInputStream),read,MethodDescriptor((byte[], int, int): int),com.mongodb.gridfs.GridFSDBFile$MyInputStream{ public int read(byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile$MyInputStream),reset,MethodDescriptor((): void),com.mongodb.gridfs.GridFSDBFile$MyInputStream{ public void reset() }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile$MyInputStream),skip,MethodDescriptor((long): long),com.mongodb.gridfs.GridFSDBFile$MyInputStream{ public long skip(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),<init>,MethodDescriptor((): void),com.mongodb.gridfs.GridFSDBFile{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),containsField,MethodDescriptor((java.lang.String): boolean),com.mongodb.gridfs.GridFSFile{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),containsKey,MethodDescriptor((java.lang.String): boolean),com.mongodb.gridfs.GridFSFile{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),get,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),getAliases,MethodDescriptor((): java.util.List),com.mongodb.gridfs.GridFSFile{ public java.util.List getAliases() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),getChunk,MethodDescriptor((int): byte[]),com.mongodb.gridfs.GridFSDBFile{ byte[] getChunk(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),getChunkSize,MethodDescriptor((): long),com.mongodb.gridfs.GridFSFile{ public long getChunkSize() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),getContentType,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String getContentType() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),getFilename,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String getFilename() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),getId,MethodDescriptor((): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object getId() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),getInputStream,MethodDescriptor((): java.io.InputStream),com.mongodb.gridfs.GridFSDBFile{ public java.io.InputStream getInputStream() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),getLength,MethodDescriptor((): long),com.mongodb.gridfs.GridFSFile{ public long getLength() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),getMD5,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String getMD5() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),getMetaData,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.gridfs.GridFSFile{ public com.mongodb.DBObject getMetaData() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),getUploadDate,MethodDescriptor((): java.util.Date),com.mongodb.gridfs.GridFSFile{ public java.util.Date getUploadDate() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),isPartialObject,MethodDescriptor((): boolean),com.mongodb.gridfs.GridFSFile{ public boolean isPartialObject() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),keySet,MethodDescriptor((): java.util.Set),com.mongodb.gridfs.GridFSFile{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),markAsPartialObject,MethodDescriptor((): void),com.mongodb.gridfs.GridFSFile{ public void markAsPartialObject() }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),numChunks,MethodDescriptor((): int),com.mongodb.gridfs.GridFSFile{ public int numChunks() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),putAll,MethodDescriptor((java.util.Map): void),com.mongodb.gridfs.GridFSFile{ public void putAll(java.util.Map) }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),putAll,MethodDescriptor((org.bson.BSONObject): void),com.mongodb.gridfs.GridFSFile{ public void putAll(org.bson.BSONObject) }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),remove,MethodDescriptor((): void),com.mongodb.gridfs.GridFSDBFile{ void remove() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),removeField,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object removeField(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),save,MethodDescriptor((): void),com.mongodb.gridfs.GridFSFile{ public void save() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),setGridFS,MethodDescriptor((com.mongodb.gridfs.GridFS): void),com.mongodb.gridfs.GridFSFile{ protected void setGridFS(com.mongodb.gridfs.GridFS) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),setMetaData,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.gridfs.GridFSFile{ public void setMetaData(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),toMap,MethodDescriptor((): java.util.Map),com.mongodb.gridfs.GridFSFile{ public java.util.Map toMap() }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),toString,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),validate,MethodDescriptor((): void),com.mongodb.gridfs.GridFSFile{ public void validate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),writeTo,MethodDescriptor((java.io.File): long),com.mongodb.gridfs.GridFSDBFile{ public long writeTo(java.io.File) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),writeTo,MethodDescriptor((java.io.OutputStream): long),com.mongodb.gridfs.GridFSDBFile{ public long writeTo(java.io.OutputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSDBFile),writeTo,MethodDescriptor((java.lang.String): long),com.mongodb.gridfs.GridFSDBFile{ public long writeTo(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),<clinit>,MethodDescriptor((): void),com.mongodb.gridfs.GridFSFile{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),<init>,MethodDescriptor((): void),com.mongodb.gridfs.GridFSFile{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),containsField,MethodDescriptor((java.lang.String): boolean),com.mongodb.gridfs.GridFSFile{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),containsKey,MethodDescriptor((java.lang.String): boolean),com.mongodb.gridfs.GridFSFile{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),get,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),getAliases,MethodDescriptor((): java.util.List),com.mongodb.gridfs.GridFSFile{ public java.util.List getAliases() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),getChunkSize,MethodDescriptor((): long),com.mongodb.gridfs.GridFSFile{ public long getChunkSize() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),getContentType,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String getContentType() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),getFilename,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String getFilename() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),getId,MethodDescriptor((): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object getId() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),getLength,MethodDescriptor((): long),com.mongodb.gridfs.GridFSFile{ public long getLength() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),getMD5,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String getMD5() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),getMetaData,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.gridfs.GridFSFile{ public com.mongodb.DBObject getMetaData() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),getUploadDate,MethodDescriptor((): java.util.Date),com.mongodb.gridfs.GridFSFile{ public java.util.Date getUploadDate() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),isPartialObject,MethodDescriptor((): boolean),com.mongodb.gridfs.GridFSFile{ public boolean isPartialObject() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),keySet,MethodDescriptor((): java.util.Set),com.mongodb.gridfs.GridFSFile{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),markAsPartialObject,MethodDescriptor((): void),com.mongodb.gridfs.GridFSFile{ public void markAsPartialObject() }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),numChunks,MethodDescriptor((): int),com.mongodb.gridfs.GridFSFile{ public int numChunks() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),putAll,MethodDescriptor((java.util.Map): void),com.mongodb.gridfs.GridFSFile{ public void putAll(java.util.Map) }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),putAll,MethodDescriptor((org.bson.BSONObject): void),com.mongodb.gridfs.GridFSFile{ public void putAll(org.bson.BSONObject) }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),removeField,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object removeField(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),save,MethodDescriptor((): void),com.mongodb.gridfs.GridFSFile{ public void save() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),setGridFS,MethodDescriptor((com.mongodb.gridfs.GridFS): void),com.mongodb.gridfs.GridFSFile{ protected void setGridFS(com.mongodb.gridfs.GridFS) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),setMetaData,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.gridfs.GridFSFile{ public void setMetaData(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),toMap,MethodDescriptor((): java.util.Map),com.mongodb.gridfs.GridFSFile{ public java.util.Map toMap() }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),toString,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSFile),validate,MethodDescriptor((): void),com.mongodb.gridfs.GridFSFile{ public void validate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile$MyOutputStream),<init>,MethodDescriptor((com.mongodb.gridfs.GridFSInputFile): void),com.mongodb.gridfs.GridFSInputFile$MyOutputStream{ void <init>(com.mongodb.gridfs.GridFSInputFile) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile$MyOutputStream),close,MethodDescriptor((): void),com.mongodb.gridfs.GridFSInputFile$MyOutputStream{ public void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile$MyOutputStream),write,MethodDescriptor((byte[], int, int): void),com.mongodb.gridfs.GridFSInputFile$MyOutputStream{ public void write(byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile$MyOutputStream),write,MethodDescriptor((int): void),com.mongodb.gridfs.GridFSInputFile$MyOutputStream{ public void write(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),<init>,MethodDescriptor((com.mongodb.gridfs.GridFS): void),com.mongodb.gridfs.GridFSInputFile{ protected void <init>(com.mongodb.gridfs.GridFS) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),<init>,MethodDescriptor((com.mongodb.gridfs.GridFS, java.io.InputStream, java.lang.String): void),com.mongodb.gridfs.GridFSInputFile{ protected void <init>(com.mongodb.gridfs.GridFS,java.io.InputStream,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),<init>,MethodDescriptor((com.mongodb.gridfs.GridFS, java.io.InputStream, java.lang.String, boolean): void),com.mongodb.gridfs.GridFSInputFile{ protected void <init>(com.mongodb.gridfs.GridFS,java.io.InputStream,java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),<init>,MethodDescriptor((com.mongodb.gridfs.GridFS, java.lang.String): void),com.mongodb.gridfs.GridFSInputFile{ protected void <init>(com.mongodb.gridfs.GridFS,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),_dumpBuffer,MethodDescriptor((boolean): void),com.mongodb.gridfs.GridFSInputFile{ private void _dumpBuffer(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),_finishData,MethodDescriptor((): void),com.mongodb.gridfs.GridFSInputFile{ private void _finishData() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),_readStream2Buffer,MethodDescriptor((): int),com.mongodb.gridfs.GridFSInputFile{ private int _readStream2Buffer() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),access$000,MethodDescriptor((com.mongodb.gridfs.GridFSInputFile): int),com.mongodb.gridfs.GridFSInputFile{ static int access$000(com.mongodb.gridfs.GridFSInputFile) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),access$012,MethodDescriptor((com.mongodb.gridfs.GridFSInputFile, int): int),com.mongodb.gridfs.GridFSInputFile{ static int access$012(com.mongodb.gridfs.GridFSInputFile,int) }) => DContextuallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),access$100,MethodDescriptor((com.mongodb.gridfs.GridFSInputFile): byte[]),com.mongodb.gridfs.GridFSInputFile{ static byte[] access$100(com.mongodb.gridfs.GridFSInputFile) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),access$200,MethodDescriptor((com.mongodb.gridfs.GridFSInputFile, boolean): void),com.mongodb.gridfs.GridFSInputFile{ static void access$200(com.mongodb.gridfs.GridFSInputFile,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),access$300,MethodDescriptor((com.mongodb.gridfs.GridFSInputFile): void),com.mongodb.gridfs.GridFSInputFile{ static void access$300(com.mongodb.gridfs.GridFSInputFile) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),access$401,MethodDescriptor((com.mongodb.gridfs.GridFSInputFile): void),com.mongodb.gridfs.GridFSInputFile{ static void access$401(com.mongodb.gridfs.GridFSInputFile) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),containsField,MethodDescriptor((java.lang.String): boolean),com.mongodb.gridfs.GridFSFile{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),containsKey,MethodDescriptor((java.lang.String): boolean),com.mongodb.gridfs.GridFSFile{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),createChunk,MethodDescriptor((java.lang.Object, int, byte[]): com.mongodb.DBObject),com.mongodb.gridfs.GridFSInputFile{ protected com.mongodb.DBObject createChunk(java.lang.Object,int,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),get,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),getAliases,MethodDescriptor((): java.util.List),com.mongodb.gridfs.GridFSFile{ public java.util.List getAliases() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),getChunkSize,MethodDescriptor((): long),com.mongodb.gridfs.GridFSFile{ public long getChunkSize() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),getContentType,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String getContentType() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),getFilename,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String getFilename() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),getId,MethodDescriptor((): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object getId() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),getLength,MethodDescriptor((): long),com.mongodb.gridfs.GridFSFile{ public long getLength() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),getMD5,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String getMD5() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),getMetaData,MethodDescriptor((): com.mongodb.DBObject),com.mongodb.gridfs.GridFSFile{ public com.mongodb.DBObject getMetaData() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),getOutputStream,MethodDescriptor((): java.io.OutputStream),com.mongodb.gridfs.GridFSInputFile{ public java.io.OutputStream getOutputStream() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),getUploadDate,MethodDescriptor((): java.util.Date),com.mongodb.gridfs.GridFSFile{ public java.util.Date getUploadDate() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),isPartialObject,MethodDescriptor((): boolean),com.mongodb.gridfs.GridFSFile{ public boolean isPartialObject() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),keySet,MethodDescriptor((): java.util.Set),com.mongodb.gridfs.GridFSFile{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),markAsPartialObject,MethodDescriptor((): void),com.mongodb.gridfs.GridFSFile{ public void markAsPartialObject() }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),numChunks,MethodDescriptor((): int),com.mongodb.gridfs.GridFSFile{ public int numChunks() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),putAll,MethodDescriptor((java.util.Map): void),com.mongodb.gridfs.GridFSFile{ public void putAll(java.util.Map) }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),putAll,MethodDescriptor((org.bson.BSONObject): void),com.mongodb.gridfs.GridFSFile{ public void putAll(org.bson.BSONObject) }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),removeField,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.gridfs.GridFSFile{ public java.lang.Object removeField(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),save,MethodDescriptor((): void),com.mongodb.gridfs.GridFSInputFile{ public void save() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),save,MethodDescriptor((long): void),com.mongodb.gridfs.GridFSInputFile{ public void save(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),saveChunks,MethodDescriptor((): int),com.mongodb.gridfs.GridFSInputFile{ public int saveChunks() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),saveChunks,MethodDescriptor((long): int),com.mongodb.gridfs.GridFSInputFile{ public int saveChunks(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),setChunkSize,MethodDescriptor((long): void),com.mongodb.gridfs.GridFSInputFile{ public void setChunkSize(long) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),setContentType,MethodDescriptor((java.lang.String): void),com.mongodb.gridfs.GridFSInputFile{ public void setContentType(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),setFilename,MethodDescriptor((java.lang.String): void),com.mongodb.gridfs.GridFSInputFile{ public void setFilename(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),setGridFS,MethodDescriptor((com.mongodb.gridfs.GridFS): void),com.mongodb.gridfs.GridFSFile{ protected void setGridFS(com.mongodb.gridfs.GridFS) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),setId,MethodDescriptor((java.lang.Object): void),com.mongodb.gridfs.GridFSInputFile{ public void setId(java.lang.Object) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),setMetaData,MethodDescriptor((com.mongodb.DBObject): void),com.mongodb.gridfs.GridFSFile{ public void setMetaData(com.mongodb.DBObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),toMap,MethodDescriptor((): java.util.Map),com.mongodb.gridfs.GridFSFile{ public java.util.Map toMap() }) => DPure
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),toString,MethodDescriptor((): java.lang.String),com.mongodb.gridfs.GridFSFile{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/gridfs/GridFSInputFile),validate,MethodDescriptor((): void),com.mongodb.gridfs.GridFSFile{ public void validate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferFactory$SimpleHeapByteBufferFactory),<init>,MethodDescriptor((int): void),com.mongodb.io.ByteBufferFactory$SimpleHeapByteBufferFactory{ public void <init>(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferFactory$SimpleHeapByteBufferFactory),get,MethodDescriptor((): java.nio.ByteBuffer),com.mongodb.io.ByteBufferFactory$SimpleHeapByteBufferFactory{ public java.nio.ByteBuffer get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),<init>,MethodDescriptor((): void),com.mongodb.io.ByteBufferHolder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),<init>,MethodDescriptor((int): void),com.mongodb.io.ByteBufferHolder{ public void <init>(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),_addBucket,MethodDescriptor((): void),com.mongodb.io.ByteBufferHolder{ private void _addBucket() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),capacity,MethodDescriptor((): int),com.mongodb.io.ByteBufferHolder{ public int capacity() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),get,MethodDescriptor((int): byte),com.mongodb.io.ByteBufferHolder{ public byte get(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),get,MethodDescriptor((int, byte[]): void),com.mongodb.io.ByteBufferHolder{ public void get(int,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),position,MethodDescriptor((): int),com.mongodb.io.ByteBufferHolder{ public int position() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),position,MethodDescriptor((int): void),com.mongodb.io.ByteBufferHolder{ public void position(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),put,MethodDescriptor((int, byte): void),com.mongodb.io.ByteBufferHolder{ public void put(int,byte) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),put,MethodDescriptor((java.nio.ByteBuffer): void),com.mongodb.io.ByteBufferHolder{ public void put(java.nio.ByteBuffer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),remaining,MethodDescriptor((): int),com.mongodb.io.ByteBufferHolder{ public int remaining() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferHolder),toString,MethodDescriptor((): java.lang.String),com.mongodb.io.ByteBufferHolder{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferInputStream),<init>,MethodDescriptor((java.util.List): void),com.mongodb.io.ByteBufferInputStream{ public void <init>(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferInputStream),<init>,MethodDescriptor((java.util.List, boolean): void),com.mongodb.io.ByteBufferInputStream{ public void <init>(java.util.List,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferInputStream),available,MethodDescriptor((): int),com.mongodb.io.ByteBufferInputStream{ public int available() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferInputStream),close,MethodDescriptor((): void),com.mongodb.io.ByteBufferInputStream{ public void close() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferInputStream),mark,MethodDescriptor((int): void),com.mongodb.io.ByteBufferInputStream{ public void mark(int) }) => DPure
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferInputStream),markSupported,MethodDescriptor((): boolean),com.mongodb.io.ByteBufferInputStream{ public boolean markSupported() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferInputStream),read,MethodDescriptor((): int),com.mongodb.io.ByteBufferInputStream{ public int read() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferInputStream),read,MethodDescriptor((byte[]): int),com.mongodb.io.ByteBufferInputStream{ public int read(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferInputStream),read,MethodDescriptor((byte[], int, int): int),com.mongodb.io.ByteBufferInputStream{ public int read(byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferInputStream),reset,MethodDescriptor((): void),com.mongodb.io.ByteBufferInputStream{ public void reset() }) => DPure
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferInputStream),skip,MethodDescriptor((long): long),com.mongodb.io.ByteBufferInputStream{ public long skip(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),<clinit>,MethodDescriptor((): void),com.mongodb.io.ByteBufferOutputStream{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),<init>,MethodDescriptor((): void),com.mongodb.io.ByteBufferOutputStream{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),<init>,MethodDescriptor((com.mongodb.io.ByteBufferFactory): void),com.mongodb.io.ByteBufferOutputStream{ public void <init>(com.mongodb.io.ByteBufferFactory) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),<init>,MethodDescriptor((int): void),com.mongodb.io.ByteBufferOutputStream{ public void <init>(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),_need,MethodDescriptor((int): java.nio.ByteBuffer),com.mongodb.io.ByteBufferOutputStream{ private java.nio.ByteBuffer _need(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),close,MethodDescriptor((): void),com.mongodb.io.ByteBufferOutputStream{ public void close() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),flush,MethodDescriptor((): void),com.mongodb.io.ByteBufferOutputStream{ public void flush() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),getBuffers,MethodDescriptor((): java.util.List),com.mongodb.io.ByteBufferOutputStream{ public java.util.List getBuffers() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),getBuffers,MethodDescriptor((boolean): java.util.List),com.mongodb.io.ByteBufferOutputStream{ public java.util.List getBuffers(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),write,MethodDescriptor((byte[]): void),com.mongodb.io.ByteBufferOutputStream{ public void write(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),write,MethodDescriptor((byte[], int, int): void),com.mongodb.io.ByteBufferOutputStream{ public void write(byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/io/ByteBufferOutputStream),write,MethodDescriptor((int): void),com.mongodb.io.ByteBufferOutputStream{ public void write(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat$Position),<clinit>,MethodDescriptor((): void),com.mongodb.tools.ConnectionPoolStat$Position{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat$Position),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.tools.ConnectionPoolStat$Position{ private void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat$Position),valueOf,MethodDescriptor((java.lang.String): com.mongodb.tools.ConnectionPoolStat$Position),com.mongodb.tools.ConnectionPoolStat$Position{ public static com.mongodb.tools.ConnectionPoolStat$Position valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat$Position),values,MethodDescriptor((): com.mongodb.tools.ConnectionPoolStat$Position[]),com.mongodb.tools.ConnectionPoolStat$Position{ public static com.mongodb.tools.ConnectionPoolStat$Position[] values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat$StringType),<clinit>,MethodDescriptor((): void),com.mongodb.tools.ConnectionPoolStat$StringType{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat$StringType),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.tools.ConnectionPoolStat$StringType{ private void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat$StringType),valueOf,MethodDescriptor((java.lang.String): com.mongodb.tools.ConnectionPoolStat$StringType),com.mongodb.tools.ConnectionPoolStat$StringType{ public static com.mongodb.tools.ConnectionPoolStat$StringType valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat$StringType),values,MethodDescriptor((): com.mongodb.tools.ConnectionPoolStat$StringType[]),com.mongodb.tools.ConnectionPoolStat$StringType{ public static com.mongodb.tools.ConnectionPoolStat$StringType[] values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),<init>,MethodDescriptor((): void),com.mongodb.tools.ConnectionPoolStat{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),<init>,MethodDescriptor((javax.management.MBeanServerConnection): void),com.mongodb.tools.ConnectionPoolStat{ public void <init>(javax.management.MBeanServerConnection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),getIntegerArg,MethodDescriptor((java.lang.String, java.lang.String): int),com.mongodb.tools.ConnectionPoolStat{ private static int getIntegerArg(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),getKeyString,MethodDescriptor((java.lang.String): java.lang.String),com.mongodb.tools.ConnectionPoolStat{ private java.lang.String getKeyString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),getStats,MethodDescriptor((): java.lang.String),com.mongodb.tools.ConnectionPoolStat{ public java.lang.String getStats() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),getValueString,MethodDescriptor((java.lang.Object, com.mongodb.tools.ConnectionPoolStat$StringType): java.lang.String),com.mongodb.tools.ConnectionPoolStat{ private java.lang.String getValueString(java.lang.Object,com.mongodb.tools.ConnectionPoolStat$StringType) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),main,MethodDescriptor((java.lang.String[]): void),com.mongodb.tools.ConnectionPoolStat{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),print,MethodDescriptor((java.io.PrintWriter): void),com.mongodb.tools.ConnectionPoolStat{ private void print(java.io.PrintWriter) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printAttribute,MethodDescriptor((java.lang.String, java.lang.Object, java.io.PrintWriter): void),com.mongodb.tools.ConnectionPoolStat{ private void printAttribute(java.lang.String,java.lang.Object,java.io.PrintWriter) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printAttribute,MethodDescriptor((java.lang.String, java.lang.Object, java.io.PrintWriter, com.mongodb.tools.ConnectionPoolStat$Position, com.mongodb.tools.ConnectionPoolStat$StringType): void),com.mongodb.tools.ConnectionPoolStat{ private void printAttribute(java.lang.String,java.lang.Object,java.io.PrintWriter,com.mongodb.tools.ConnectionPoolStat$Position,com.mongodb.tools.ConnectionPoolStat$StringType) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printAttribute,MethodDescriptor((java.lang.String, javax.management.ObjectName, java.io.PrintWriter): void),com.mongodb.tools.ConnectionPoolStat{ private void printAttribute(java.lang.String,javax.management.ObjectName,java.io.PrintWriter) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printCompositeDataAttribute,MethodDescriptor((java.lang.String, javax.management.openmbean.CompositeData, java.io.PrintWriter): void),com.mongodb.tools.ConnectionPoolStat{ private void printCompositeDataAttribute(java.lang.String,javax.management.openmbean.CompositeData,java.io.PrintWriter) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printCompositeDataAttribute,MethodDescriptor((java.lang.String, javax.management.openmbean.CompositeData, java.io.PrintWriter, com.mongodb.tools.ConnectionPoolStat$Position): void),com.mongodb.tools.ConnectionPoolStat{ private void printCompositeDataAttribute(java.lang.String,javax.management.openmbean.CompositeData,java.io.PrintWriter,com.mongodb.tools.ConnectionPoolStat$Position) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printCompositeDataAttribute,MethodDescriptor((java.lang.String, javax.management.openmbean.CompositeData, java.io.PrintWriter, com.mongodb.tools.ConnectionPoolStat$Position, com.mongodb.tools.ConnectionPoolStat$StringType): void),com.mongodb.tools.ConnectionPoolStat{ private void printCompositeDataAttribute(java.lang.String,javax.management.openmbean.CompositeData,java.io.PrintWriter,com.mongodb.tools.ConnectionPoolStat$Position,com.mongodb.tools.ConnectionPoolStat$StringType) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printCompositeDataAttribute,MethodDescriptor((java.lang.String, javax.management.openmbean.CompositeData, java.io.PrintWriter, com.mongodb.tools.ConnectionPoolStat$StringType): void),com.mongodb.tools.ConnectionPoolStat{ private void printCompositeDataAttribute(java.lang.String,javax.management.openmbean.CompositeData,java.io.PrintWriter,com.mongodb.tools.ConnectionPoolStat$StringType) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printErrorAndUsageAndExit,MethodDescriptor((java.lang.String): void),com.mongodb.tools.ConnectionPoolStat{ private static void printErrorAndUsageAndExit(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printInUseConnections,MethodDescriptor((javax.management.openmbean.CompositeData, java.io.PrintWriter): void),com.mongodb.tools.ConnectionPoolStat{ private void printInUseConnections(javax.management.openmbean.CompositeData,java.io.PrintWriter) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printSimpleStatistics,MethodDescriptor((java.io.PrintWriter, javax.management.openmbean.CompositeData): void),com.mongodb.tools.ConnectionPoolStat{ private void printSimpleStatistics(java.io.PrintWriter,javax.management.openmbean.CompositeData) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printStatistics,MethodDescriptor((java.io.PrintWriter, javax.management.ObjectName): void),com.mongodb.tools.ConnectionPoolStat{ private void printStatistics(java.io.PrintWriter,javax.management.ObjectName) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/tools/ConnectionPoolStat),printUsage,MethodDescriptor((): void),com.mongodb.tools.ConnectionPoolStat{ private static void printUsage() }) => DPure
DefinedMethod(ObjectType(com/mongodb/util/AbstractObjectSerializer),<init>,MethodDescriptor((): void),com.mongodb.util.AbstractObjectSerializer{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/AbstractObjectSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Args),<init>,MethodDescriptor((java.lang.String[]): void),com.mongodb.util.Args{ public void <init>(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Args),getOption,MethodDescriptor((java.lang.String): java.lang.String),com.mongodb.util.Args{ public java.lang.String getOption(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Args),toString,MethodDescriptor((): java.lang.String),com.mongodb.util.Args{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Base64Codec),<clinit>,MethodDescriptor((): void),com.mongodb.util.Base64Codec{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Base64Codec),<init>,MethodDescriptor((): void),com.mongodb.util.Base64Codec{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Base64Codec),decode,MethodDescriptor((java.lang.String): byte[]),com.mongodb.util.Base64Codec{ public byte[] decode(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Base64Codec),encode,MethodDescriptor((byte[]): java.lang.String),com.mongodb.util.Base64Codec{ public java.lang.String encode(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ClassMapBasedObjectSerializer),<init>,MethodDescriptor((): void),com.mongodb.util.ClassMapBasedObjectSerializer{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ClassMapBasedObjectSerializer),addObjectSerializer,MethodDescriptor((java.lang.Class, com.mongodb.util.ObjectSerializer): void),com.mongodb.util.ClassMapBasedObjectSerializer{ void addObjectSerializer(java.lang.Class,com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ClassMapBasedObjectSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ClassMapBasedObjectSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.ClassMapBasedObjectSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ConnectionPoolStatisticsBean),<init>,MethodDescriptor((int, int, com.mongodb.InUseConnectionBean[]): void),com.mongodb.util.ConnectionPoolStatisticsBean{ public void <init>(int,int,com.mongodb.InUseConnectionBean[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ConnectionPoolStatisticsBean),getInUse,MethodDescriptor((): int),com.mongodb.util.ConnectionPoolStatisticsBean{ public int getInUse() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/ConnectionPoolStatisticsBean),getInUseConnections,MethodDescriptor((): com.mongodb.InUseConnectionBean[]),com.mongodb.util.ConnectionPoolStatisticsBean{ public com.mongodb.InUseConnectionBean[] getInUseConnections() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/util/ConnectionPoolStatisticsBean),getTotal,MethodDescriptor((): int),com.mongodb.util.ConnectionPoolStatisticsBean{ public int getTotal() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/FastStack),<init>,MethodDescriptor((): void),com.mongodb.util.FastStack{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/FastStack),clear,MethodDescriptor((): void),com.mongodb.util.FastStack{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/FastStack),get,MethodDescriptor((int): java.lang.Object),com.mongodb.util.FastStack{ public java.lang.Object get(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/FastStack),peek,MethodDescriptor((): java.lang.Object),com.mongodb.util.FastStack{ public java.lang.Object peek() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/FastStack),pop,MethodDescriptor((): java.lang.Object),com.mongodb.util.FastStack{ public java.lang.Object pop() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/FastStack),push,MethodDescriptor((java.lang.Object): void),com.mongodb.util.FastStack{ public void push(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/FastStack),size,MethodDescriptor((): int),com.mongodb.util.FastStack{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/FastStack),toString,MethodDescriptor((): java.lang.String),com.mongodb.util.FastStack{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),<init>,MethodDescriptor((): void),com.mongodb.util.Hash{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),hashBackward,MethodDescriptor((java.lang.String): int),com.mongodb.util.Hash{ public static int hashBackward(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),hashBackwardLong,MethodDescriptor((java.lang.String): long),com.mongodb.util.Hash{ public static long hashBackwardLong(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),hashCode,MethodDescriptor((java.lang.CharSequence, int, int): int),com.mongodb.util.Hash{ public static int hashCode(java.lang.CharSequence,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),hashCode,MethodDescriptor((java.lang.String[]): int),com.mongodb.util.Hash{ public static int hashCode(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),longHash,MethodDescriptor((java.lang.String): long),com.mongodb.util.Hash{ public static long longHash(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),longHash,MethodDescriptor((java.lang.String, int, int): long),com.mongodb.util.Hash{ public static long longHash(java.lang.String,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),longHashAppend,MethodDescriptor((long, char): long),com.mongodb.util.Hash{ public static long longHashAppend(long,char) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/Hash),longLowerHash,MethodDescriptor((java.lang.String): long),com.mongodb.util.Hash{ public static long longLowerHash(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),longLowerHash,MethodDescriptor((java.lang.String, int, int): long),com.mongodb.util.Hash{ public static long longLowerHash(java.lang.String,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),longLowerHash,MethodDescriptor((java.lang.String, int, int, long): long),com.mongodb.util.Hash{ public static long longLowerHash(java.lang.String,int,int,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),longLowerHashAppend,MethodDescriptor((long, char): long),com.mongodb.util.Hash{ public static long longLowerHashAppend(long,char) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),lowerCaseHash,MethodDescriptor((java.lang.String): int),com.mongodb.util.Hash{ public static int lowerCaseHash(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),lowerCaseHash,MethodDescriptor((java.lang.String, int, int): int),com.mongodb.util.Hash{ public static int lowerCaseHash(java.lang.String,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),lowerCaseSpaceTrimHash,MethodDescriptor((java.lang.String): int),com.mongodb.util.Hash{ public static int lowerCaseSpaceTrimHash(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),lowerCaseSpaceTrimHash,MethodDescriptor((java.lang.String, int, int): int),com.mongodb.util.Hash{ public static int lowerCaseSpaceTrimHash(java.lang.String,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Hash),nospaceLowerHash,MethodDescriptor((java.lang.String, int, int): int),com.mongodb.util.Hash{ public static int nospaceLowerHash(java.lang.String,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),<init>,MethodDescriptor((): void),com.mongodb.util.IdentitySet{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),<init>,MethodDescriptor((java.lang.Iterable): void),com.mongodb.util.IdentitySet{ public void <init>(java.lang.Iterable) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),add,MethodDescriptor((java.lang.Object): boolean),com.mongodb.util.IdentitySet{ public boolean add(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),addAll,MethodDescriptor((com.mongodb.util.IdentitySet): void),com.mongodb.util.IdentitySet{ public void addAll(com.mongodb.util.IdentitySet) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),addAll,MethodDescriptor((java.util.Collection): void),com.mongodb.util.IdentitySet{ public void addAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),clear,MethodDescriptor((): void),com.mongodb.util.IdentitySet{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),contains,MethodDescriptor((java.lang.Object): boolean),com.mongodb.util.IdentitySet{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),iterator,MethodDescriptor((): java.util.Iterator),com.mongodb.util.IdentitySet{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),remove,MethodDescriptor((java.lang.Object): void),com.mongodb.util.IdentitySet{ public void remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),removeAll,MethodDescriptor((java.lang.Iterable): void),com.mongodb.util.IdentitySet{ public void removeAll(java.lang.Iterable) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),removeall,MethodDescriptor((java.lang.Iterable): void),com.mongodb.util.IdentitySet{ public void removeall(java.lang.Iterable) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/IdentitySet),size,MethodDescriptor((): int),com.mongodb.util.IdentitySet{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSON),<init>,MethodDescriptor((): void),com.mongodb.util.JSON{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSON),parse,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.util.JSON{ public static java.lang.Object parse(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSON),parse,MethodDescriptor((java.lang.String, org.bson.BSONCallback): java.lang.Object),com.mongodb.util.JSON{ public static java.lang.Object parse(java.lang.String,org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSON),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.JSON{ public static java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSON),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSON{ public static void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSON),string,MethodDescriptor((java.lang.StringBuilder, java.lang.String): void),com.mongodb.util.JSON{ static void string(java.lang.StringBuilder,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),<init>,MethodDescriptor((): void),com.mongodb.util.JSONCallback{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),_put,MethodDescriptor((java.lang.String, java.lang.Object): void),org.bson.BasicBSONCallback{ protected void _put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),arrayDone,MethodDescriptor((): java.lang.Object),org.bson.BasicBSONCallback{ public java.lang.Object arrayDone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),arrayStart,MethodDescriptor((): void),org.bson.BasicBSONCallback{ public void arrayStart() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),arrayStart,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void arrayStart(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),create,MethodDescriptor((): org.bson.BSONObject),com.mongodb.util.JSONCallback{ public org.bson.BSONObject create() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),create,MethodDescriptor((boolean, java.util.List): org.bson.BSONObject),org.bson.BasicBSONCallback{ public org.bson.BSONObject create(boolean,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),createBSONCallback,MethodDescriptor((): org.bson.BSONCallback),org.bson.BasicBSONCallback{ public org.bson.BSONCallback createBSONCallback() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),createList,MethodDescriptor((): org.bson.BSONObject),com.mongodb.util.JSONCallback{ protected org.bson.BSONObject createList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),cur,MethodDescriptor((): org.bson.BSONObject),org.bson.BasicBSONCallback{ protected org.bson.BSONObject cur() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),curName,MethodDescriptor((): java.lang.String),org.bson.BasicBSONCallback{ protected java.lang.String curName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),get,MethodDescriptor((): java.lang.Object),org.bson.BasicBSONCallback{ public java.lang.Object get() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotBinary,MethodDescriptor((java.lang.String, byte, byte[]): void),org.bson.BasicBSONCallback{ public void gotBinary(java.lang.String,byte,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotBinaryArray,MethodDescriptor((java.lang.String, byte[]): void),org.bson.BasicBSONCallback{ public void gotBinaryArray(java.lang.String,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotBoolean,MethodDescriptor((java.lang.String, boolean): void),org.bson.BasicBSONCallback{ public void gotBoolean(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotCode,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotCode(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotCodeWScope,MethodDescriptor((java.lang.String, java.lang.String, java.lang.Object): void),org.bson.BasicBSONCallback{ public void gotCodeWScope(java.lang.String,java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotDBRef,MethodDescriptor((java.lang.String, java.lang.String, org.bson.types.ObjectId): void),org.bson.BasicBSONCallback{ public void gotDBRef(java.lang.String,java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotDate,MethodDescriptor((java.lang.String, long): void),org.bson.BasicBSONCallback{ public void gotDate(java.lang.String,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotDouble,MethodDescriptor((java.lang.String, double): void),org.bson.BasicBSONCallback{ public void gotDouble(java.lang.String,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotInt,MethodDescriptor((java.lang.String, int): void),org.bson.BasicBSONCallback{ public void gotInt(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotLong,MethodDescriptor((java.lang.String, long): void),org.bson.BasicBSONCallback{ public void gotLong(java.lang.String,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotMaxKey,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotMaxKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotMinKey,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotMinKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotNull,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotNull(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): void),org.bson.BasicBSONCallback{ public void gotObjectId(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotRegex,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotRegex(java.lang.String,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotString,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotString(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotSymbol,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotSymbol(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotTimestamp,MethodDescriptor((java.lang.String, int, int): void),org.bson.BasicBSONCallback{ public void gotTimestamp(java.lang.String,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotUUID,MethodDescriptor((java.lang.String, long, long): void),org.bson.BasicBSONCallback{ public void gotUUID(java.lang.String,long,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),gotUndefined,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotUndefined(java.lang.String) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),isStackEmpty,MethodDescriptor((): boolean),org.bson.BasicBSONCallback{ protected boolean isStackEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),objectDone,MethodDescriptor((): java.lang.Object),com.mongodb.util.JSONCallback{ public java.lang.Object objectDone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),objectStart,MethodDescriptor((): void),org.bson.BasicBSONCallback{ public void objectStart() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),objectStart,MethodDescriptor((boolean): void),org.bson.BasicBSONCallback{ public void objectStart(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),objectStart,MethodDescriptor((boolean, java.lang.String): void),com.mongodb.util.JSONCallback{ public void objectStart(boolean,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),objectStart,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void objectStart(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),reset,MethodDescriptor((): void),org.bson.BasicBSONCallback{ public void reset() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONCallback),setRoot,MethodDescriptor((java.lang.Object): void),org.bson.BasicBSONCallback{ protected void setRoot(java.lang.Object) }) => ExternallyPure
DefinedMethod(ObjectType(com/mongodb/util/JSONParseException),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.util.JSONParseException{ public void <init>(java.lang.String,int) }) => DPure
DefinedMethod(ObjectType(com/mongodb/util/JSONParseException),<init>,MethodDescriptor((java.lang.String, int, java.lang.Throwable): void),com.mongodb.util.JSONParseException{ public void <init>(java.lang.String,int,java.lang.Throwable) }) => DPure
DefinedMethod(ObjectType(com/mongodb/util/JSONParseException),getMessage,MethodDescriptor((): java.lang.String),com.mongodb.util.JSONParseException{ public java.lang.String getMessage() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.util.JSONParser{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),<init>,MethodDescriptor((java.lang.String, org.bson.BSONCallback): void),com.mongodb.util.JSONParser{ public void <init>(java.lang.String,org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),check,MethodDescriptor((char): boolean),com.mongodb.util.JSONParser{ public boolean check(char) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),doCallback,MethodDescriptor((java.lang.String, java.lang.Object): void),com.mongodb.util.JSONParser{ protected void doCallback(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),get,MethodDescriptor((): char),com.mongodb.util.JSONParser{ public char get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),parse,MethodDescriptor((): java.lang.Object),com.mongodb.util.JSONParser{ public java.lang.Object parse() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),parse,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.util.JSONParser{ protected java.lang.Object parse(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),parseArray,MethodDescriptor((): java.lang.Object),com.mongodb.util.JSONParser{ public java.lang.Object parseArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),parseArray,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.util.JSONParser{ protected java.lang.Object parseArray(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),parseExponent,MethodDescriptor((): void),com.mongodb.util.JSONParser{ public void parseExponent() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),parseFraction,MethodDescriptor((): void),com.mongodb.util.JSONParser{ public void parseFraction() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),parseNumber,MethodDescriptor((): java.lang.Number),com.mongodb.util.JSONParser{ public java.lang.Number parseNumber() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),parseObject,MethodDescriptor((): java.lang.Object),com.mongodb.util.JSONParser{ public java.lang.Object parseObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),parseObject,MethodDescriptor((java.lang.String): java.lang.Object),com.mongodb.util.JSONParser{ protected java.lang.Object parseObject(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),parseString,MethodDescriptor((boolean): java.lang.String),com.mongodb.util.JSONParser{ public java.lang.String parseString(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),read,MethodDescriptor((): char),com.mongodb.util.JSONParser{ public char read() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),read,MethodDescriptor((char): void),com.mongodb.util.JSONParser{ public void read(char) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),readHex,MethodDescriptor((): void),com.mongodb.util.JSONParser{ public void readHex() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONParser),skipWS,MethodDescriptor((): void),com.mongodb.util.JSONParser{ public void skipWS() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$BSONTimestampSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$BSONTimestampSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$BSONTimestampSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$BSONTimestampSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$BSONTimestampSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$BinarySerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$BinarySerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$BinarySerializer),serialize,MethodDescriptor((byte[], byte, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$BinarySerializerBase{ protected void serialize(byte[],byte,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$BinarySerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$BinarySerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$BinarySerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$BinarySerializerBase),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$BinarySerializerBase{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$BinarySerializerBase),serialize,MethodDescriptor((byte[], byte, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$BinarySerializerBase{ protected void serialize(byte[],byte,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$BinarySerializerBase),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ByteArraySerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$ByteArraySerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ByteArraySerializer),serialize,MethodDescriptor((byte[], byte, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$BinarySerializerBase{ protected void serialize(byte[],byte,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ByteArraySerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ByteArraySerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$ByteArraySerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$CodeSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$CodeSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$CodeSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$CodeSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$CodeSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$CodeWScopeSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$CodeWScopeSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$CodeWScopeSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$CodeWScopeSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$CodeWScopeSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$CompoundObjectSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$CompoundObjectSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$CompoundObjectSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$DBObjectSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$DBObjectSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$DBObjectSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$DBObjectSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$DBObjectSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$DBRefBaseSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$DBRefBaseSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$DBRefBaseSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$DBRefBaseSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$DBRefBaseSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$DateSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$DateSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$DateSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$DateSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$DateSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$IterableSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$IterableSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$IterableSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$IterableSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$IterableSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$LegacyBSONTimestampSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$LegacyBSONTimestampSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$LegacyBSONTimestampSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$LegacyBSONTimestampSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$LegacyBSONTimestampSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$LegacyBinarySerializer),<init>,MethodDescriptor((): void),com.mongodb.util.JSONSerializers$LegacyBinarySerializer{ private void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$LegacyBinarySerializer),<init>,MethodDescriptor((com.mongodb.util.JSONSerializers$1): void),com.mongodb.util.JSONSerializers$LegacyBinarySerializer{ void <init>(com.mongodb.util.JSONSerializers$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$LegacyBinarySerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$LegacyBinarySerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$LegacyBinarySerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$LegacyDateSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$LegacyDateSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$LegacyDateSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$LegacyDateSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$LegacyDateSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$MapSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$MapSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$MapSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$MapSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$MapSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$MaxKeySerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$MaxKeySerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$MaxKeySerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$MaxKeySerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$MaxKeySerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$MinKeySerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$MinKeySerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$MinKeySerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$MinKeySerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$MinKeySerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ObjectArraySerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$ObjectArraySerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ObjectArraySerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ObjectArraySerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$ObjectArraySerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ObjectIdSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$ObjectIdSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ObjectIdSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ObjectIdSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$ObjectIdSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$PatternSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$PatternSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$PatternSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$PatternSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$PatternSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$StringSerializer),<init>,MethodDescriptor((): void),com.mongodb.util.JSONSerializers$StringSerializer{ private void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$StringSerializer),<init>,MethodDescriptor((com.mongodb.util.JSONSerializers$1): void),com.mongodb.util.JSONSerializers$StringSerializer{ void <init>(com.mongodb.util.JSONSerializers$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$StringSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$StringSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$StringSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ToStringSerializer),<init>,MethodDescriptor((): void),com.mongodb.util.JSONSerializers$ToStringSerializer{ private void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ToStringSerializer),<init>,MethodDescriptor((com.mongodb.util.JSONSerializers$1): void),com.mongodb.util.JSONSerializers$ToStringSerializer{ void <init>(com.mongodb.util.JSONSerializers$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ToStringSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$ToStringSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$ToStringSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$UUIDSerializer),<init>,MethodDescriptor((com.mongodb.util.ObjectSerializer): void),com.mongodb.util.JSONSerializers$UUIDSerializer{ void <init>(com.mongodb.util.ObjectSerializer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$UUIDSerializer),serialize,MethodDescriptor((java.lang.Object): java.lang.String),com.mongodb.util.AbstractObjectSerializer{ public java.lang.String serialize(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers$UUIDSerializer),serialize,MethodDescriptor((java.lang.Object, java.lang.StringBuilder): void),com.mongodb.util.JSONSerializers$UUIDSerializer{ public void serialize(java.lang.Object,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers),<init>,MethodDescriptor((): void),com.mongodb.util.JSONSerializers{ private void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers),addCommonSerializers,MethodDescriptor((): com.mongodb.util.ClassMapBasedObjectSerializer),com.mongodb.util.JSONSerializers{ static com.mongodb.util.ClassMapBasedObjectSerializer addCommonSerializers() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers),getLegacy,MethodDescriptor((): com.mongodb.util.ObjectSerializer),com.mongodb.util.JSONSerializers{ public static com.mongodb.util.ObjectSerializer getLegacy() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/JSONSerializers),getStrict,MethodDescriptor((): com.mongodb.util.ObjectSerializer),com.mongodb.util.JSONSerializers{ public static com.mongodb.util.ObjectSerializer getStrict() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts$MyAssert),<init>,MethodDescriptor((java.lang.String): void),com.mongodb.util.MyAsserts$MyAssert{ void <init>(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts$MyAssert),toString,MethodDescriptor((): java.lang.String),com.mongodb.util.MyAsserts$MyAssert{ public java.lang.String toString() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),<clinit>,MethodDescriptor((): void),com.mongodb.util.MyAsserts{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),<init>,MethodDescriptor((): void),com.mongodb.util.MyAsserts{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),_assertEquals,MethodDescriptor((java.lang.Object, java.lang.Object): void),com.mongodb.util.MyAsserts{ public static void _assertEquals(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),_simplify,MethodDescriptor((java.lang.String): java.lang.String),com.mongodb.util.MyAsserts{ private static java.lang.String _simplify(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertArrayEquals,MethodDescriptor((byte[], byte[]): void),com.mongodb.util.MyAsserts{ public static void assertArrayEquals(byte[],byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertArrayEquals,MethodDescriptor((char[], char[]): void),com.mongodb.util.MyAsserts{ public static void assertArrayEquals(char[],char[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertClose,MethodDescriptor((java.lang.String, java.lang.Object): void),com.mongodb.util.MyAsserts{ public static void assertClose(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertClose,MethodDescriptor((java.lang.String, java.lang.String): void),com.mongodb.util.MyAsserts{ public static void assertClose(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertClose,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String): void),com.mongodb.util.MyAsserts{ public static void assertClose(java.lang.String,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertEmptyString,MethodDescriptor((java.lang.String): void),com.mongodb.util.MyAsserts{ public static void assertEmptyString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertEquals,MethodDescriptor((byte, byte): void),com.mongodb.util.MyAsserts{ public static void assertEquals(byte,byte) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertEquals,MethodDescriptor((char, char): void),com.mongodb.util.MyAsserts{ public static void assertEquals(char,char) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertEquals,MethodDescriptor((double, double, double): void),com.mongodb.util.MyAsserts{ public static void assertEquals(double,double,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertEquals,MethodDescriptor((int, int): void),com.mongodb.util.MyAsserts{ public static void assertEquals(int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertEquals,MethodDescriptor((java.lang.Object, java.lang.Object): void),com.mongodb.util.MyAsserts{ public static void assertEquals(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertEquals,MethodDescriptor((java.lang.String, java.lang.Object): void),com.mongodb.util.MyAsserts{ public static void assertEquals(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertEquals,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String): void),com.mongodb.util.MyAsserts{ public static void assertEquals(java.lang.String,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertEquals,MethodDescriptor((long, long): void),com.mongodb.util.MyAsserts{ public static void assertEquals(long,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertEquals,MethodDescriptor((short, short): void),com.mongodb.util.MyAsserts{ public static void assertEquals(short,short) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertFalse,MethodDescriptor((boolean): void),com.mongodb.util.MyAsserts{ public static void assertFalse(boolean) }) => DPure
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertLess,MethodDescriptor((double, double): void),com.mongodb.util.MyAsserts{ public static void assertLess(double,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertLess,MethodDescriptor((long, long): void),com.mongodb.util.MyAsserts{ public static void assertLess(long,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertNotEquals,MethodDescriptor((java.lang.Object, java.lang.Object): void),com.mongodb.util.MyAsserts{ public static void assertNotEquals(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertNotNull,MethodDescriptor((java.lang.Object): void),com.mongodb.util.MyAsserts{ public static void assertNotNull(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertNull,MethodDescriptor((java.lang.Object): void),com.mongodb.util.MyAsserts{ public static void assertNull(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertSame,MethodDescriptor((java.lang.Object, java.lang.Object): void),com.mongodb.util.MyAsserts{ public static void assertSame(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertTrue,MethodDescriptor((boolean): void),com.mongodb.util.MyAsserts{ public static void assertTrue(boolean) }) => DPure
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),assertTrue,MethodDescriptor((boolean, java.lang.String): void),com.mongodb.util.MyAsserts{ public static void assertTrue(boolean,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),fail,MethodDescriptor((java.lang.String): void),com.mongodb.util.MyAsserts{ public static void fail(java.lang.String) }) => DPure
DefinedMethod(ObjectType(com/mongodb/util/MyAsserts),isClose,MethodDescriptor((java.lang.String, java.lang.String): boolean),com.mongodb.util.MyAsserts{ public static boolean isClose(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/OptionMap),<init>,MethodDescriptor((): void),com.mongodb.util.OptionMap{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/OptionMap),getInt,MethodDescriptor((java.lang.String, int): int),com.mongodb.util.OptionMap{ public int getInt(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),<clinit>,MethodDescriptor((): void),com.mongodb.util.SimplePool{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.util.SimplePool{ public void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),assertConditions,MethodDescriptor((): void),com.mongodb.util.SimplePool{ private void assertConditions() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),cleanup,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void cleanup(java.lang.Object) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),close,MethodDescriptor((): void),com.mongodb.util.SimplePool{ protected void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),createNewAndReleasePermitIfFailure,MethodDescriptor((): java.lang.Object),com.mongodb.util.SimplePool{ private java.lang.Object createNewAndReleasePermitIfFailure() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),done,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void done(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),get,MethodDescriptor((): java.lang.Object),com.mongodb.util.SimplePool{ public java.lang.Object get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),get,MethodDescriptor((long): java.lang.Object),com.mongodb.util.SimplePool{ public java.lang.Object get(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),getAvailable,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getAvailable() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),getInUse,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getInUse() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),getMaxSize,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getMaxSize() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),getName,MethodDescriptor((): java.lang.String),com.mongodb.util.SimplePool{ public java.lang.String getName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),getTotal,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getTotal() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),permitAcquired,MethodDescriptor((long): boolean),com.mongodb.util.SimplePool{ private boolean permitAcquired(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),pick,MethodDescriptor((int, boolean): int),com.mongodb.util.SimplePool{ protected int pick(int,boolean) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),remove,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/SimplePool),toString,MethodDescriptor((): java.lang.String),com.mongodb.util.SimplePool{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.util.StringBuilderPool{ public void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),cleanup,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void cleanup(java.lang.Object) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),close,MethodDescriptor((): void),com.mongodb.util.SimplePool{ protected void close() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),createNew,MethodDescriptor((): java.lang.Object),com.mongodb.util.StringBuilderPool{ public java.lang.Object createNew() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),createNew,MethodDescriptor((): java.lang.StringBuilder),com.mongodb.util.StringBuilderPool{ public java.lang.StringBuilder createNew() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),done,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void done(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),get,MethodDescriptor((): java.lang.Object),com.mongodb.util.SimplePool{ public java.lang.Object get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),get,MethodDescriptor((long): java.lang.Object),com.mongodb.util.SimplePool{ public java.lang.Object get(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),getAvailable,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getAvailable() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),getInUse,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getInUse() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),getMaxSize,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getMaxSize() }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),getName,MethodDescriptor((): java.lang.String),com.mongodb.util.SimplePool{ public java.lang.String getName() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),getTotal,MethodDescriptor((): int),com.mongodb.util.SimplePool{ public int getTotal() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),memSize,MethodDescriptor((java.lang.StringBuilder): long),com.mongodb.util.StringBuilderPool{ protected long memSize(java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),ok,MethodDescriptor((java.lang.StringBuilder): boolean),com.mongodb.util.StringBuilderPool{ public boolean ok(java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),pick,MethodDescriptor((int, boolean): int),com.mongodb.util.SimplePool{ protected int pick(int,boolean) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),remove,MethodDescriptor((java.lang.Object): void),com.mongodb.util.SimplePool{ public void remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringBuilderPool),toString,MethodDescriptor((): java.lang.String),com.mongodb.util.SimplePool{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringParseUtil),<init>,MethodDescriptor((): void),com.mongodb.util.StringParseUtil{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringParseUtil),parseBoolean,MethodDescriptor((java.lang.String, boolean): boolean),com.mongodb.util.StringParseUtil{ public static boolean parseBoolean(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringParseUtil),parseIfInt,MethodDescriptor((java.lang.String, int): int),com.mongodb.util.StringParseUtil{ public static int parseIfInt(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringParseUtil),parseInt,MethodDescriptor((java.lang.String, int): int),com.mongodb.util.StringParseUtil{ public static int parseInt(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringParseUtil),parseInt,MethodDescriptor((java.lang.String, int, int[], boolean): int),com.mongodb.util.StringParseUtil{ public static int parseInt(java.lang.String,int,int[],boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringParseUtil),parseIntRadix,MethodDescriptor((java.lang.String, int): java.lang.Number),com.mongodb.util.StringParseUtil{ public static java.lang.Number parseIntRadix(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringParseUtil),parseNumber,MethodDescriptor((java.lang.String, java.lang.Number): java.lang.Number),com.mongodb.util.StringParseUtil{ public static java.lang.Number parseNumber(java.lang.String,java.lang.Number) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/StringParseUtil),parseStrict,MethodDescriptor((java.lang.String): java.lang.Number),com.mongodb.util.StringParseUtil{ public static java.lang.Number parseStrict(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool$MyThread),<init>,MethodDescriptor((com.mongodb.util.ThreadPool): void),com.mongodb.util.ThreadPool$MyThread{ void <init>(com.mongodb.util.ThreadPool) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool$MyThread),run,MethodDescriptor((): void),com.mongodb.util.ThreadPool$MyThread{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool$MyThreadGroup),<init>,MethodDescriptor((com.mongodb.util.ThreadPool): void),com.mongodb.util.ThreadPool$MyThreadGroup{ void <init>(com.mongodb.util.ThreadPool) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool$MyThreadGroup),uncaughtException,MethodDescriptor((java.lang.Thread, java.lang.Throwable): void),com.mongodb.util.ThreadPool$MyThreadGroup{ public void uncaughtException(java.lang.Thread,java.lang.Throwable) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool),<init>,MethodDescriptor((java.lang.String, int): void),com.mongodb.util.ThreadPool{ public void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool),<init>,MethodDescriptor((java.lang.String, int, int): void),com.mongodb.util.ThreadPool{ public void <init>(java.lang.String,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool),access$000,MethodDescriptor((com.mongodb.util.ThreadPool): java.util.List),com.mongodb.util.ThreadPool{ static java.util.List access$000(com.mongodb.util.ThreadPool) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool),access$100,MethodDescriptor((com.mongodb.util.ThreadPool): com.mongodb.util.ThreadPool$MyThreadGroup),com.mongodb.util.ThreadPool{ static com.mongodb.util.ThreadPool$MyThreadGroup access$100(com.mongodb.util.ThreadPool) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool),access$200,MethodDescriptor((com.mongodb.util.ThreadPool): java.util.concurrent.BlockingQueue),com.mongodb.util.ThreadPool{ static java.util.concurrent.BlockingQueue access$200(com.mongodb.util.ThreadPool) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool),access$300,MethodDescriptor((com.mongodb.util.ThreadPool): java.util.concurrent.atomic.AtomicInteger),com.mongodb.util.ThreadPool{ static java.util.concurrent.atomic.AtomicInteger access$300(com.mongodb.util.ThreadPool) }) => DSideEffectFree
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool),inProgress,MethodDescriptor((): int),com.mongodb.util.ThreadPool{ public int inProgress() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool),numThreads,MethodDescriptor((): int),com.mongodb.util.ThreadPool{ public int numThreads() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool),offer,MethodDescriptor((java.lang.Object): boolean),com.mongodb.util.ThreadPool{ public boolean offer(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadPool),queueSize,MethodDescriptor((): int),com.mongodb.util.ThreadPool{ public int queueSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadUtil),<clinit>,MethodDescriptor((): void),com.mongodb.util.ThreadUtil{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadUtil),<init>,MethodDescriptor((): void),com.mongodb.util.ThreadUtil{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadUtil),clearStatus,MethodDescriptor((): void),com.mongodb.util.ThreadUtil{ public static void clearStatus() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadUtil),clearStatus,MethodDescriptor((java.lang.Thread): void),com.mongodb.util.ThreadUtil{ public static void clearStatus(java.lang.Thread) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadUtil),getStatus,MethodDescriptor((): com.mongodb.util.FastStack),com.mongodb.util.ThreadUtil{ public static com.mongodb.util.FastStack getStatus() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadUtil),getStatus,MethodDescriptor((java.lang.Thread): com.mongodb.util.FastStack),com.mongodb.util.ThreadUtil{ public static com.mongodb.util.FastStack getStatus(java.lang.Thread) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadUtil),printStackTrace,MethodDescriptor((): void),com.mongodb.util.ThreadUtil{ public static void printStackTrace() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadUtil),pushStatus,MethodDescriptor((java.lang.String): void),com.mongodb.util.ThreadUtil{ public static void pushStatus(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadUtil),pushStatus,MethodDescriptor((java.lang.Thread, java.lang.String): void),com.mongodb.util.ThreadUtil{ public static void pushStatus(java.lang.Thread,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/ThreadUtil),sleep,MethodDescriptor((long): void),com.mongodb.util.ThreadUtil{ public static void sleep(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/TimeConstants),<init>,MethodDescriptor((): void),com.mongodb.util.TimeConstants{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/UniqueList),<init>,MethodDescriptor((): void),com.mongodb.util.UniqueList{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/UniqueList),add,MethodDescriptor((java.lang.Object): boolean),com.mongodb.util.UniqueList{ public boolean add(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/UniqueList),addAll,MethodDescriptor((java.util.Collection): boolean),com.mongodb.util.UniqueList{ public boolean addAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Util),<init>,MethodDescriptor((): void),com.mongodb.util.Util{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Util),hexMD5,MethodDescriptor((byte[]): java.lang.String),com.mongodb.util.Util{ public static java.lang.String hexMD5(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Util),hexMD5,MethodDescriptor((java.nio.ByteBuffer, int, int): java.lang.String),com.mongodb.util.Util{ public static java.lang.String hexMD5(java.nio.ByteBuffer,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/Util),toHex,MethodDescriptor((byte[]): java.lang.String),com.mongodb.util.Util{ public static java.lang.String toHex(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/WeakBag$MyRef),<init>,MethodDescriptor((com.mongodb.util.WeakBag, java.lang.Object): void),com.mongodb.util.WeakBag$MyRef{ void <init>(com.mongodb.util.WeakBag,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/WeakBag),<init>,MethodDescriptor((): void),com.mongodb.util.WeakBag{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/WeakBag),add,MethodDescriptor((java.lang.Object): void),com.mongodb.util.WeakBag{ public void add(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/WeakBag),clean,MethodDescriptor((): void),com.mongodb.util.WeakBag{ public void clean() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/WeakBag),clear,MethodDescriptor((): void),com.mongodb.util.WeakBag{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/WeakBag),contains,MethodDescriptor((java.lang.Object): boolean),com.mongodb.util.WeakBag{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/WeakBag),getAll,MethodDescriptor((): java.util.List),com.mongodb.util.WeakBag{ public java.util.List getAll() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/WeakBag),iterator,MethodDescriptor((): java.util.Iterator),com.mongodb.util.WeakBag{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/WeakBag),remove,MethodDescriptor((java.lang.Object): boolean),com.mongodb.util.WeakBag{ public boolean remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/WeakBag),size,MethodDescriptor((): int),com.mongodb.util.WeakBag{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/management/JMException),<init>,MethodDescriptor((java.lang.Throwable): void),com.mongodb.util.management.JMException{ public void <init>(java.lang.Throwable) }) => DPure
DefinedMethod(ObjectType(com/mongodb/util/management/MBeanServerFactory),<clinit>,MethodDescriptor((): void),com.mongodb.util.management.MBeanServerFactory{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/management/MBeanServerFactory),<init>,MethodDescriptor((): void),com.mongodb.util.management.MBeanServerFactory{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/management/MBeanServerFactory),getMBeanServer,MethodDescriptor((): com.mongodb.util.management.MBeanServer),com.mongodb.util.management.MBeanServerFactory{ public static com.mongodb.util.management.MBeanServer getMBeanServer() }) => SideEffectFree
DefinedMethod(ObjectType(com/mongodb/util/management/NullMBeanServer),<init>,MethodDescriptor((): void),com.mongodb.util.management.NullMBeanServer{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/management/NullMBeanServer),isRegistered,MethodDescriptor((java.lang.String): boolean),com.mongodb.util.management.NullMBeanServer{ public boolean isRegistered(java.lang.String) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/management/NullMBeanServer),registerMBean,MethodDescriptor((java.lang.Object, java.lang.String): void),com.mongodb.util.management.NullMBeanServer{ public void registerMBean(java.lang.Object,java.lang.String) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/management/NullMBeanServer),unregisterMBean,MethodDescriptor((java.lang.String): void),com.mongodb.util.management.NullMBeanServer{ public void unregisterMBean(java.lang.String) }) => CompileTimePure
DefinedMethod(ObjectType(com/mongodb/util/management/jmx/JMXMBeanServer),<init>,MethodDescriptor((): void),com.mongodb.util.management.jmx.JMXMBeanServer{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/management/jmx/JMXMBeanServer),createObjectName,MethodDescriptor((java.lang.String): javax.management.ObjectName),com.mongodb.util.management.jmx.JMXMBeanServer{ private javax.management.ObjectName createObjectName(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/management/jmx/JMXMBeanServer),isRegistered,MethodDescriptor((java.lang.String): boolean),com.mongodb.util.management.jmx.JMXMBeanServer{ public boolean isRegistered(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/management/jmx/JMXMBeanServer),registerMBean,MethodDescriptor((java.lang.Object, java.lang.String): void),com.mongodb.util.management.jmx.JMXMBeanServer{ public void registerMBean(java.lang.Object,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(com/mongodb/util/management/jmx/JMXMBeanServer),unregisterMBean,MethodDescriptor((java.lang.String): void),com.mongodb.util.management.jmx.JMXMBeanServer{ public void unregisterMBean(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON$1),<init>,MethodDescriptor((): void),org.bson.BSON$1{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON$1),initialValue,MethodDescriptor((): java.lang.Object),org.bson.BSON$1{ protected java.lang.Object initialValue() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON$1),initialValue,MethodDescriptor((): org.bson.BSONEncoder),org.bson.BSON$1{ protected org.bson.BSONEncoder initialValue() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON$2),<init>,MethodDescriptor((): void),org.bson.BSON$2{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON$2),initialValue,MethodDescriptor((): java.lang.Object),org.bson.BSON$2{ protected java.lang.Object initialValue() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON$2),initialValue,MethodDescriptor((): org.bson.BSONDecoder),org.bson.BSON$2{ protected org.bson.BSONDecoder initialValue() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON$RegexFlag),<clinit>,MethodDescriptor((): void),org.bson.BSON$RegexFlag{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON$RegexFlag),<init>,MethodDescriptor((java.lang.String, int, int, char, java.lang.String): void),org.bson.BSON$RegexFlag{ private void <init>(java.lang.String,int,int,char,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON$RegexFlag),getByCharacter,MethodDescriptor((char): org.bson.BSON$RegexFlag),org.bson.BSON$RegexFlag{ public static org.bson.BSON$RegexFlag getByCharacter(char) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON$RegexFlag),valueOf,MethodDescriptor((java.lang.String): org.bson.BSON$RegexFlag),org.bson.BSON$RegexFlag{ public static org.bson.BSON$RegexFlag valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON$RegexFlag),values,MethodDescriptor((): org.bson.BSON$RegexFlag[]),org.bson.BSON$RegexFlag{ public static org.bson.BSON$RegexFlag[] values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),<clinit>,MethodDescriptor((): void),org.bson.BSON{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),<init>,MethodDescriptor((): void),org.bson.BSON{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),_anyHooks,MethodDescriptor((): boolean),org.bson.BSON{ private static boolean _anyHooks() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/BSON),_warnUnsupportedRegex,MethodDescriptor((java.lang.String): void),org.bson.BSON{ private static void _warnUnsupportedRegex(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),addDecodingHook,MethodDescriptor((java.lang.Class, org.bson.Transformer): void),org.bson.BSON{ public static void addDecodingHook(java.lang.Class,org.bson.Transformer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),addEncodingHook,MethodDescriptor((java.lang.Class, org.bson.Transformer): void),org.bson.BSON{ public static void addEncodingHook(java.lang.Class,org.bson.Transformer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),applyDecodingHooks,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.BSON{ public static java.lang.Object applyDecodingHooks(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),applyEncodingHooks,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.BSON{ public static java.lang.Object applyEncodingHooks(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),clearAllHooks,MethodDescriptor((): void),org.bson.BSON{ public static void clearAllHooks() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),clearDecodingHooks,MethodDescriptor((): void),org.bson.BSON{ public static void clearDecodingHooks() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),clearEncodingHooks,MethodDescriptor((): void),org.bson.BSON{ public static void clearEncodingHooks() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),decode,MethodDescriptor((byte[]): org.bson.BSONObject),org.bson.BSON{ public static org.bson.BSONObject decode(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),encode,MethodDescriptor((org.bson.BSONObject): byte[]),org.bson.BSON{ public static byte[] encode(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),getDecodingHooks,MethodDescriptor((java.lang.Class): java.util.List),org.bson.BSON{ public static java.util.List getDecodingHooks(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),getEncodingHooks,MethodDescriptor((java.lang.Class): java.util.List),org.bson.BSON{ public static java.util.List getEncodingHooks(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),hasDecodeHooks,MethodDescriptor((): boolean),org.bson.BSON{ public static boolean hasDecodeHooks() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/BSON),regexFlag,MethodDescriptor((char): int),org.bson.BSON{ public static int regexFlag(char) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),regexFlags,MethodDescriptor((int): java.lang.String),org.bson.BSON{ public static java.lang.String regexFlags(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),regexFlags,MethodDescriptor((java.lang.String): int),org.bson.BSON{ public static int regexFlags(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),removeDecodingHook,MethodDescriptor((java.lang.Class, org.bson.Transformer): void),org.bson.BSON{ public static void removeDecodingHook(java.lang.Class,org.bson.Transformer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),removeDecodingHooks,MethodDescriptor((java.lang.Class): void),org.bson.BSON{ public static void removeDecodingHooks(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),removeEncodingHook,MethodDescriptor((java.lang.Class, org.bson.Transformer): void),org.bson.BSON{ public static void removeEncodingHook(java.lang.Class,org.bson.Transformer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),removeEncodingHooks,MethodDescriptor((java.lang.Class): void),org.bson.BSON{ public static void removeEncodingHooks(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSON),toInt,MethodDescriptor((java.lang.Object): int),org.bson.BSON{ public static int toInt(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSONException),<init>,MethodDescriptor((int, java.lang.String): void),org.bson.BSONException{ public void <init>(int,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSONException),<init>,MethodDescriptor((int, java.lang.String, java.lang.Throwable): void),org.bson.BSONException{ public void <init>(int,java.lang.String,java.lang.Throwable) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BSONException),<init>,MethodDescriptor((java.lang.String): void),org.bson.BSONException{ public void <init>(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/BSONException),<init>,MethodDescriptor((java.lang.String, java.lang.Throwable): void),org.bson.BSONException{ public void <init>(java.lang.String,java.lang.Throwable) }) => DPure
DefinedMethod(ObjectType(org/bson/BSONException),getErrorCode,MethodDescriptor((): java.lang.Integer),org.bson.BSONException{ public java.lang.Integer getErrorCode() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/BSONException),hasErrorCode,MethodDescriptor((): boolean),org.bson.BSONException{ public boolean hasErrorCode() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/BSONLazyDecoder),<init>,MethodDescriptor((): void),org.bson.BSONLazyDecoder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),<init>,MethodDescriptor((): void),org.bson.BasicBSONCallback{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),_put,MethodDescriptor((java.lang.String, java.lang.Object): void),org.bson.BasicBSONCallback{ protected void _put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),arrayDone,MethodDescriptor((): java.lang.Object),org.bson.BasicBSONCallback{ public java.lang.Object arrayDone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),arrayStart,MethodDescriptor((): void),org.bson.BasicBSONCallback{ public void arrayStart() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),arrayStart,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void arrayStart(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),create,MethodDescriptor((): org.bson.BSONObject),org.bson.BasicBSONCallback{ public org.bson.BSONObject create() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),create,MethodDescriptor((boolean, java.util.List): org.bson.BSONObject),org.bson.BasicBSONCallback{ public org.bson.BSONObject create(boolean,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),createBSONCallback,MethodDescriptor((): org.bson.BSONCallback),org.bson.BasicBSONCallback{ public org.bson.BSONCallback createBSONCallback() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),createList,MethodDescriptor((): org.bson.BSONObject),org.bson.BasicBSONCallback{ protected org.bson.BSONObject createList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),cur,MethodDescriptor((): org.bson.BSONObject),org.bson.BasicBSONCallback{ protected org.bson.BSONObject cur() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),curName,MethodDescriptor((): java.lang.String),org.bson.BasicBSONCallback{ protected java.lang.String curName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),get,MethodDescriptor((): java.lang.Object),org.bson.BasicBSONCallback{ public java.lang.Object get() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotBinary,MethodDescriptor((java.lang.String, byte, byte[]): void),org.bson.BasicBSONCallback{ public void gotBinary(java.lang.String,byte,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotBinaryArray,MethodDescriptor((java.lang.String, byte[]): void),org.bson.BasicBSONCallback{ public void gotBinaryArray(java.lang.String,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotBoolean,MethodDescriptor((java.lang.String, boolean): void),org.bson.BasicBSONCallback{ public void gotBoolean(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotCode,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotCode(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotCodeWScope,MethodDescriptor((java.lang.String, java.lang.String, java.lang.Object): void),org.bson.BasicBSONCallback{ public void gotCodeWScope(java.lang.String,java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotDBRef,MethodDescriptor((java.lang.String, java.lang.String, org.bson.types.ObjectId): void),org.bson.BasicBSONCallback{ public void gotDBRef(java.lang.String,java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotDate,MethodDescriptor((java.lang.String, long): void),org.bson.BasicBSONCallback{ public void gotDate(java.lang.String,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotDouble,MethodDescriptor((java.lang.String, double): void),org.bson.BasicBSONCallback{ public void gotDouble(java.lang.String,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotInt,MethodDescriptor((java.lang.String, int): void),org.bson.BasicBSONCallback{ public void gotInt(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotLong,MethodDescriptor((java.lang.String, long): void),org.bson.BasicBSONCallback{ public void gotLong(java.lang.String,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotMaxKey,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotMaxKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotMinKey,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotMinKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotNull,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotNull(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): void),org.bson.BasicBSONCallback{ public void gotObjectId(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotRegex,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotRegex(java.lang.String,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotString,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotString(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotSymbol,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONCallback{ public void gotSymbol(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotTimestamp,MethodDescriptor((java.lang.String, int, int): void),org.bson.BasicBSONCallback{ public void gotTimestamp(java.lang.String,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotUUID,MethodDescriptor((java.lang.String, long, long): void),org.bson.BasicBSONCallback{ public void gotUUID(java.lang.String,long,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),gotUndefined,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void gotUndefined(java.lang.String) }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),isStackEmpty,MethodDescriptor((): boolean),org.bson.BasicBSONCallback{ protected boolean isStackEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),objectDone,MethodDescriptor((): java.lang.Object),org.bson.BasicBSONCallback{ public java.lang.Object objectDone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),objectStart,MethodDescriptor((): void),org.bson.BasicBSONCallback{ public void objectStart() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),objectStart,MethodDescriptor((boolean): void),org.bson.BasicBSONCallback{ public void objectStart(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),objectStart,MethodDescriptor((boolean, java.lang.String): void),org.bson.BasicBSONCallback{ public void objectStart(boolean,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),objectStart,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONCallback{ public void objectStart(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),reset,MethodDescriptor((): void),org.bson.BasicBSONCallback{ public void reset() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONCallback),setRoot,MethodDescriptor((java.lang.Object): void),org.bson.BasicBSONCallback{ protected void setRoot(java.lang.Object) }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),<init>,MethodDescriptor((org.bson.BasicBSONDecoder, java.io.InputStream): void),org.bson.BasicBSONDecoder$BSONInput{ public void <init>(org.bson.BasicBSONDecoder,java.io.InputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),_isAscii,MethodDescriptor((byte): boolean),org.bson.BasicBSONDecoder$BSONInput{ protected boolean _isAscii(byte) }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),_need,MethodDescriptor((int): int),org.bson.BasicBSONDecoder$BSONInput{ protected int _need(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),fill,MethodDescriptor((byte[]): void),org.bson.BasicBSONDecoder$BSONInput{ public void fill(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),fill,MethodDescriptor((byte[], int): void),org.bson.BasicBSONDecoder$BSONInput{ public void fill(byte[],int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),getMax,MethodDescriptor((): int),org.bson.BasicBSONDecoder$BSONInput{ public int getMax() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),getPos,MethodDescriptor((): int),org.bson.BasicBSONDecoder$BSONInput{ public int getPos() }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),numRead,MethodDescriptor((): int),org.bson.BasicBSONDecoder$BSONInput{ public int numRead() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),read,MethodDescriptor((): byte),org.bson.BasicBSONDecoder$BSONInput{ public byte read() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),readCStr,MethodDescriptor((): java.lang.String),org.bson.BasicBSONDecoder$BSONInput{ public java.lang.String readCStr() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),readDouble,MethodDescriptor((): double),org.bson.BasicBSONDecoder$BSONInput{ public double readDouble() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),readInt,MethodDescriptor((): int),org.bson.BasicBSONDecoder$BSONInput{ public int readInt() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),readIntBE,MethodDescriptor((): int),org.bson.BasicBSONDecoder$BSONInput{ public int readIntBE() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),readLong,MethodDescriptor((): long),org.bson.BasicBSONDecoder$BSONInput{ public long readLong() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),readUTF8String,MethodDescriptor((): java.lang.String),org.bson.BasicBSONDecoder$BSONInput{ public java.lang.String readUTF8String() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder$BSONInput),setMax,MethodDescriptor((int): void),org.bson.BasicBSONDecoder$BSONInput{ public void setMax(int) }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),<clinit>,MethodDescriptor((): void),org.bson.BasicBSONDecoder{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),<init>,MethodDescriptor((): void),org.bson.BasicBSONDecoder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),_binary,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONDecoder{ protected void _binary(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),_decode,MethodDescriptor((org.bson.BasicBSONDecoder$BSONInput, org.bson.BSONCallback): int),org.bson.BasicBSONDecoder{ private int _decode(org.bson.BasicBSONDecoder$BSONInput,org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),_fillRange,MethodDescriptor((byte, byte): void),org.bson.BasicBSONDecoder{ static void _fillRange(byte,byte) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),_isAscii,MethodDescriptor((byte): boolean),org.bson.BasicBSONDecoder{ private static boolean _isAscii(byte) }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),_readBasicObject,MethodDescriptor((): java.lang.Object),org.bson.BasicBSONDecoder{ java.lang.Object _readBasicObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),access$000,MethodDescriptor((org.bson.BasicBSONDecoder): byte[]),org.bson.BasicBSONDecoder{ static byte[] access$000(org.bson.BasicBSONDecoder) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),access$100,MethodDescriptor((org.bson.BasicBSONDecoder): byte[]),org.bson.BasicBSONDecoder{ static byte[] access$100(org.bson.BasicBSONDecoder) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),access$200,MethodDescriptor((org.bson.BasicBSONDecoder): org.bson.io.PoolOutputBuffer),org.bson.BasicBSONDecoder{ static org.bson.io.PoolOutputBuffer access$200(org.bson.BasicBSONDecoder) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),decode,MethodDescriptor((boolean): int),org.bson.BasicBSONDecoder{ int decode(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),decode,MethodDescriptor((byte[], org.bson.BSONCallback): int),org.bson.BasicBSONDecoder{ public int decode(byte[],org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),decode,MethodDescriptor((java.io.InputStream, org.bson.BSONCallback): int),org.bson.BasicBSONDecoder{ public int decode(java.io.InputStream,org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),decodeElement,MethodDescriptor((): boolean),org.bson.BasicBSONDecoder{ boolean decodeElement() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),readObject,MethodDescriptor((byte[]): org.bson.BSONObject),org.bson.BasicBSONDecoder{ public org.bson.BSONObject readObject(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONDecoder),readObject,MethodDescriptor((java.io.InputStream): org.bson.BSONObject),org.bson.BasicBSONDecoder{ public org.bson.BSONObject readObject(java.io.InputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),<init>,MethodDescriptor((): void),org.bson.BasicBSONEncoder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),_put,MethodDescriptor((byte, java.lang.String): void),org.bson.BasicBSONEncoder{ protected void _put(byte,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),_put,MethodDescriptor((java.lang.String): int),org.bson.BasicBSONEncoder{ protected int _put(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),_putObjectField,MethodDescriptor((java.lang.String, java.lang.Object): void),org.bson.BasicBSONEncoder{ protected void _putObjectField(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),_putString,MethodDescriptor((java.lang.String, java.lang.String, byte): void),org.bson.BasicBSONEncoder{ private void _putString(java.lang.String,java.lang.String,byte) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),_putValueString,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ protected void _putValueString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),_reset,MethodDescriptor((java.nio.Buffer): void),org.bson.BasicBSONEncoder{ void _reset(java.nio.Buffer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),done,MethodDescriptor((): void),org.bson.BasicBSONEncoder{ public void done() }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),encode,MethodDescriptor((org.bson.BSONObject): byte[]),org.bson.BasicBSONEncoder{ public byte[] encode(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),handleSpecialObjects,MethodDescriptor((java.lang.String, org.bson.BSONObject): boolean),org.bson.BasicBSONEncoder{ protected boolean handleSpecialObjects(java.lang.String,org.bson.BSONObject) }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putArray,MethodDescriptor((java.lang.String, java.lang.Object): void),org.bson.BasicBSONEncoder{ private void putArray(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putBinary,MethodDescriptor((java.lang.String, byte[]): void),org.bson.BasicBSONEncoder{ protected void putBinary(java.lang.String,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putBinary,MethodDescriptor((java.lang.String, int, byte[]): void),org.bson.BasicBSONEncoder{ private void putBinary(java.lang.String,int,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putBinary,MethodDescriptor((java.lang.String, org.bson.types.Binary): void),org.bson.BasicBSONEncoder{ protected void putBinary(java.lang.String,org.bson.types.Binary) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putBoolean,MethodDescriptor((java.lang.String, java.lang.Boolean): void),org.bson.BasicBSONEncoder{ protected void putBoolean(java.lang.String,java.lang.Boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putCode,MethodDescriptor((java.lang.String, org.bson.types.Code): void),org.bson.BasicBSONEncoder{ protected void putCode(java.lang.String,org.bson.types.Code) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putCodeWScope,MethodDescriptor((java.lang.String, org.bson.types.CodeWScope): void),org.bson.BasicBSONEncoder{ protected void putCodeWScope(java.lang.String,org.bson.types.CodeWScope) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putDate,MethodDescriptor((java.lang.String, java.util.Date): void),org.bson.BasicBSONEncoder{ protected void putDate(java.lang.String,java.util.Date) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putIterable,MethodDescriptor((java.lang.String, java.lang.Iterable): void),org.bson.BasicBSONEncoder{ private void putIterable(java.lang.String,java.lang.Iterable) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putMap,MethodDescriptor((java.lang.String, java.util.Map): void),org.bson.BasicBSONEncoder{ private void putMap(java.lang.String,java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putMaxKey,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ private void putMaxKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putMinKey,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ private void putMinKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putNull,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ protected void putNull(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putNumber,MethodDescriptor((java.lang.String, java.lang.Number): void),org.bson.BasicBSONEncoder{ protected void putNumber(java.lang.String,java.lang.Number) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putObject,MethodDescriptor((java.lang.String, org.bson.BSONObject): int),org.bson.BasicBSONEncoder{ protected int putObject(java.lang.String,org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putObject,MethodDescriptor((org.bson.BSONObject): int),org.bson.BasicBSONEncoder{ public int putObject(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): void),org.bson.BasicBSONEncoder{ protected void putObjectId(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putPattern,MethodDescriptor((java.lang.String, java.util.regex.Pattern): void),org.bson.BasicBSONEncoder{ private void putPattern(java.lang.String,java.util.regex.Pattern) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putSpecial,MethodDescriptor((java.lang.String, java.lang.Object): boolean),org.bson.BasicBSONEncoder{ protected boolean putSpecial(java.lang.String,java.lang.Object) }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putString,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.BasicBSONEncoder{ protected void putString(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putSymbol,MethodDescriptor((java.lang.String, org.bson.types.Symbol): void),org.bson.BasicBSONEncoder{ protected void putSymbol(java.lang.String,org.bson.types.Symbol) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putTimestamp,MethodDescriptor((java.lang.String, org.bson.types.BSONTimestamp): void),org.bson.BasicBSONEncoder{ protected void putTimestamp(java.lang.String,org.bson.types.BSONTimestamp) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putUUID,MethodDescriptor((java.lang.String, java.util.UUID): void),org.bson.BasicBSONEncoder{ protected void putUUID(java.lang.String,java.util.UUID) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),putUndefined,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ protected void putUndefined(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),set,MethodDescriptor((org.bson.io.OutputBuffer): void),org.bson.BasicBSONEncoder{ public void set(org.bson.io.OutputBuffer) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),writeCString,MethodDescriptor((java.lang.String): void),org.bson.BasicBSONEncoder{ public void writeCString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),writeInt,MethodDescriptor((int): void),org.bson.BasicBSONEncoder{ public void writeInt(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONEncoder),writeLong,MethodDescriptor((long): void),org.bson.BasicBSONEncoder{ public void writeLong(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),<init>,MethodDescriptor((): void),org.bson.BasicBSONObject{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),<init>,MethodDescriptor((int): void),org.bson.BasicBSONObject{ public void <init>(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),<init>,MethodDescriptor((java.lang.String, java.lang.Object): void),org.bson.BasicBSONObject{ public void <init>(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),<init>,MethodDescriptor((java.util.Map): void),org.bson.BasicBSONObject{ public void <init>(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),append,MethodDescriptor((java.lang.String, java.lang.Object): org.bson.BasicBSONObject),org.bson.BasicBSONObject{ public org.bson.BasicBSONObject append(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),containsField,MethodDescriptor((java.lang.String): boolean),org.bson.BasicBSONObject{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),containsKey,MethodDescriptor((java.lang.String): boolean),org.bson.BasicBSONObject{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.BasicBSONObject{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),get,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getBoolean,MethodDescriptor((java.lang.String): boolean),org.bson.BasicBSONObject{ public boolean getBoolean(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getBoolean,MethodDescriptor((java.lang.String, boolean): boolean),org.bson.BasicBSONObject{ public boolean getBoolean(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getDate,MethodDescriptor((java.lang.String): java.util.Date),org.bson.BasicBSONObject{ public java.util.Date getDate(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getDate,MethodDescriptor((java.lang.String, java.util.Date): java.util.Date),org.bson.BasicBSONObject{ public java.util.Date getDate(java.lang.String,java.util.Date) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getDouble,MethodDescriptor((java.lang.String): double),org.bson.BasicBSONObject{ public double getDouble(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getDouble,MethodDescriptor((java.lang.String, double): double),org.bson.BasicBSONObject{ public double getDouble(java.lang.String,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getInt,MethodDescriptor((java.lang.String): int),org.bson.BasicBSONObject{ public int getInt(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getInt,MethodDescriptor((java.lang.String, int): int),org.bson.BasicBSONObject{ public int getInt(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getLong,MethodDescriptor((java.lang.String): long),org.bson.BasicBSONObject{ public long getLong(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getLong,MethodDescriptor((java.lang.String, long): long),org.bson.BasicBSONObject{ public long getLong(java.lang.String,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getObjectId,MethodDescriptor((java.lang.String): org.bson.types.ObjectId),org.bson.BasicBSONObject{ public org.bson.types.ObjectId getObjectId(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): org.bson.types.ObjectId),org.bson.BasicBSONObject{ public org.bson.types.ObjectId getObjectId(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getString,MethodDescriptor((java.lang.String): java.lang.String),org.bson.BasicBSONObject{ public java.lang.String getString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),getString,MethodDescriptor((java.lang.String, java.lang.String): java.lang.String),org.bson.BasicBSONObject{ public java.lang.String getString(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),put,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object put(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),putAll,MethodDescriptor((java.util.Map): void),org.bson.BasicBSONObject{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),putAll,MethodDescriptor((org.bson.BSONObject): void),org.bson.BasicBSONObject{ public void putAll(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),removeField,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.BasicBSONObject{ public java.lang.Object removeField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),toMap,MethodDescriptor((): java.util.Map),org.bson.BasicBSONObject{ public java.util.Map toMap() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/BasicBSONObject),toString,MethodDescriptor((): java.lang.String),org.bson.BasicBSONObject{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),<init>,MethodDescriptor((): void),org.bson.EmptyBSONCallback{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),arrayDone,MethodDescriptor((): java.lang.Object),org.bson.EmptyBSONCallback{ public java.lang.Object arrayDone() }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),arrayStart,MethodDescriptor((): void),org.bson.EmptyBSONCallback{ public void arrayStart() }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),arrayStart,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void arrayStart(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),createBSONCallback,MethodDescriptor((): org.bson.BSONCallback),org.bson.EmptyBSONCallback{ public org.bson.BSONCallback createBSONCallback() }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),get,MethodDescriptor((): java.lang.Object),org.bson.EmptyBSONCallback{ public java.lang.Object get() }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotBinary,MethodDescriptor((java.lang.String, byte, byte[]): void),org.bson.EmptyBSONCallback{ public void gotBinary(java.lang.String,byte,byte[]) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotBinaryArray,MethodDescriptor((java.lang.String, byte[]): void),org.bson.EmptyBSONCallback{ public void gotBinaryArray(java.lang.String,byte[]) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotBoolean,MethodDescriptor((java.lang.String, boolean): void),org.bson.EmptyBSONCallback{ public void gotBoolean(java.lang.String,boolean) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotCode,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotCode(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotCodeWScope,MethodDescriptor((java.lang.String, java.lang.String, java.lang.Object): void),org.bson.EmptyBSONCallback{ public void gotCodeWScope(java.lang.String,java.lang.String,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotDBRef,MethodDescriptor((java.lang.String, java.lang.String, org.bson.types.ObjectId): void),org.bson.EmptyBSONCallback{ public void gotDBRef(java.lang.String,java.lang.String,org.bson.types.ObjectId) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotDate,MethodDescriptor((java.lang.String, long): void),org.bson.EmptyBSONCallback{ public void gotDate(java.lang.String,long) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotDouble,MethodDescriptor((java.lang.String, double): void),org.bson.EmptyBSONCallback{ public void gotDouble(java.lang.String,double) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotInt,MethodDescriptor((java.lang.String, int): void),org.bson.EmptyBSONCallback{ public void gotInt(java.lang.String,int) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotLong,MethodDescriptor((java.lang.String, long): void),org.bson.EmptyBSONCallback{ public void gotLong(java.lang.String,long) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotMaxKey,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotMaxKey(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotMinKey,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotMinKey(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotNull,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotNull(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): void),org.bson.EmptyBSONCallback{ public void gotObjectId(java.lang.String,org.bson.types.ObjectId) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotRegex,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotRegex(java.lang.String,java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotString,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotString(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotSymbol,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotSymbol(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotTimestamp,MethodDescriptor((java.lang.String, int, int): void),org.bson.EmptyBSONCallback{ public void gotTimestamp(java.lang.String,int,int) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotUUID,MethodDescriptor((java.lang.String, long, long): void),org.bson.EmptyBSONCallback{ public void gotUUID(java.lang.String,long,long) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),gotUndefined,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotUndefined(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),objectDone,MethodDescriptor((): java.lang.Object),org.bson.EmptyBSONCallback{ public java.lang.Object objectDone() }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),objectStart,MethodDescriptor((): void),org.bson.EmptyBSONCallback{ public void objectStart() }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),objectStart,MethodDescriptor((boolean): void),org.bson.EmptyBSONCallback{ public void objectStart(boolean) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),objectStart,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void objectStart(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/EmptyBSONCallback),reset,MethodDescriptor((): void),org.bson.EmptyBSONCallback{ public void reset() }) => DPure
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),<init>,MethodDescriptor((byte[], int, org.bson.LazyBSONCallback): void),org.bson.KeyCachingLazyBSONObject{ public void <init>(byte[],int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),<init>,MethodDescriptor((byte[], org.bson.LazyBSONCallback): void),org.bson.KeyCachingLazyBSONObject{ public void <init>(byte[],org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, int, org.bson.LazyBSONCallback): void),org.bson.KeyCachingLazyBSONObject{ public void <init>(org.bson.io.BSONByteBuffer,int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, org.bson.LazyBSONCallback): void),org.bson.KeyCachingLazyBSONObject{ public void <init>(org.bson.io.BSONByteBuffer,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),containsField,MethodDescriptor((java.lang.String): boolean),org.bson.KeyCachingLazyBSONObject{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),containsKey,MethodDescriptor((java.lang.String): boolean),org.bson.LazyBSONObject{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),ensureFieldList,MethodDescriptor((): void),org.bson.KeyCachingLazyBSONObject{ private void ensureFieldList() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),entrySet,MethodDescriptor((): java.util.Set),org.bson.LazyBSONObject{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),get,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.KeyCachingLazyBSONObject{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),getBSONSize,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int getBSONSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),getElement,MethodDescriptor((java.lang.String): org.bson.LazyBSONObject$ElementRecord),org.bson.LazyBSONObject{ org.bson.LazyBSONObject$ElementRecord getElement(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),getElementBSONSize,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int getElementBSONSize(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),getElementType,MethodDescriptor((int): byte),org.bson.LazyBSONObject{ protected byte getElementType(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),getElementValue,MethodDescriptor((org.bson.LazyBSONObject$ElementRecord): java.lang.Object),org.bson.LazyBSONObject{ protected java.lang.Object getElementValue(org.bson.LazyBSONObject$ElementRecord) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),getElements,MethodDescriptor((): java.util.List),org.bson.LazyBSONObject{ java.util.List getElements() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),hashCode,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),isElementEmpty,MethodDescriptor((int): boolean),org.bson.LazyBSONObject{ protected boolean isElementEmpty(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),isEmpty,MethodDescriptor((): boolean),org.bson.LazyBSONObject{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),keySet,MethodDescriptor((): java.util.Set),org.bson.LazyBSONObject{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),pipe,MethodDescriptor((java.io.OutputStream): int),org.bson.LazyBSONObject{ public int pipe(java.io.OutputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),putAll,MethodDescriptor((java.util.Map): void),org.bson.LazyBSONObject{ public void putAll(java.util.Map) }) => DPure
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),putAll,MethodDescriptor((org.bson.BSONObject): void),org.bson.LazyBSONObject{ public void putAll(org.bson.BSONObject) }) => DPure
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),removeField,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object removeField(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),sizeCString,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int sizeCString(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),toMap,MethodDescriptor((): java.util.Map),org.bson.LazyBSONObject{ public java.util.Map toMap() }) => DPure
DefinedMethod(ObjectType(org/bson/KeyCachingLazyBSONObject),toString,MethodDescriptor((): java.lang.String),org.bson.LazyBSONObject{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),<clinit>,MethodDescriptor((): void),org.bson.LazyBSONCallback{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),<init>,MethodDescriptor((): void),org.bson.LazyBSONCallback{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),arrayDone,MethodDescriptor((): java.lang.Object),org.bson.EmptyBSONCallback{ public java.lang.Object arrayDone() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),arrayStart,MethodDescriptor((): void),org.bson.EmptyBSONCallback{ public void arrayStart() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),arrayStart,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void arrayStart(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),createArray,MethodDescriptor((byte[], int): java.util.List),org.bson.LazyBSONCallback{ public java.util.List createArray(byte[],int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),createBSONCallback,MethodDescriptor((): org.bson.BSONCallback),org.bson.EmptyBSONCallback{ public org.bson.BSONCallback createBSONCallback() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),createDBRef,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): java.lang.Object),org.bson.LazyBSONCallback{ public java.lang.Object createDBRef(java.lang.String,org.bson.types.ObjectId) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),createObject,MethodDescriptor((byte[], int): java.lang.Object),org.bson.LazyBSONCallback{ public java.lang.Object createObject(byte[],int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),get,MethodDescriptor((): java.lang.Object),org.bson.LazyBSONCallback{ public java.lang.Object get() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotBinary,MethodDescriptor((java.lang.String, byte, byte[]): void),org.bson.LazyBSONCallback{ public void gotBinary(java.lang.String,byte,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotBinaryArray,MethodDescriptor((java.lang.String, byte[]): void),org.bson.EmptyBSONCallback{ public void gotBinaryArray(java.lang.String,byte[]) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotBoolean,MethodDescriptor((java.lang.String, boolean): void),org.bson.EmptyBSONCallback{ public void gotBoolean(java.lang.String,boolean) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotCode,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotCode(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotCodeWScope,MethodDescriptor((java.lang.String, java.lang.String, java.lang.Object): void),org.bson.EmptyBSONCallback{ public void gotCodeWScope(java.lang.String,java.lang.String,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotDBRef,MethodDescriptor((java.lang.String, java.lang.String, org.bson.types.ObjectId): void),org.bson.EmptyBSONCallback{ public void gotDBRef(java.lang.String,java.lang.String,org.bson.types.ObjectId) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotDate,MethodDescriptor((java.lang.String, long): void),org.bson.EmptyBSONCallback{ public void gotDate(java.lang.String,long) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotDouble,MethodDescriptor((java.lang.String, double): void),org.bson.EmptyBSONCallback{ public void gotDouble(java.lang.String,double) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotInt,MethodDescriptor((java.lang.String, int): void),org.bson.EmptyBSONCallback{ public void gotInt(java.lang.String,int) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotLong,MethodDescriptor((java.lang.String, long): void),org.bson.EmptyBSONCallback{ public void gotLong(java.lang.String,long) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotMaxKey,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotMaxKey(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotMinKey,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotMinKey(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotNull,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotNull(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotObjectId,MethodDescriptor((java.lang.String, org.bson.types.ObjectId): void),org.bson.EmptyBSONCallback{ public void gotObjectId(java.lang.String,org.bson.types.ObjectId) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotRegex,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotRegex(java.lang.String,java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotString,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotString(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotSymbol,MethodDescriptor((java.lang.String, java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotSymbol(java.lang.String,java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotTimestamp,MethodDescriptor((java.lang.String, int, int): void),org.bson.EmptyBSONCallback{ public void gotTimestamp(java.lang.String,int,int) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotUUID,MethodDescriptor((java.lang.String, long, long): void),org.bson.EmptyBSONCallback{ public void gotUUID(java.lang.String,long,long) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),gotUndefined,MethodDescriptor((java.lang.String): void),org.bson.EmptyBSONCallback{ public void gotUndefined(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),objectDone,MethodDescriptor((): java.lang.Object),org.bson.LazyBSONCallback{ public java.lang.Object objectDone() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),objectStart,MethodDescriptor((): void),org.bson.LazyBSONCallback{ public void objectStart() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),objectStart,MethodDescriptor((boolean): void),org.bson.LazyBSONCallback{ public void objectStart(boolean) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),objectStart,MethodDescriptor((java.lang.String): void),org.bson.LazyBSONCallback{ public void objectStart(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),reset,MethodDescriptor((): void),org.bson.LazyBSONCallback{ public void reset() }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/LazyBSONCallback),setRootObject,MethodDescriptor((java.lang.Object): void),org.bson.LazyBSONCallback{ public void setRootObject(java.lang.Object) }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/LazyBSONDecoder),<clinit>,MethodDescriptor((): void),org.bson.LazyBSONDecoder{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONDecoder),<init>,MethodDescriptor((): void),org.bson.LazyBSONDecoder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONDecoder),decode,MethodDescriptor((byte[], org.bson.BSONCallback): int),org.bson.LazyBSONDecoder{ public int decode(byte[],org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONDecoder),decode,MethodDescriptor((java.io.InputStream, org.bson.BSONCallback): int),org.bson.LazyBSONDecoder{ public int decode(java.io.InputStream,org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONDecoder),readObject,MethodDescriptor((byte[]): org.bson.BSONObject),org.bson.LazyBSONDecoder{ public org.bson.BSONObject readObject(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONDecoder),readObject,MethodDescriptor((java.io.InputStream): org.bson.BSONObject),org.bson.LazyBSONDecoder{ public org.bson.BSONObject readObject(java.io.InputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList$LazyBSONListIterator),<init>,MethodDescriptor((org.bson.LazyBSONList): void),org.bson.LazyBSONList$LazyBSONListIterator{ public void <init>(org.bson.LazyBSONList) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList$LazyBSONListIterator),hasNext,MethodDescriptor((): boolean),org.bson.LazyBSONList$LazyBSONListIterator{ public boolean hasNext() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList$LazyBSONListIterator),next,MethodDescriptor((): java.lang.Object),org.bson.LazyBSONList$LazyBSONListIterator{ public java.lang.Object next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList$LazyBSONListIterator),remove,MethodDescriptor((): void),org.bson.LazyBSONList$LazyBSONListIterator{ public void remove() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),<init>,MethodDescriptor((byte[], int, org.bson.LazyBSONCallback): void),org.bson.LazyBSONList{ public void <init>(byte[],int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),<init>,MethodDescriptor((byte[], org.bson.LazyBSONCallback): void),org.bson.LazyBSONList{ public void <init>(byte[],org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, int, org.bson.LazyBSONCallback): void),org.bson.LazyBSONList{ public void <init>(org.bson.io.BSONByteBuffer,int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, org.bson.LazyBSONCallback): void),org.bson.LazyBSONList{ public void <init>(org.bson.io.BSONByteBuffer,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),add,MethodDescriptor((int, java.lang.Object): void),org.bson.LazyBSONList{ public void add(int,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),add,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONList{ public boolean add(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),addAll,MethodDescriptor((int, java.util.Collection): boolean),org.bson.LazyBSONList{ public boolean addAll(int,java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),addAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONList{ public boolean addAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),clear,MethodDescriptor((): void),org.bson.LazyBSONList{ public void clear() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),contains,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONList{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),containsAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONList{ public boolean containsAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),containsField,MethodDescriptor((java.lang.String): boolean),org.bson.LazyBSONObject{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),containsKey,MethodDescriptor((java.lang.String): boolean),org.bson.LazyBSONObject{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),entrySet,MethodDescriptor((): java.util.Set),org.bson.LazyBSONObject{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),get,MethodDescriptor((int): java.lang.Object),org.bson.LazyBSONList{ public java.lang.Object get(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),get,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),getBSONSize,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int getBSONSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),getElement,MethodDescriptor((java.lang.String): org.bson.LazyBSONObject$ElementRecord),org.bson.LazyBSONObject{ org.bson.LazyBSONObject$ElementRecord getElement(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),getElementBSONSize,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int getElementBSONSize(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),getElementType,MethodDescriptor((int): byte),org.bson.LazyBSONObject{ protected byte getElementType(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),getElementValue,MethodDescriptor((org.bson.LazyBSONObject$ElementRecord): java.lang.Object),org.bson.LazyBSONObject{ protected java.lang.Object getElementValue(org.bson.LazyBSONObject$ElementRecord) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),getElements,MethodDescriptor((): java.util.List),org.bson.LazyBSONObject{ java.util.List getElements() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),hashCode,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),indexOf,MethodDescriptor((java.lang.Object): int),org.bson.LazyBSONList{ public int indexOf(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),isElementEmpty,MethodDescriptor((int): boolean),org.bson.LazyBSONObject{ protected boolean isElementEmpty(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),isEmpty,MethodDescriptor((): boolean),org.bson.LazyBSONObject{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),iterator,MethodDescriptor((): java.util.Iterator),org.bson.LazyBSONList{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),keySet,MethodDescriptor((): java.util.Set),org.bson.LazyBSONObject{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),lastIndexOf,MethodDescriptor((java.lang.Object): int),org.bson.LazyBSONList{ public int lastIndexOf(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),listIterator,MethodDescriptor((): java.util.ListIterator),org.bson.LazyBSONList{ public java.util.ListIterator listIterator() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),listIterator,MethodDescriptor((int): java.util.ListIterator),org.bson.LazyBSONList{ public java.util.ListIterator listIterator(int) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),pipe,MethodDescriptor((java.io.OutputStream): int),org.bson.LazyBSONObject{ public int pipe(java.io.OutputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),putAll,MethodDescriptor((java.util.Map): void),org.bson.LazyBSONObject{ public void putAll(java.util.Map) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),putAll,MethodDescriptor((org.bson.BSONObject): void),org.bson.LazyBSONObject{ public void putAll(org.bson.BSONObject) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),remove,MethodDescriptor((int): java.lang.Object),org.bson.LazyBSONList{ public java.lang.Object remove(int) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),remove,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONList{ public boolean remove(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),removeAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONList{ public boolean removeAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),removeField,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object removeField(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),retainAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONList{ public boolean retainAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),set,MethodDescriptor((int, java.lang.Object): java.lang.Object),org.bson.LazyBSONList{ public java.lang.Object set(int,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),size,MethodDescriptor((): int),org.bson.LazyBSONList{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),sizeCString,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int sizeCString(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONList),subList,MethodDescriptor((int, int): java.util.List),org.bson.LazyBSONList{ public java.util.List subList(int,int) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),toArray,MethodDescriptor((): java.lang.Object[]),org.bson.LazyBSONList{ public java.lang.Object[] toArray() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),toArray,MethodDescriptor((java.lang.Object[]): java.lang.Object[]),org.bson.LazyBSONList{ public java.lang.Object[] toArray(java.lang.Object[]) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),toMap,MethodDescriptor((): java.util.Map),org.bson.LazyBSONObject{ public java.util.Map toMap() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONList),toString,MethodDescriptor((): java.lang.String),org.bson.LazyBSONObject{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$ElementRecord),<init>,MethodDescriptor((org.bson.LazyBSONObject, java.lang.String, int): void),org.bson.LazyBSONObject$ElementRecord{ void <init>(org.bson.LazyBSONObject,java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator$1),<init>,MethodDescriptor((org.bson.LazyBSONObject$LazyBSONEntryIterator, org.bson.LazyBSONObject$ElementRecord): void),org.bson.LazyBSONObject$LazyBSONEntryIterator$1{ void <init>(org.bson.LazyBSONObject$LazyBSONEntryIterator,org.bson.LazyBSONObject$ElementRecord) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator$1),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject$LazyBSONEntryIterator$1{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator$1),getKey,MethodDescriptor((): java.lang.Object),org.bson.LazyBSONObject$LazyBSONEntryIterator$1{ public java.lang.Object getKey() }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator$1),getKey,MethodDescriptor((): java.lang.String),org.bson.LazyBSONObject$LazyBSONEntryIterator$1{ public java.lang.String getKey() }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator$1),getValue,MethodDescriptor((): java.lang.Object),org.bson.LazyBSONObject$LazyBSONEntryIterator$1{ public java.lang.Object getValue() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator$1),hashCode,MethodDescriptor((): int),org.bson.LazyBSONObject$LazyBSONEntryIterator$1{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator$1),setValue,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.LazyBSONObject$LazyBSONEntryIterator$1{ public java.lang.Object setValue(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator$1),toString,MethodDescriptor((): java.lang.String),org.bson.LazyBSONObject$LazyBSONEntryIterator$1{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator),<init>,MethodDescriptor((org.bson.LazyBSONObject): void),org.bson.LazyBSONObject$LazyBSONEntryIterator{ void <init>(org.bson.LazyBSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator),hasNext,MethodDescriptor((): boolean),org.bson.LazyBSONObject$LazyBSONEntryIterator{ public boolean hasNext() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator),next,MethodDescriptor((): java.lang.Object),org.bson.LazyBSONObject$LazyBSONEntryIterator{ public java.lang.Object next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator),next,MethodDescriptor((): java.util.Map$Entry),org.bson.LazyBSONObject$LazyBSONEntryIterator{ public java.util.Map$Entry next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntryIterator),remove,MethodDescriptor((): void),org.bson.LazyBSONObject$LazyBSONEntryIterator{ public void remove() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),<init>,MethodDescriptor((org.bson.LazyBSONObject): void),org.bson.LazyBSONObject$LazyBSONEntrySet{ void <init>(org.bson.LazyBSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),add,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject$ReadOnlySet{ public boolean add(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),addAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONObject$ReadOnlySet{ public boolean addAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),clear,MethodDescriptor((): void),org.bson.LazyBSONObject$ReadOnlySet{ public void clear() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),contains,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject$LazyBSONEntrySet{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),containsAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONObject$LazyBSONEntrySet{ public boolean containsAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),isEmpty,MethodDescriptor((): boolean),org.bson.LazyBSONObject$LazyBSONEntrySet{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),iterator,MethodDescriptor((): java.util.Iterator),org.bson.LazyBSONObject$LazyBSONEntrySet{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),remove,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject$ReadOnlySet{ public boolean remove(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),removeAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONObject$ReadOnlySet{ public boolean removeAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),retainAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONObject$ReadOnlySet{ public boolean retainAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),size,MethodDescriptor((): int),org.bson.LazyBSONObject$LazyBSONEntrySet{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),toArray,MethodDescriptor((): java.lang.Object[]),org.bson.LazyBSONObject$LazyBSONEntrySet{ public java.lang.Object[] toArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONEntrySet),toArray,MethodDescriptor((java.lang.Object[]): java.lang.Object[]),org.bson.LazyBSONObject$LazyBSONEntrySet{ public java.lang.Object[] toArray(java.lang.Object[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeyIterator),<init>,MethodDescriptor((org.bson.LazyBSONObject): void),org.bson.LazyBSONObject$LazyBSONKeyIterator{ void <init>(org.bson.LazyBSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeyIterator),hasNext,MethodDescriptor((): boolean),org.bson.LazyBSONObject$LazyBSONKeyIterator{ public boolean hasNext() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeyIterator),next,MethodDescriptor((): java.lang.Object),org.bson.LazyBSONObject$LazyBSONKeyIterator{ public java.lang.Object next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeyIterator),next,MethodDescriptor((): java.lang.String),org.bson.LazyBSONObject$LazyBSONKeyIterator{ public java.lang.String next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeyIterator),remove,MethodDescriptor((): void),org.bson.LazyBSONObject$LazyBSONKeyIterator{ public void remove() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),<init>,MethodDescriptor((org.bson.LazyBSONObject): void),org.bson.LazyBSONObject$LazyBSONKeySet{ public void <init>(org.bson.LazyBSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),add,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject$LazyBSONKeySet{ public boolean add(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),add,MethodDescriptor((java.lang.String): boolean),org.bson.LazyBSONObject$LazyBSONKeySet{ public boolean add(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),addAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONObject$LazyBSONKeySet{ public boolean addAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),clear,MethodDescriptor((): void),org.bson.LazyBSONObject$LazyBSONKeySet{ public void clear() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),contains,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject$LazyBSONKeySet{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),containsAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONObject$LazyBSONKeySet{ public boolean containsAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),isEmpty,MethodDescriptor((): boolean),org.bson.LazyBSONObject$LazyBSONKeySet{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),iterator,MethodDescriptor((): java.util.Iterator),org.bson.LazyBSONObject$LazyBSONKeySet{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),remove,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject$LazyBSONKeySet{ public boolean remove(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),removeAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONObject$LazyBSONKeySet{ public boolean removeAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),retainAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONObject$LazyBSONKeySet{ public boolean retainAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),size,MethodDescriptor((): int),org.bson.LazyBSONObject$LazyBSONKeySet{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),toArray,MethodDescriptor((): java.lang.Object[]),org.bson.LazyBSONObject$LazyBSONKeySet{ public java.lang.Object[] toArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),toArray,MethodDescriptor((): java.lang.String[]),org.bson.LazyBSONObject$LazyBSONKeySet{ public java.lang.String[] toArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$LazyBSONKeySet),toArray,MethodDescriptor((java.lang.Object[]): java.lang.Object[]),org.bson.LazyBSONObject$LazyBSONKeySet{ public java.lang.Object[] toArray(java.lang.Object[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$ReadOnlySet),<init>,MethodDescriptor((org.bson.LazyBSONObject): void),org.bson.LazyBSONObject$ReadOnlySet{ void <init>(org.bson.LazyBSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject$ReadOnlySet),add,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject$ReadOnlySet{ public boolean add(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$ReadOnlySet),addAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONObject$ReadOnlySet{ public boolean addAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$ReadOnlySet),clear,MethodDescriptor((): void),org.bson.LazyBSONObject$ReadOnlySet{ public void clear() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$ReadOnlySet),remove,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject$ReadOnlySet{ public boolean remove(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$ReadOnlySet),removeAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONObject$ReadOnlySet{ public boolean removeAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject$ReadOnlySet),retainAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONObject$ReadOnlySet{ public boolean retainAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject),<clinit>,MethodDescriptor((): void),org.bson.LazyBSONObject{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),<init>,MethodDescriptor((byte[], int, org.bson.LazyBSONCallback): void),org.bson.LazyBSONObject{ public void <init>(byte[],int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),<init>,MethodDescriptor((byte[], org.bson.LazyBSONCallback): void),org.bson.LazyBSONObject{ public void <init>(byte[],org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, int, org.bson.LazyBSONCallback): void),org.bson.LazyBSONObject{ public void <init>(org.bson.io.BSONByteBuffer,int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, org.bson.LazyBSONCallback): void),org.bson.LazyBSONObject{ public void <init>(org.bson.io.BSONByteBuffer,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),containsField,MethodDescriptor((java.lang.String): boolean),org.bson.LazyBSONObject{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),containsKey,MethodDescriptor((java.lang.String): boolean),org.bson.LazyBSONObject{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),entrySet,MethodDescriptor((): java.util.Set),org.bson.LazyBSONObject{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),get,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),getBSONSize,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int getBSONSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),getBSONSize,MethodDescriptor((int): int),org.bson.LazyBSONObject{ private int getBSONSize(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),getElement,MethodDescriptor((java.lang.String): org.bson.LazyBSONObject$ElementRecord),org.bson.LazyBSONObject{ org.bson.LazyBSONObject$ElementRecord getElement(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),getElementBSONSize,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int getElementBSONSize(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),getElementFieldName,MethodDescriptor((int): java.lang.String),org.bson.LazyBSONObject{ private java.lang.String getElementFieldName(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),getElementType,MethodDescriptor((int): byte),org.bson.LazyBSONObject{ protected byte getElementType(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),getElementValue,MethodDescriptor((org.bson.LazyBSONObject$ElementRecord): java.lang.Object),org.bson.LazyBSONObject{ protected java.lang.Object getElementValue(org.bson.LazyBSONObject$ElementRecord) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),getElements,MethodDescriptor((): java.util.List),org.bson.LazyBSONObject{ java.util.List getElements() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),hashCode,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),isElementEmpty,MethodDescriptor((int): boolean),org.bson.LazyBSONObject{ protected boolean isElementEmpty(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),isEmpty,MethodDescriptor((): boolean),org.bson.LazyBSONObject{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),keySet,MethodDescriptor((): java.util.Set),org.bson.LazyBSONObject{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),pipe,MethodDescriptor((java.io.OutputStream): int),org.bson.LazyBSONObject{ public int pipe(java.io.OutputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject),putAll,MethodDescriptor((java.util.Map): void),org.bson.LazyBSONObject{ public void putAll(java.util.Map) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject),putAll,MethodDescriptor((org.bson.BSONObject): void),org.bson.LazyBSONObject{ public void putAll(org.bson.BSONObject) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject),readBinary,MethodDescriptor((int): java.lang.Object),org.bson.LazyBSONObject{ private java.lang.Object readBinary(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),removeField,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object removeField(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject),sizeCString,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int sizeCString(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyBSONObject),toMap,MethodDescriptor((): java.util.Map),org.bson.LazyBSONObject{ public java.util.Map toMap() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyBSONObject),toString,MethodDescriptor((): java.lang.String),org.bson.LazyBSONObject{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),<init>,MethodDescriptor((byte[], int, org.bson.LazyBSONCallback): void),org.bson.LazyDBList{ public void <init>(byte[],int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),<init>,MethodDescriptor((byte[], org.bson.LazyBSONCallback): void),org.bson.LazyDBList{ public void <init>(byte[],org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, int, org.bson.LazyBSONCallback): void),org.bson.LazyDBList{ public void <init>(org.bson.io.BSONByteBuffer,int,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),<init>,MethodDescriptor((org.bson.io.BSONByteBuffer, org.bson.LazyBSONCallback): void),org.bson.LazyDBList{ public void <init>(org.bson.io.BSONByteBuffer,org.bson.LazyBSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),add,MethodDescriptor((int, java.lang.Object): void),org.bson.LazyBSONList{ public void add(int,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),add,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONList{ public boolean add(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),addAll,MethodDescriptor((int, java.util.Collection): boolean),org.bson.LazyBSONList{ public boolean addAll(int,java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),addAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONList{ public boolean addAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),clear,MethodDescriptor((): void),org.bson.LazyBSONList{ public void clear() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),contains,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONList{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),containsAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONList{ public boolean containsAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),containsField,MethodDescriptor((java.lang.String): boolean),org.bson.LazyBSONObject{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),containsKey,MethodDescriptor((java.lang.String): boolean),org.bson.LazyBSONObject{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),entrySet,MethodDescriptor((): java.util.Set),org.bson.LazyBSONObject{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONObject{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),get,MethodDescriptor((int): java.lang.Object),org.bson.LazyBSONList{ public java.lang.Object get(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),get,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),getBSONSize,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int getBSONSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),getElement,MethodDescriptor((java.lang.String): org.bson.LazyBSONObject$ElementRecord),org.bson.LazyBSONObject{ org.bson.LazyBSONObject$ElementRecord getElement(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),getElementBSONSize,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int getElementBSONSize(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),getElementType,MethodDescriptor((int): byte),org.bson.LazyBSONObject{ protected byte getElementType(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),getElementValue,MethodDescriptor((org.bson.LazyBSONObject$ElementRecord): java.lang.Object),org.bson.LazyBSONObject{ protected java.lang.Object getElementValue(org.bson.LazyBSONObject$ElementRecord) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),getElements,MethodDescriptor((): java.util.List),org.bson.LazyBSONObject{ java.util.List getElements() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),hashCode,MethodDescriptor((): int),org.bson.LazyBSONObject{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),indexOf,MethodDescriptor((java.lang.Object): int),org.bson.LazyBSONList{ public int indexOf(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),isElementEmpty,MethodDescriptor((int): boolean),org.bson.LazyBSONObject{ protected boolean isElementEmpty(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),isEmpty,MethodDescriptor((): boolean),org.bson.LazyBSONObject{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),isPartialObject,MethodDescriptor((): boolean),org.bson.LazyDBList{ public boolean isPartialObject() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/LazyDBList),iterator,MethodDescriptor((): java.util.Iterator),org.bson.LazyBSONList{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),keySet,MethodDescriptor((): java.util.Set),org.bson.LazyBSONObject{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),lastIndexOf,MethodDescriptor((java.lang.Object): int),org.bson.LazyBSONList{ public int lastIndexOf(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),listIterator,MethodDescriptor((): java.util.ListIterator),org.bson.LazyBSONList{ public java.util.ListIterator listIterator() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),listIterator,MethodDescriptor((int): java.util.ListIterator),org.bson.LazyBSONList{ public java.util.ListIterator listIterator(int) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),markAsPartialObject,MethodDescriptor((): void),org.bson.LazyDBList{ public void markAsPartialObject() }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/LazyDBList),pipe,MethodDescriptor((java.io.OutputStream): int),org.bson.LazyBSONObject{ public int pipe(java.io.OutputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),putAll,MethodDescriptor((java.util.Map): void),org.bson.LazyBSONObject{ public void putAll(java.util.Map) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),putAll,MethodDescriptor((org.bson.BSONObject): void),org.bson.LazyBSONObject{ public void putAll(org.bson.BSONObject) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),remove,MethodDescriptor((int): java.lang.Object),org.bson.LazyBSONList{ public java.lang.Object remove(int) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),remove,MethodDescriptor((java.lang.Object): boolean),org.bson.LazyBSONList{ public boolean remove(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),removeAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONList{ public boolean removeAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),removeField,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.LazyBSONObject{ public java.lang.Object removeField(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),retainAll,MethodDescriptor((java.util.Collection): boolean),org.bson.LazyBSONList{ public boolean retainAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),set,MethodDescriptor((int, java.lang.Object): java.lang.Object),org.bson.LazyBSONList{ public java.lang.Object set(int,java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),size,MethodDescriptor((): int),org.bson.LazyBSONList{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),sizeCString,MethodDescriptor((int): int),org.bson.LazyBSONObject{ protected int sizeCString(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/LazyDBList),subList,MethodDescriptor((int, int): java.util.List),org.bson.LazyBSONList{ public java.util.List subList(int,int) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),toArray,MethodDescriptor((): java.lang.Object[]),org.bson.LazyBSONList{ public java.lang.Object[] toArray() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),toArray,MethodDescriptor((java.lang.Object[]): java.lang.Object[]),org.bson.LazyBSONList{ public java.lang.Object[] toArray(java.lang.Object[]) }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),toMap,MethodDescriptor((): java.util.Map),org.bson.LazyBSONObject{ public java.util.Map toMap() }) => DPure
DefinedMethod(ObjectType(org/bson/LazyDBList),toString,MethodDescriptor((): java.lang.String),org.bson.LazyDBList{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/NewBSONDecoder),<init>,MethodDescriptor((): void),org.bson.NewBSONDecoder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/NewBSONDecoder),_binary,MethodDescriptor((java.lang.String): void),org.bson.NewBSONDecoder{ private void _binary(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/NewBSONDecoder),_decode,MethodDescriptor((): void),org.bson.NewBSONDecoder{ private void _decode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/NewBSONDecoder),_readBasicObject,MethodDescriptor((): java.lang.Object),org.bson.NewBSONDecoder{ private java.lang.Object _readBasicObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/NewBSONDecoder),decode,MethodDescriptor((byte[], org.bson.BSONCallback): int),org.bson.NewBSONDecoder{ public int decode(byte[],org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/NewBSONDecoder),decode,MethodDescriptor((java.io.InputStream, org.bson.BSONCallback): int),org.bson.NewBSONDecoder{ public int decode(java.io.InputStream,org.bson.BSONCallback) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/NewBSONDecoder),decodeElement,MethodDescriptor((): boolean),org.bson.NewBSONDecoder{ private boolean decodeElement() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/NewBSONDecoder),readCstr,MethodDescriptor((): java.lang.String),org.bson.NewBSONDecoder{ private java.lang.String readCstr() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/NewBSONDecoder),readObject,MethodDescriptor((byte[]): org.bson.BSONObject),org.bson.NewBSONDecoder{ public org.bson.BSONObject readObject(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/NewBSONDecoder),readObject,MethodDescriptor((java.io.InputStream): org.bson.BSONObject),org.bson.NewBSONDecoder{ public org.bson.BSONObject readObject(java.io.InputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/NewBSONDecoder),readUtf8Str,MethodDescriptor((): java.lang.String),org.bson.NewBSONDecoder{ private java.lang.String readUtf8Str() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),<init>,MethodDescriptor((java.nio.ByteBuffer): void),org.bson.io.BSONByteBuffer{ private void <init>(java.nio.ByteBuffer) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),array,MethodDescriptor((): byte[]),org.bson.io.BSONByteBuffer{ public byte[] array() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.io.BSONByteBuffer{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),get,MethodDescriptor((byte[]): java.nio.ByteBuffer),org.bson.io.BSONByteBuffer{ public java.nio.ByteBuffer get(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),get,MethodDescriptor((byte[], int, int): java.nio.ByteBuffer),org.bson.io.BSONByteBuffer{ public java.nio.ByteBuffer get(byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),get,MethodDescriptor((int): byte),org.bson.io.BSONByteBuffer{ public byte get(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),getCString,MethodDescriptor((int): java.lang.String),org.bson.io.BSONByteBuffer{ public java.lang.String getCString(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),getInt,MethodDescriptor((int): int),org.bson.io.BSONByteBuffer{ public int getInt(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),getIntBE,MethodDescriptor((int): int),org.bson.io.BSONByteBuffer{ public int getIntBE(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),getIntLE,MethodDescriptor((int): int),org.bson.io.BSONByteBuffer{ public int getIntLE(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),getLong,MethodDescriptor((int): long),org.bson.io.BSONByteBuffer{ public long getLong(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),getUTF8String,MethodDescriptor((int): java.lang.String),org.bson.io.BSONByteBuffer{ public java.lang.String getUTF8String(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),hashCode,MethodDescriptor((): int),org.bson.io.BSONByteBuffer{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),position,MethodDescriptor((int): java.nio.Buffer),org.bson.io.BSONByteBuffer{ public java.nio.Buffer position(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),reset,MethodDescriptor((): java.nio.Buffer),org.bson.io.BSONByteBuffer{ public java.nio.Buffer reset() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),size,MethodDescriptor((): int),org.bson.io.BSONByteBuffer{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),toString,MethodDescriptor((): java.lang.String),org.bson.io.BSONByteBuffer{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),wrap,MethodDescriptor((byte[]): org.bson.io.BSONByteBuffer),org.bson.io.BSONByteBuffer{ public static org.bson.io.BSONByteBuffer wrap(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BSONByteBuffer),wrap,MethodDescriptor((byte[], int, int): org.bson.io.BSONByteBuffer),org.bson.io.BSONByteBuffer{ public static org.bson.io.BSONByteBuffer wrap(byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),<init>,MethodDescriptor((): void),org.bson.io.BasicOutputBuffer{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),_ensure,MethodDescriptor((int): void),org.bson.io.BasicOutputBuffer{ void _ensure(int) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),asString,MethodDescriptor((): java.lang.String),org.bson.io.BasicOutputBuffer{ public java.lang.String asString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),asString,MethodDescriptor((java.lang.String): java.lang.String),org.bson.io.BasicOutputBuffer{ public java.lang.String asString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),getPosition,MethodDescriptor((): int),org.bson.io.BasicOutputBuffer{ public int getPosition() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),hex,MethodDescriptor((): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String hex() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),md5,MethodDescriptor((): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String md5() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),pipe,MethodDescriptor((java.io.DataOutput): int),org.bson.io.BasicOutputBuffer{ public int pipe(java.io.DataOutput) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),pipe,MethodDescriptor((java.io.OutputStream): int),org.bson.io.BasicOutputBuffer{ public int pipe(java.io.OutputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),seekEnd,MethodDescriptor((): void),org.bson.io.BasicOutputBuffer{ public void seekEnd() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),seekStart,MethodDescriptor((): void),org.bson.io.BasicOutputBuffer{ public void seekStart() }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),setPosition,MethodDescriptor((int): void),org.bson.io.BasicOutputBuffer{ public void setPosition(int) }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),size,MethodDescriptor((): int),org.bson.io.BasicOutputBuffer{ public int size() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),toByteArray,MethodDescriptor((): byte[]),org.bson.io.OutputBuffer{ public byte[] toByteArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),toString,MethodDescriptor((): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),write,MethodDescriptor((byte[]): void),org.bson.io.BasicOutputBuffer{ public void write(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),write,MethodDescriptor((byte[], int, int): void),org.bson.io.BasicOutputBuffer{ public void write(byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),write,MethodDescriptor((int): void),org.bson.io.BasicOutputBuffer{ public void write(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),writeDouble,MethodDescriptor((double): void),org.bson.io.OutputBuffer{ public void writeDouble(double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),writeInt,MethodDescriptor((int): void),org.bson.io.OutputBuffer{ public void writeInt(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),writeInt,MethodDescriptor((int, int): void),org.bson.io.OutputBuffer{ public void writeInt(int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),writeIntBE,MethodDescriptor((int): void),org.bson.io.OutputBuffer{ public void writeIntBE(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/BasicOutputBuffer),writeLong,MethodDescriptor((long): void),org.bson.io.OutputBuffer{ public void writeLong(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/Bits),<init>,MethodDescriptor((): void),org.bson.io.Bits{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/Bits),readFully,MethodDescriptor((java.io.InputStream, byte[]): void),org.bson.io.Bits{ public static void readFully(java.io.InputStream,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/Bits),readFully,MethodDescriptor((java.io.InputStream, byte[], int): void),org.bson.io.Bits{ public static void readFully(java.io.InputStream,byte[],int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/Bits),readFully,MethodDescriptor((java.io.InputStream, byte[], int, int): void),org.bson.io.Bits{ public static void readFully(java.io.InputStream,byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/Bits),readInt,MethodDescriptor((byte[]): int),org.bson.io.Bits{ public static int readInt(byte[]) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/io/Bits),readInt,MethodDescriptor((byte[], int): int),org.bson.io.Bits{ public static int readInt(byte[],int) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/io/Bits),readInt,MethodDescriptor((java.io.InputStream): int),org.bson.io.Bits{ public static int readInt(java.io.InputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/Bits),readInt,MethodDescriptor((java.io.InputStream, byte[]): int),org.bson.io.Bits{ public static int readInt(java.io.InputStream,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/Bits),readIntBE,MethodDescriptor((byte[], int): int),org.bson.io.Bits{ public static int readIntBE(byte[],int) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/io/Bits),readLong,MethodDescriptor((byte[]): long),org.bson.io.Bits{ public static long readLong(byte[]) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/io/Bits),readLong,MethodDescriptor((byte[], int): long),org.bson.io.Bits{ public static long readLong(byte[],int) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/io/Bits),readLong,MethodDescriptor((java.io.InputStream): long),org.bson.io.Bits{ public static long readLong(java.io.InputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/Bits),readLong,MethodDescriptor((java.io.InputStream, byte[]): long),org.bson.io.Bits{ public static long readLong(java.io.InputStream,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer$1),<init>,MethodDescriptor((org.bson.io.OutputBuffer, java.lang.StringBuilder): void),org.bson.io.OutputBuffer$1{ void <init>(org.bson.io.OutputBuffer,java.lang.StringBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer$1),write,MethodDescriptor((int): void),org.bson.io.OutputBuffer$1{ public void write(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer$2),<init>,MethodDescriptor((org.bson.io.OutputBuffer, java.security.MessageDigest): void),org.bson.io.OutputBuffer$2{ void <init>(org.bson.io.OutputBuffer,java.security.MessageDigest) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer$2),write,MethodDescriptor((byte[], int, int): void),org.bson.io.OutputBuffer$2{ public void write(byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer$2),write,MethodDescriptor((int): void),org.bson.io.OutputBuffer$2{ public void write(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),<init>,MethodDescriptor((): void),org.bson.io.OutputBuffer{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),asString,MethodDescriptor((): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String asString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),asString,MethodDescriptor((java.lang.String): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String asString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),hex,MethodDescriptor((): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String hex() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),md5,MethodDescriptor((): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String md5() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),toByteArray,MethodDescriptor((): byte[]),org.bson.io.OutputBuffer{ public byte[] toByteArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),toString,MethodDescriptor((): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),writeDouble,MethodDescriptor((double): void),org.bson.io.OutputBuffer{ public void writeDouble(double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),writeInt,MethodDescriptor((int): void),org.bson.io.OutputBuffer{ public void writeInt(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),writeInt,MethodDescriptor((int, int): void),org.bson.io.OutputBuffer{ public void writeInt(int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),writeIntBE,MethodDescriptor((int): void),org.bson.io.OutputBuffer{ public void writeIntBE(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/OutputBuffer),writeLong,MethodDescriptor((long): void),org.bson.io.OutputBuffer{ public void writeLong(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$1),<init>,MethodDescriptor((int): void),org.bson.io.PoolOutputBuffer$1{ void <init>(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$1),createNew,MethodDescriptor((): byte[]),org.bson.io.PoolOutputBuffer$1{ protected byte[] createNew() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$1),createNew,MethodDescriptor((): java.lang.Object),org.bson.io.PoolOutputBuffer$1{ protected java.lang.Object createNew() }) => Pure
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$1),done,MethodDescriptor((java.lang.Object): void),org.bson.util.SimplePool{ public void done(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$1),get,MethodDescriptor((): java.lang.Object),org.bson.util.SimplePool{ public java.lang.Object get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$1),ok,MethodDescriptor((java.lang.Object): boolean),org.bson.util.SimplePool{ protected boolean ok(java.lang.Object) }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$Position),<init>,MethodDescriptor((): void),org.bson.io.PoolOutputBuffer$Position{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$Position),getAndInc,MethodDescriptor((): int),org.bson.io.PoolOutputBuffer$Position{ int getAndInc() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$Position),inc,MethodDescriptor((int): void),org.bson.io.PoolOutputBuffer$Position{ void inc(int) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$Position),len,MethodDescriptor((int): int),org.bson.io.PoolOutputBuffer$Position{ int len(int) }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$Position),nextBuffer,MethodDescriptor((): void),org.bson.io.PoolOutputBuffer$Position{ void nextBuffer() }) => DExternallySideEffectFree
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$Position),pos,MethodDescriptor((): int),org.bson.io.PoolOutputBuffer$Position{ int pos() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$Position),reset,MethodDescriptor((): void),org.bson.io.PoolOutputBuffer$Position{ void reset() }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$Position),reset,MethodDescriptor((int): void),org.bson.io.PoolOutputBuffer$Position{ void reset(int) }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$Position),reset,MethodDescriptor((org.bson.io.PoolOutputBuffer$Position): void),org.bson.io.PoolOutputBuffer$Position{ void reset(org.bson.io.PoolOutputBuffer$Position) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer$Position),toString,MethodDescriptor((): java.lang.String),org.bson.io.PoolOutputBuffer$Position{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),<clinit>,MethodDescriptor((): void),org.bson.io.PoolOutputBuffer{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),<init>,MethodDescriptor((): void),org.bson.io.PoolOutputBuffer{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),_afterWrite,MethodDescriptor((): void),org.bson.io.PoolOutputBuffer{ void _afterWrite() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),_cur,MethodDescriptor((): byte[]),org.bson.io.PoolOutputBuffer{ byte[] _cur() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),_get,MethodDescriptor((int): byte[]),org.bson.io.PoolOutputBuffer{ byte[] _get(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),asAscii,MethodDescriptor((): java.lang.String),org.bson.io.PoolOutputBuffer{ public java.lang.String asAscii() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),asString,MethodDescriptor((): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String asString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),asString,MethodDescriptor((java.lang.String): java.lang.String),org.bson.io.PoolOutputBuffer{ public java.lang.String asString(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),getPosition,MethodDescriptor((): int),org.bson.io.PoolOutputBuffer{ public int getPosition() }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),hex,MethodDescriptor((): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String hex() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),md5,MethodDescriptor((): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String md5() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),pipe,MethodDescriptor((java.io.OutputStream): int),org.bson.io.PoolOutputBuffer{ public int pipe(java.io.OutputStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),reset,MethodDescriptor((): void),org.bson.io.PoolOutputBuffer{ public void reset() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),seekEnd,MethodDescriptor((): void),org.bson.io.PoolOutputBuffer{ public void seekEnd() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),seekStart,MethodDescriptor((): void),org.bson.io.PoolOutputBuffer{ public void seekStart() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),setPosition,MethodDescriptor((int): void),org.bson.io.PoolOutputBuffer{ public void setPosition(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),size,MethodDescriptor((): int),org.bson.io.PoolOutputBuffer{ public int size() }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),toByteArray,MethodDescriptor((): byte[]),org.bson.io.OutputBuffer{ public byte[] toByteArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),toString,MethodDescriptor((): java.lang.String),org.bson.io.OutputBuffer{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),write,MethodDescriptor((byte[]): void),org.bson.io.PoolOutputBuffer{ public void write(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),write,MethodDescriptor((byte[], int, int): void),org.bson.io.PoolOutputBuffer{ public void write(byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),write,MethodDescriptor((int): void),org.bson.io.PoolOutputBuffer{ public void write(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),writeDouble,MethodDescriptor((double): void),org.bson.io.OutputBuffer{ public void writeDouble(double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),writeInt,MethodDescriptor((int): void),org.bson.io.OutputBuffer{ public void writeInt(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),writeInt,MethodDescriptor((int, int): void),org.bson.io.OutputBuffer{ public void writeInt(int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),writeIntBE,MethodDescriptor((int): void),org.bson.io.OutputBuffer{ public void writeIntBE(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/PoolOutputBuffer),writeLong,MethodDescriptor((long): void),org.bson.io.OutputBuffer{ public void writeLong(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/UTF8Encoding),<init>,MethodDescriptor((): void),org.bson.io.UTF8Encoding{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/UTF8Encoding),checkByte,MethodDescriptor((int, int, int): void),org.bson.io.UTF8Encoding{ private static void checkByte(int,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/UTF8Encoding),checkMinimal,MethodDescriptor((int, int): void),org.bson.io.UTF8Encoding{ private static void checkMinimal(int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/io/UTF8Encoding),decode,MethodDescriptor((byte[], int, int): java.lang.String),org.bson.io.UTF8Encoding{ public java.lang.String decode(byte[],int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BSONTimestamp),<clinit>,MethodDescriptor((): void),org.bson.types.BSONTimestamp{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BSONTimestamp),<init>,MethodDescriptor((): void),org.bson.types.BSONTimestamp{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BSONTimestamp),<init>,MethodDescriptor((int, int): void),org.bson.types.BSONTimestamp{ public void <init>(int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BSONTimestamp),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.types.BSONTimestamp{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BSONTimestamp),getInc,MethodDescriptor((): int),org.bson.types.BSONTimestamp{ public int getInc() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/BSONTimestamp),getTime,MethodDescriptor((): int),org.bson.types.BSONTimestamp{ public int getTime() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BSONTimestamp),hashCode,MethodDescriptor((): int),org.bson.types.BSONTimestamp{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BSONTimestamp),toString,MethodDescriptor((): java.lang.String),org.bson.types.BSONTimestamp{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),<init>,MethodDescriptor((): void),org.bson.types.BasicBSONList{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),_getInt,MethodDescriptor((java.lang.String): int),org.bson.types.BasicBSONList{ int _getInt(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),_getInt,MethodDescriptor((java.lang.String, boolean): int),org.bson.types.BasicBSONList{ int _getInt(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),containsField,MethodDescriptor((java.lang.String): boolean),org.bson.types.BasicBSONList{ public boolean containsField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),containsKey,MethodDescriptor((java.lang.String): boolean),org.bson.types.BasicBSONList{ public boolean containsKey(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),get,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.types.BasicBSONList{ public java.lang.Object get(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),keySet,MethodDescriptor((): java.util.Set),org.bson.types.BasicBSONList{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),put,MethodDescriptor((int, java.lang.Object): java.lang.Object),org.bson.types.BasicBSONList{ public java.lang.Object put(int,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),put,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),org.bson.types.BasicBSONList{ public java.lang.Object put(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),putAll,MethodDescriptor((java.util.Map): void),org.bson.types.BasicBSONList{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),putAll,MethodDescriptor((org.bson.BSONObject): void),org.bson.types.BasicBSONList{ public void putAll(org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),removeField,MethodDescriptor((java.lang.String): java.lang.Object),org.bson.types.BasicBSONList{ public java.lang.Object removeField(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/BasicBSONList),toMap,MethodDescriptor((): java.util.Map),org.bson.types.BasicBSONList{ public java.util.Map toMap() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Binary),<init>,MethodDescriptor((byte, byte[]): void),org.bson.types.Binary{ public void <init>(byte,byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Binary),<init>,MethodDescriptor((byte[]): void),org.bson.types.Binary{ public void <init>(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Binary),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.types.Binary{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Binary),getData,MethodDescriptor((): byte[]),org.bson.types.Binary{ public byte[] getData() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/types/Binary),getType,MethodDescriptor((): byte),org.bson.types.Binary{ public byte getType() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/Binary),hashCode,MethodDescriptor((): int),org.bson.types.Binary{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Binary),length,MethodDescriptor((): int),org.bson.types.Binary{ public int length() }) => DPure
DefinedMethod(ObjectType(org/bson/types/Code),<init>,MethodDescriptor((java.lang.String): void),org.bson.types.Code{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Code),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.types.Code{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Code),getCode,MethodDescriptor((): java.lang.String),org.bson.types.Code{ public java.lang.String getCode() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/types/Code),hashCode,MethodDescriptor((): int),org.bson.types.Code{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Code),toString,MethodDescriptor((): java.lang.String),org.bson.types.Code{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/CodeWScope),<init>,MethodDescriptor((java.lang.String, org.bson.BSONObject): void),org.bson.types.CodeWScope{ public void <init>(java.lang.String,org.bson.BSONObject) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/CodeWScope),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.types.CodeWScope{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/CodeWScope),getCode,MethodDescriptor((): java.lang.String),org.bson.types.Code{ public java.lang.String getCode() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/types/CodeWScope),getScope,MethodDescriptor((): org.bson.BSONObject),org.bson.types.CodeWScope{ public org.bson.BSONObject getScope() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/types/CodeWScope),hashCode,MethodDescriptor((): int),org.bson.types.CodeWScope{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/CodeWScope),toString,MethodDescriptor((): java.lang.String),org.bson.types.Code{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/MaxKey),<init>,MethodDescriptor((): void),org.bson.types.MaxKey{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/MaxKey),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.types.MaxKey{ public boolean equals(java.lang.Object) }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/MaxKey),hashCode,MethodDescriptor((): int),org.bson.types.MaxKey{ public int hashCode() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/MaxKey),toString,MethodDescriptor((): java.lang.String),org.bson.types.MaxKey{ public java.lang.String toString() }) => Pure
DefinedMethod(ObjectType(org/bson/types/MinKey),<init>,MethodDescriptor((): void),org.bson.types.MinKey{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/MinKey),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.types.MinKey{ public boolean equals(java.lang.Object) }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/MinKey),hashCode,MethodDescriptor((): int),org.bson.types.MinKey{ public int hashCode() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/MinKey),toString,MethodDescriptor((): java.lang.String),org.bson.types.MinKey{ public java.lang.String toString() }) => Pure
DefinedMethod(ObjectType(org/bson/types/ObjectId),<clinit>,MethodDescriptor((): void),org.bson.types.ObjectId{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),<init>,MethodDescriptor((): void),org.bson.types.ObjectId{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),<init>,MethodDescriptor((byte[]): void),org.bson.types.ObjectId{ public void <init>(byte[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),<init>,MethodDescriptor((int, int, int): void),org.bson.types.ObjectId{ public void <init>(int,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),<init>,MethodDescriptor((java.lang.String): void),org.bson.types.ObjectId{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),<init>,MethodDescriptor((java.lang.String, boolean): void),org.bson.types.ObjectId{ public void <init>(java.lang.String,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),<init>,MethodDescriptor((java.util.Date): void),org.bson.types.ObjectId{ public void <init>(java.util.Date) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),<init>,MethodDescriptor((java.util.Date, int): void),org.bson.types.ObjectId{ public void <init>(java.util.Date,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),<init>,MethodDescriptor((java.util.Date, int, int): void),org.bson.types.ObjectId{ public void <init>(java.util.Date,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),_compareUnsigned,MethodDescriptor((int, int): int),org.bson.types.ObjectId{ int _compareUnsigned(int,int) }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/ObjectId),_flip,MethodDescriptor((int): int),org.bson.types.ObjectId{ public static int _flip(int) }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/ObjectId),_inc,MethodDescriptor((): int),org.bson.types.ObjectId{ public int _inc() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/ObjectId),_machine,MethodDescriptor((): int),org.bson.types.ObjectId{ public int _machine() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/ObjectId),_pos,MethodDescriptor((java.lang.String, int): java.lang.String),org.bson.types.ObjectId{ static java.lang.String _pos(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),_time,MethodDescriptor((): int),org.bson.types.ObjectId{ public int _time() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/ObjectId),babbleToMongod,MethodDescriptor((java.lang.String): java.lang.String),org.bson.types.ObjectId{ public static java.lang.String babbleToMongod(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.types.ObjectId{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),get,MethodDescriptor((): org.bson.types.ObjectId),org.bson.types.ObjectId{ public static org.bson.types.ObjectId get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),getCurrentInc,MethodDescriptor((): int),org.bson.types.ObjectId{ public static int getCurrentInc() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),getGenMachineId,MethodDescriptor((): int),org.bson.types.ObjectId{ public static int getGenMachineId() }) => Pure
DefinedMethod(ObjectType(org/bson/types/ObjectId),getInc,MethodDescriptor((): int),org.bson.types.ObjectId{ public int getInc() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/ObjectId),getMachine,MethodDescriptor((): int),org.bson.types.ObjectId{ public int getMachine() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/ObjectId),getTime,MethodDescriptor((): long),org.bson.types.ObjectId{ public long getTime() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/ObjectId),getTimeSecond,MethodDescriptor((): int),org.bson.types.ObjectId{ public int getTimeSecond() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/ObjectId),hashCode,MethodDescriptor((): int),org.bson.types.ObjectId{ public int hashCode() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/types/ObjectId),isNew,MethodDescriptor((): boolean),org.bson.types.ObjectId{ public boolean isNew() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/types/ObjectId),isValid,MethodDescriptor((java.lang.String): boolean),org.bson.types.ObjectId{ public static boolean isValid(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),massageToObjectId,MethodDescriptor((java.lang.Object): org.bson.types.ObjectId),org.bson.types.ObjectId{ public static org.bson.types.ObjectId massageToObjectId(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),notNew,MethodDescriptor((): void),org.bson.types.ObjectId{ public void notNew() }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/types/ObjectId),toByteArray,MethodDescriptor((): byte[]),org.bson.types.ObjectId{ public byte[] toByteArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),toString,MethodDescriptor((): java.lang.String),org.bson.types.ObjectId{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),toStringBabble,MethodDescriptor((): java.lang.String),org.bson.types.ObjectId{ public java.lang.String toStringBabble() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/ObjectId),toStringMongod,MethodDescriptor((): java.lang.String),org.bson.types.ObjectId{ public java.lang.String toStringMongod() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Symbol),<init>,MethodDescriptor((java.lang.String): void),org.bson.types.Symbol{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Symbol),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.types.Symbol{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Symbol),getSymbol,MethodDescriptor((): java.lang.String),org.bson.types.Symbol{ public java.lang.String getSymbol() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/types/Symbol),hashCode,MethodDescriptor((): int),org.bson.types.Symbol{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/types/Symbol),toString,MethodDescriptor((): java.lang.String),org.bson.types.Symbol{ public java.lang.String toString() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),<init>,MethodDescriptor((): void),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ protected void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),add,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean add(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),addAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean addAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),contains,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),containsAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean containsAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),hashCode,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),isEmpty,MethodDescriptor((): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),iterator,MethodDescriptor((): java.util.Iterator),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),size,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),toArray,MethodDescriptor((): java.lang.Object[]),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.Object[] toArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),toArray,MethodDescriptor((java.lang.Object[]): java.lang.Object[]),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.Object[] toArray(java.lang.Object[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$CollectionView),toString,MethodDescriptor((): java.lang.String),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),<init>,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap): void),org.bson.util.AbstractCopyOnWriteMap$EntrySet{ private void <init>(org.bson.util.AbstractCopyOnWriteMap) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),<init>,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap, org.bson.util.AbstractCopyOnWriteMap$1): void),org.bson.util.AbstractCopyOnWriteMap$EntrySet{ void <init>(org.bson.util.AbstractCopyOnWriteMap,org.bson.util.AbstractCopyOnWriteMap$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),add,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean add(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),addAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean addAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),clear,MethodDescriptor((): void),org.bson.util.AbstractCopyOnWriteMap$EntrySet{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),contains,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),containsAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean containsAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),getDelegate,MethodDescriptor((): java.util.Collection),org.bson.util.AbstractCopyOnWriteMap$EntrySet{ java.util.Collection getDelegate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),hashCode,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),isEmpty,MethodDescriptor((): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),iterator,MethodDescriptor((): java.util.Iterator),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),remove,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$EntrySet{ public boolean remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),removeAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$EntrySet{ public boolean removeAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),retainAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$EntrySet{ public boolean retainAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),size,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),toArray,MethodDescriptor((): java.lang.Object[]),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.Object[] toArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),toArray,MethodDescriptor((java.lang.Object[]): java.lang.Object[]),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.Object[] toArray(java.lang.Object[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$EntrySet),toString,MethodDescriptor((): java.lang.String),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Immutable),<init>,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap): void),org.bson.util.AbstractCopyOnWriteMap$Immutable{ void <init>(org.bson.util.AbstractCopyOnWriteMap) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Immutable),entrySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap$Immutable{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Immutable),keySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap$Immutable{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Immutable),values,MethodDescriptor((): java.util.Collection),org.bson.util.AbstractCopyOnWriteMap$Immutable{ public java.util.Collection values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),<init>,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap): void),org.bson.util.AbstractCopyOnWriteMap$KeySet{ private void <init>(org.bson.util.AbstractCopyOnWriteMap) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),<init>,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap, org.bson.util.AbstractCopyOnWriteMap$1): void),org.bson.util.AbstractCopyOnWriteMap$KeySet{ void <init>(org.bson.util.AbstractCopyOnWriteMap,org.bson.util.AbstractCopyOnWriteMap$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),add,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean add(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),addAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean addAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),clear,MethodDescriptor((): void),org.bson.util.AbstractCopyOnWriteMap$KeySet{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),contains,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),containsAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean containsAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),getDelegate,MethodDescriptor((): java.util.Collection),org.bson.util.AbstractCopyOnWriteMap$KeySet{ java.util.Collection getDelegate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),hashCode,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),isEmpty,MethodDescriptor((): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),iterator,MethodDescriptor((): java.util.Iterator),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),remove,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$KeySet{ public boolean remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),removeAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$KeySet{ public boolean removeAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),retainAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$KeySet{ public boolean retainAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),size,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),toArray,MethodDescriptor((): java.lang.Object[]),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.Object[] toArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),toArray,MethodDescriptor((java.lang.Object[]): java.lang.Object[]),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.Object[] toArray(java.lang.Object[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$KeySet),toString,MethodDescriptor((): java.lang.String),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Mutable),<init>,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap): void),org.bson.util.AbstractCopyOnWriteMap$Mutable{ void <init>(org.bson.util.AbstractCopyOnWriteMap) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Mutable),entrySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap$Mutable{ public java.util.Set entrySet() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Mutable),keySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap$Mutable{ public java.util.Set keySet() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Mutable),values,MethodDescriptor((): java.util.Collection),org.bson.util.AbstractCopyOnWriteMap$Mutable{ public java.util.Collection values() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$UnmodifiableIterator),<init>,MethodDescriptor((java.util.Iterator): void),org.bson.util.AbstractCopyOnWriteMap$UnmodifiableIterator{ public void <init>(java.util.Iterator) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$UnmodifiableIterator),hasNext,MethodDescriptor((): boolean),org.bson.util.AbstractCopyOnWriteMap$UnmodifiableIterator{ public boolean hasNext() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$UnmodifiableIterator),next,MethodDescriptor((): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap$UnmodifiableIterator{ public java.lang.Object next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$UnmodifiableIterator),remove,MethodDescriptor((): void),org.bson.util.AbstractCopyOnWriteMap$UnmodifiableIterator{ public void remove() }) => DPure
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),<init>,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap): void),org.bson.util.AbstractCopyOnWriteMap$Values{ private void <init>(org.bson.util.AbstractCopyOnWriteMap) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),<init>,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap, org.bson.util.AbstractCopyOnWriteMap$1): void),org.bson.util.AbstractCopyOnWriteMap$Values{ void <init>(org.bson.util.AbstractCopyOnWriteMap,org.bson.util.AbstractCopyOnWriteMap$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),add,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean add(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),addAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean addAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),clear,MethodDescriptor((): void),org.bson.util.AbstractCopyOnWriteMap$Values{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),contains,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),containsAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean containsAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),getDelegate,MethodDescriptor((): java.util.Collection),org.bson.util.AbstractCopyOnWriteMap$Values{ java.util.Collection getDelegate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),hashCode,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),isEmpty,MethodDescriptor((): boolean),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),iterator,MethodDescriptor((): java.util.Iterator),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),remove,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap$Values{ public boolean remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),removeAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$Values{ public boolean removeAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),retainAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.AbstractCopyOnWriteMap$Values{ public boolean retainAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),size,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),toArray,MethodDescriptor((): java.lang.Object[]),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.Object[] toArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),toArray,MethodDescriptor((java.lang.Object[]): java.lang.Object[]),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.Object[] toArray(java.lang.Object[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$Values),toString,MethodDescriptor((): java.lang.String),org.bson.util.AbstractCopyOnWriteMap$CollectionView{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$View$Type$1),<init>,MethodDescriptor((java.lang.String, int): void),org.bson.util.AbstractCopyOnWriteMap$View$Type$1{ void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$View$Type$1),get,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap): org.bson.util.AbstractCopyOnWriteMap$View),org.bson.util.AbstractCopyOnWriteMap$View$Type$1{ org.bson.util.AbstractCopyOnWriteMap$View get(org.bson.util.AbstractCopyOnWriteMap) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$View$Type$2),<init>,MethodDescriptor((java.lang.String, int): void),org.bson.util.AbstractCopyOnWriteMap$View$Type$2{ void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$View$Type$2),get,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap): org.bson.util.AbstractCopyOnWriteMap$View),org.bson.util.AbstractCopyOnWriteMap$View$Type$2{ org.bson.util.AbstractCopyOnWriteMap$View get(org.bson.util.AbstractCopyOnWriteMap) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$View$Type),<clinit>,MethodDescriptor((): void),org.bson.util.AbstractCopyOnWriteMap$View$Type{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$View$Type),<init>,MethodDescriptor((java.lang.String, int): void),org.bson.util.AbstractCopyOnWriteMap$View$Type{ private void <init>(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$View$Type),<init>,MethodDescriptor((java.lang.String, int, org.bson.util.AbstractCopyOnWriteMap$1): void),org.bson.util.AbstractCopyOnWriteMap$View$Type{ void <init>(java.lang.String,int,org.bson.util.AbstractCopyOnWriteMap$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$View$Type),valueOf,MethodDescriptor((java.lang.String): org.bson.util.AbstractCopyOnWriteMap$View$Type),org.bson.util.AbstractCopyOnWriteMap$View$Type{ public static org.bson.util.AbstractCopyOnWriteMap$View$Type valueOf(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$View$Type),values,MethodDescriptor((): org.bson.util.AbstractCopyOnWriteMap$View$Type[]),org.bson.util.AbstractCopyOnWriteMap$View$Type{ public static org.bson.util.AbstractCopyOnWriteMap$View$Type[] values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap$View),<init>,MethodDescriptor((): void),org.bson.util.AbstractCopyOnWriteMap$View{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),<init>,MethodDescriptor((java.util.Map, org.bson.util.AbstractCopyOnWriteMap$View$Type): void),org.bson.util.AbstractCopyOnWriteMap{ protected void <init>(java.util.Map,org.bson.util.AbstractCopyOnWriteMap$View$Type) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),access$000,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap): java.util.Map),org.bson.util.AbstractCopyOnWriteMap{ static java.util.Map access$000(org.bson.util.AbstractCopyOnWriteMap) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),access$100,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap): java.util.concurrent.locks.Lock),org.bson.util.AbstractCopyOnWriteMap{ static java.util.concurrent.locks.Lock access$100(org.bson.util.AbstractCopyOnWriteMap) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),clear,MethodDescriptor((): void),org.bson.util.AbstractCopyOnWriteMap{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),containsKey,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean containsKey(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),containsValue,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean containsValue(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),copy,MethodDescriptor((): java.util.Map),org.bson.util.AbstractCopyOnWriteMap{ protected java.util.Map copy() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),entrySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),equals,MethodDescriptor((java.lang.Object, java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ private boolean equals(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),get,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object get(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),getDelegate,MethodDescriptor((): java.util.Map),org.bson.util.AbstractCopyOnWriteMap{ protected java.util.Map getDelegate() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),hashCode,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),isEmpty,MethodDescriptor((): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),keySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),put,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object put(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),putAll,MethodDescriptor((java.util.Map): void),org.bson.util.AbstractCopyOnWriteMap{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),putIfAbsent,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),remove,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),remove,MethodDescriptor((java.lang.Object, java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean remove(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),replace,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object replace(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),replace,MethodDescriptor((java.lang.Object, java.lang.Object, java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),set,MethodDescriptor((java.util.Map): void),org.bson.util.AbstractCopyOnWriteMap{ protected void set(java.util.Map) }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),size,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),toString,MethodDescriptor((): java.lang.String),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/AbstractCopyOnWriteMap),values,MethodDescriptor((): java.util.Collection),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Collection values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/Assertions$NullArgumentException),<init>,MethodDescriptor((java.lang.String): void),org.bson.util.Assertions$NullArgumentException{ void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/Assertions),<init>,MethodDescriptor((): void),org.bson.util.Assertions{ private void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/Assertions),isTrue,MethodDescriptor((java.lang.String, boolean): void),org.bson.util.Assertions{ public static void isTrue(java.lang.String,boolean) }) => DPure
DefinedMethod(ObjectType(org/bson/util/Assertions),notNull,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),org.bson.util.Assertions{ public static java.lang.Object notNull(java.lang.String,java.lang.Object) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/util/ClassAncestry),<clinit>,MethodDescriptor((): void),org.bson.util.ClassAncestry{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassAncestry),<init>,MethodDescriptor((): void),org.bson.util.ClassAncestry{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassAncestry),computeAncestry,MethodDescriptor((java.lang.Class): java.util.List),org.bson.util.ClassAncestry{ private static java.util.List computeAncestry(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassAncestry),computeAncestry,MethodDescriptor((java.lang.Class, java.util.List): void),org.bson.util.ClassAncestry{ private static void computeAncestry(java.lang.Class,java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassAncestry),getAncestry,MethodDescriptor((java.lang.Class): java.util.List),org.bson.util.ClassAncestry{ public static java.util.List getAncestry(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassAncestry),getClassAncestryCache,MethodDescriptor((): java.util.concurrent.ConcurrentMap),org.bson.util.ClassAncestry{ private static java.util.concurrent.ConcurrentMap getClassAncestryCache() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/util/ClassMap$ComputeFunction),<init>,MethodDescriptor((org.bson.util.ClassMap): void),org.bson.util.ClassMap$ComputeFunction{ private void <init>(org.bson.util.ClassMap) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassMap$ComputeFunction),<init>,MethodDescriptor((org.bson.util.ClassMap, org.bson.util.ClassMap$1): void),org.bson.util.ClassMap$ComputeFunction{ void <init>(org.bson.util.ClassMap,org.bson.util.ClassMap$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassMap$ComputeFunction),apply,MethodDescriptor((java.lang.Class): java.lang.Object),org.bson.util.ClassMap$ComputeFunction{ public java.lang.Object apply(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassMap$ComputeFunction),apply,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.ClassMap$ComputeFunction{ public java.lang.Object apply(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassMap),<init>,MethodDescriptor((): void),org.bson.util.ClassMap{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassMap),access$000,MethodDescriptor((org.bson.util.ClassMap): java.util.Map),org.bson.util.ClassMap{ static java.util.Map access$000(org.bson.util.ClassMap) }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/util/ClassMap),clear,MethodDescriptor((): void),org.bson.util.ClassMap{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassMap),get,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.ClassMap{ public java.lang.Object get(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassMap),getAncestry,MethodDescriptor((java.lang.Class): java.util.List),org.bson.util.ClassMap{ public static java.util.List getAncestry(java.lang.Class) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassMap),isEmpty,MethodDescriptor((): boolean),org.bson.util.ClassMap{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassMap),put,MethodDescriptor((java.lang.Class, java.lang.Object): java.lang.Object),org.bson.util.ClassMap{ public java.lang.Object put(java.lang.Class,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassMap),remove,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.ClassMap{ public java.lang.Object remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ClassMap),size,MethodDescriptor((): int),org.bson.util.ClassMap{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),<init>,MethodDescriptor((java.util.concurrent.ConcurrentMap, org.bson.util.Function): void),org.bson.util.ComputingMap{ void <init>(java.util.concurrent.ConcurrentMap,org.bson.util.Function) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),apply,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.ComputingMap{ public java.lang.Object apply(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),clear,MethodDescriptor((): void),org.bson.util.ComputingMap{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),containsKey,MethodDescriptor((java.lang.Object): boolean),org.bson.util.ComputingMap{ public boolean containsKey(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),containsValue,MethodDescriptor((java.lang.Object): boolean),org.bson.util.ComputingMap{ public boolean containsValue(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),create,MethodDescriptor((org.bson.util.Function): java.util.Map),org.bson.util.ComputingMap{ public static java.util.Map create(org.bson.util.Function) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),entrySet,MethodDescriptor((): java.util.Set),org.bson.util.ComputingMap{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.util.ComputingMap{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),get,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.ComputingMap{ public java.lang.Object get(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),hashCode,MethodDescriptor((): int),org.bson.util.ComputingMap{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),isEmpty,MethodDescriptor((): boolean),org.bson.util.ComputingMap{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),keySet,MethodDescriptor((): java.util.Set),org.bson.util.ComputingMap{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),put,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.ComputingMap{ public java.lang.Object put(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),putAll,MethodDescriptor((java.util.Map): void),org.bson.util.ComputingMap{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),putIfAbsent,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.ComputingMap{ public java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),remove,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.ComputingMap{ public java.lang.Object remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),remove,MethodDescriptor((java.lang.Object, java.lang.Object): boolean),org.bson.util.ComputingMap{ public boolean remove(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),replace,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.ComputingMap{ public java.lang.Object replace(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),replace,MethodDescriptor((java.lang.Object, java.lang.Object, java.lang.Object): boolean),org.bson.util.ComputingMap{ public boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),size,MethodDescriptor((): int),org.bson.util.ComputingMap{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/ComputingMap),values,MethodDescriptor((): java.util.Collection),org.bson.util.ComputingMap{ public java.util.Collection values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Builder),<init>,MethodDescriptor((): void),org.bson.util.CopyOnWriteMap$Builder{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Builder),addAll,MethodDescriptor((java.util.Map): org.bson.util.CopyOnWriteMap$Builder),org.bson.util.CopyOnWriteMap$Builder{ public org.bson.util.CopyOnWriteMap$Builder addAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Builder),liveViews,MethodDescriptor((): org.bson.util.CopyOnWriteMap$Builder),org.bson.util.CopyOnWriteMap$Builder{ public org.bson.util.CopyOnWriteMap$Builder liveViews() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Builder),newHashMap,MethodDescriptor((): org.bson.util.CopyOnWriteMap),org.bson.util.CopyOnWriteMap$Builder{ public org.bson.util.CopyOnWriteMap newHashMap() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Builder),newLinkedMap,MethodDescriptor((): org.bson.util.CopyOnWriteMap),org.bson.util.CopyOnWriteMap$Builder{ public org.bson.util.CopyOnWriteMap newLinkedMap() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Builder),stableViews,MethodDescriptor((): org.bson.util.CopyOnWriteMap$Builder),org.bson.util.CopyOnWriteMap$Builder{ public org.bson.util.CopyOnWriteMap$Builder stableViews() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),<init>,MethodDescriptor((java.util.Map, org.bson.util.AbstractCopyOnWriteMap$View$Type): void),org.bson.util.CopyOnWriteMap$Hash{ void <init>(java.util.Map,org.bson.util.AbstractCopyOnWriteMap$View$Type) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),clear,MethodDescriptor((): void),org.bson.util.AbstractCopyOnWriteMap{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),containsKey,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean containsKey(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),containsValue,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean containsValue(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),copy,MethodDescriptor((): java.util.Map),org.bson.util.AbstractCopyOnWriteMap{ protected java.util.Map copy() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),copy,MethodDescriptor((java.util.Map): java.util.Map),org.bson.util.CopyOnWriteMap$Hash{ public java.util.Map copy(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),entrySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),get,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object get(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),getDelegate,MethodDescriptor((): java.util.Map),org.bson.util.AbstractCopyOnWriteMap{ protected java.util.Map getDelegate() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),hashCode,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),isEmpty,MethodDescriptor((): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),keySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),put,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object put(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),putAll,MethodDescriptor((java.util.Map): void),org.bson.util.AbstractCopyOnWriteMap{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),putIfAbsent,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),remove,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),remove,MethodDescriptor((java.lang.Object, java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean remove(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),replace,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object replace(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),replace,MethodDescriptor((java.lang.Object, java.lang.Object, java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),set,MethodDescriptor((java.util.Map): void),org.bson.util.AbstractCopyOnWriteMap{ protected void set(java.util.Map) }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),size,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),toString,MethodDescriptor((): java.lang.String),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Hash),values,MethodDescriptor((): java.util.Collection),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Collection values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),<init>,MethodDescriptor((java.util.Map, org.bson.util.AbstractCopyOnWriteMap$View$Type): void),org.bson.util.CopyOnWriteMap$Linked{ void <init>(java.util.Map,org.bson.util.AbstractCopyOnWriteMap$View$Type) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),clear,MethodDescriptor((): void),org.bson.util.AbstractCopyOnWriteMap{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),containsKey,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean containsKey(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),containsValue,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean containsValue(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),copy,MethodDescriptor((): java.util.Map),org.bson.util.AbstractCopyOnWriteMap{ protected java.util.Map copy() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),copy,MethodDescriptor((java.util.Map): java.util.Map),org.bson.util.CopyOnWriteMap$Linked{ public java.util.Map copy(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),entrySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),get,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object get(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),getDelegate,MethodDescriptor((): java.util.Map),org.bson.util.AbstractCopyOnWriteMap{ protected java.util.Map getDelegate() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),hashCode,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),isEmpty,MethodDescriptor((): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),keySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),put,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object put(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),putAll,MethodDescriptor((java.util.Map): void),org.bson.util.AbstractCopyOnWriteMap{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),putIfAbsent,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),remove,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),remove,MethodDescriptor((java.lang.Object, java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean remove(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),replace,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object replace(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),replace,MethodDescriptor((java.lang.Object, java.lang.Object, java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),set,MethodDescriptor((java.util.Map): void),org.bson.util.AbstractCopyOnWriteMap{ protected void set(java.util.Map) }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),size,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),toString,MethodDescriptor((): java.lang.String),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap$Linked),values,MethodDescriptor((): java.util.Collection),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Collection values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),<init>,MethodDescriptor((): void),org.bson.util.CopyOnWriteMap{ protected void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),<init>,MethodDescriptor((java.util.Map): void),org.bson.util.CopyOnWriteMap{ protected void <init>(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),<init>,MethodDescriptor((java.util.Map, org.bson.util.AbstractCopyOnWriteMap$View$Type): void),org.bson.util.CopyOnWriteMap{ protected void <init>(java.util.Map,org.bson.util.AbstractCopyOnWriteMap$View$Type) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),<init>,MethodDescriptor((org.bson.util.AbstractCopyOnWriteMap$View$Type): void),org.bson.util.CopyOnWriteMap{ protected void <init>(org.bson.util.AbstractCopyOnWriteMap$View$Type) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),builder,MethodDescriptor((): org.bson.util.CopyOnWriteMap$Builder),org.bson.util.CopyOnWriteMap{ public static org.bson.util.CopyOnWriteMap$Builder builder() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),clear,MethodDescriptor((): void),org.bson.util.AbstractCopyOnWriteMap{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),containsKey,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean containsKey(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),containsValue,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean containsValue(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),copy,MethodDescriptor((): java.util.Map),org.bson.util.AbstractCopyOnWriteMap{ protected java.util.Map copy() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),entrySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),equals,MethodDescriptor((java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),get,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object get(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),getDelegate,MethodDescriptor((): java.util.Map),org.bson.util.AbstractCopyOnWriteMap{ protected java.util.Map getDelegate() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),hashCode,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),isEmpty,MethodDescriptor((): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),keySet,MethodDescriptor((): java.util.Set),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),newHashMap,MethodDescriptor((): org.bson.util.CopyOnWriteMap),org.bson.util.CopyOnWriteMap{ public static org.bson.util.CopyOnWriteMap newHashMap() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),newHashMap,MethodDescriptor((java.util.Map): org.bson.util.CopyOnWriteMap),org.bson.util.CopyOnWriteMap{ public static org.bson.util.CopyOnWriteMap newHashMap(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),newLinkedMap,MethodDescriptor((): org.bson.util.CopyOnWriteMap),org.bson.util.CopyOnWriteMap{ public static org.bson.util.CopyOnWriteMap newLinkedMap() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),newLinkedMap,MethodDescriptor((java.util.Map): org.bson.util.CopyOnWriteMap),org.bson.util.CopyOnWriteMap{ public static org.bson.util.CopyOnWriteMap newLinkedMap(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),put,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object put(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),putAll,MethodDescriptor((java.util.Map): void),org.bson.util.AbstractCopyOnWriteMap{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),putIfAbsent,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),remove,MethodDescriptor((java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object remove(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),remove,MethodDescriptor((java.lang.Object, java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean remove(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),replace,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.Object replace(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),replace,MethodDescriptor((java.lang.Object, java.lang.Object, java.lang.Object): boolean),org.bson.util.AbstractCopyOnWriteMap{ public boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),set,MethodDescriptor((java.util.Map): void),org.bson.util.AbstractCopyOnWriteMap{ protected void set(java.util.Map) }) => ExternallyPure
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),size,MethodDescriptor((): int),org.bson.util.AbstractCopyOnWriteMap{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),toString,MethodDescriptor((): java.lang.String),org.bson.util.AbstractCopyOnWriteMap{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/CopyOnWriteMap),values,MethodDescriptor((): java.util.Collection),org.bson.util.AbstractCopyOnWriteMap{ public java.util.Collection values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/SimplePool),<init>,MethodDescriptor((): void),org.bson.util.SimplePool{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/SimplePool),<init>,MethodDescriptor((int): void),org.bson.util.SimplePool{ public void <init>(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/SimplePool),done,MethodDescriptor((java.lang.Object): void),org.bson.util.SimplePool{ public void done(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/SimplePool),get,MethodDescriptor((): java.lang.Object),org.bson.util.SimplePool{ public java.lang.Object get() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/SimplePool),ok,MethodDescriptor((java.lang.Object): boolean),org.bson.util.SimplePool{ protected boolean ok(java.lang.Object) }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/util/StringRangeSet$1),<init>,MethodDescriptor((org.bson.util.StringRangeSet): void),org.bson.util.StringRangeSet$1{ void <init>(org.bson.util.StringRangeSet) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/StringRangeSet$1),hasNext,MethodDescriptor((): boolean),org.bson.util.StringRangeSet$1{ public boolean hasNext() }) => DSideEffectFree
DefinedMethod(ObjectType(org/bson/util/StringRangeSet$1),next,MethodDescriptor((): java.lang.Object),org.bson.util.StringRangeSet$1{ public java.lang.Object next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/StringRangeSet$1),next,MethodDescriptor((): java.lang.String),org.bson.util.StringRangeSet$1{ public java.lang.String next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/StringRangeSet$1),remove,MethodDescriptor((): void),org.bson.util.StringRangeSet$1{ public void remove() }) => DPure
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),<clinit>,MethodDescriptor((): void),org.bson.util.StringRangeSet{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),<init>,MethodDescriptor((int): void),org.bson.util.StringRangeSet{ public void <init>(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),access$000,MethodDescriptor((org.bson.util.StringRangeSet): int),org.bson.util.StringRangeSet{ static int access$000(org.bson.util.StringRangeSet) }) => DPure
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),access$100,MethodDescriptor((): java.lang.String[]),org.bson.util.StringRangeSet{ static java.lang.String[] access$100() }) => SideEffectFree
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),add,MethodDescriptor((java.lang.Object): boolean),org.bson.util.StringRangeSet{ public boolean add(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),add,MethodDescriptor((java.lang.String): boolean),org.bson.util.StringRangeSet{ public boolean add(java.lang.String) }) => DPure
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),addAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.StringRangeSet{ public boolean addAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),clear,MethodDescriptor((): void),org.bson.util.StringRangeSet{ public void clear() }) => DPure
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),contains,MethodDescriptor((java.lang.Object): boolean),org.bson.util.StringRangeSet{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),containsAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.StringRangeSet{ public boolean containsAll(java.util.Collection) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),isEmpty,MethodDescriptor((): boolean),org.bson.util.StringRangeSet{ public boolean isEmpty() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),iterator,MethodDescriptor((): java.util.Iterator),org.bson.util.StringRangeSet{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),remove,MethodDescriptor((java.lang.Object): boolean),org.bson.util.StringRangeSet{ public boolean remove(java.lang.Object) }) => DPure
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),removeAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.StringRangeSet{ public boolean removeAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),retainAll,MethodDescriptor((java.util.Collection): boolean),org.bson.util.StringRangeSet{ public boolean retainAll(java.util.Collection) }) => DPure
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),size,MethodDescriptor((): int),org.bson.util.StringRangeSet{ public int size() }) => CompileTimePure
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),toArray,MethodDescriptor((): java.lang.Object[]),org.bson.util.StringRangeSet{ public java.lang.Object[] toArray() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/bson/util/StringRangeSet),toArray,MethodDescriptor((java.lang.Object[]): java.lang.Object[]),org.bson.util.StringRangeSet{ public java.lang.Object[] toArray(java.lang.Object[]) }) => DPure
