DefinedMethod(ObjectType(example/test1/HungryClient),<init>,MethodDescriptor((example.test1.Restaurant): void),example.test1.HungryClient{ public void <init>(example.test1.Restaurant) }) => Pure
DefinedMethod(ObjectType(example/test1/HungryClient),eatPizza,MethodDescriptor((): void),example.test1.HungryClient{ public void eatPizza() }) => ImpureByAnalysis
DefinedMethod(ObjectType(example/test1/HungryClient),eatSteak,MethodDescriptor((): void),example.test1.HungryClient{ public void eatSteak() }) => ImpureByAnalysis
DefinedMethod(ObjectType(example/test1/Restaurant),<init>,MethodDescriptor((): void),example.test1.Restaurant{ public void <init>() }) => Pure
DefinedMethod(ObjectType(example/test1/Restaurant),orderCoke,MethodDescriptor((): void),example.test1.Restaurant{ public void orderCoke() }) => Pure
DefinedMethod(ObjectType(example/test1/Restaurant),orderPizza,MethodDescriptor((): void),example.test1.Restaurant{ public void orderPizza() }) => Pure
DefinedMethod(ObjectType(example/test1/Restaurant),orderSteak,MethodDescriptor((): void),example.test1.Restaurant{ public void orderSteak() }) => Pure
DefinedMethod(ObjectType(example/test1/Restaurant),orderWater,MethodDescriptor((): void),example.test1.Restaurant{ public void orderWater() }) => Pure
DefinedMethod(ObjectType(example/test1/ThirstyClient),<init>,MethodDescriptor((example.test1.Restaurant): void),example.test1.ThirstyClient{ public void <init>(example.test1.Restaurant) }) => Pure
DefinedMethod(ObjectType(example/test1/ThirstyClient),drinkCoke,MethodDescriptor((): void),example.test1.ThirstyClient{ public void drinkCoke() }) => ImpureByAnalysis
DefinedMethod(ObjectType(example/test1/ThirstyClient),drinkWater,MethodDescriptor((): void),example.test1.ThirstyClient{ public void drinkWater() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/abstractFactory/Application),<init>,MethodDescriptor((pattern.abstractFactory.GUIFactory): void),pattern.abstractFactory.Application{ public void <init>(pattern.abstractFactory.GUIFactory) }) => DPure
DefinedMethod(ObjectType(pattern/abstractFactory/ApplicationRunner),<init>,MethodDescriptor((): void),pattern.abstractFactory.ApplicationRunner{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/abstractFactory/ApplicationRunner),createOsSpecificFactory,MethodDescriptor((): pattern.abstractFactory.GUIFactory),pattern.abstractFactory.ApplicationRunner{ public static pattern.abstractFactory.GUIFactory createOsSpecificFactory() }) => Pure
DefinedMethod(ObjectType(pattern/abstractFactory/ApplicationRunner),main,MethodDescriptor((java.lang.String[]): void),pattern.abstractFactory.ApplicationRunner{ public static void main(java.lang.String[]) }) => DPure
DefinedMethod(ObjectType(pattern/abstractFactory/OSXButton),<init>,MethodDescriptor((): void),pattern.abstractFactory.OSXButton{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/abstractFactory/OSXButton),paint,MethodDescriptor((): void),pattern.abstractFactory.OSXButton{ public void paint() }) => DPure
DefinedMethod(ObjectType(pattern/abstractFactory/OSXFactory),<init>,MethodDescriptor((): void),pattern.abstractFactory.OSXFactory{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/abstractFactory/OSXFactory),createButton,MethodDescriptor((): pattern.abstractFactory.Button),pattern.abstractFactory.OSXFactory{ public pattern.abstractFactory.Button createButton() }) => Pure
DefinedMethod(ObjectType(pattern/abstractFactory/WinButton),<init>,MethodDescriptor((): void),pattern.abstractFactory.WinButton{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/abstractFactory/WinButton),paint,MethodDescriptor((): void),pattern.abstractFactory.WinButton{ public void paint() }) => DPure
DefinedMethod(ObjectType(pattern/abstractFactory/WinFactory),<init>,MethodDescriptor((): void),pattern.abstractFactory.WinFactory{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/abstractFactory/WinFactory),createButton,MethodDescriptor((): pattern.abstractFactory.Button),pattern.abstractFactory.WinFactory{ public pattern.abstractFactory.Button createButton() }) => Pure
DefinedMethod(ObjectType(pattern/adapter/AdapteeClass),<init>,MethodDescriptor((): void),pattern.adapter.AdapteeClass{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/adapter/AdapteeClass),adapteeClassMethod,MethodDescriptor((): void),pattern.adapter.AdapteeClass{ public void adapteeClassMethod() }) => DPure
DefinedMethod(ObjectType(pattern/adapter/AdapteeClassToClientInterfaceAdapter),<init>,MethodDescriptor((pattern.adapter.AdapteeClass): void),pattern.adapter.AdapteeClassToClientInterfaceAdapter{ public void <init>(pattern.adapter.AdapteeClass) }) => Pure
DefinedMethod(ObjectType(pattern/adapter/AdapteeClassToClientInterfaceAdapter),clientClassMethod,MethodDescriptor((): void),pattern.adapter.AdapteeClassToClientInterfaceAdapter{ public void clientClassMethod() }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/bridge/BridgePattern),<init>,MethodDescriptor((): void),pattern.bridge.BridgePattern{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/bridge/BridgePattern),main,MethodDescriptor((java.lang.String[]): void),pattern.bridge.BridgePattern{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/bridge/CircleShape),<init>,MethodDescriptor((double, double, double, pattern.bridge.DrawingAPI): void),pattern.bridge.CircleShape{ public void <init>(double,double,double,pattern.bridge.DrawingAPI) }) => Pure
DefinedMethod(ObjectType(pattern/bridge/CircleShape),draw,MethodDescriptor((): void),pattern.bridge.CircleShape{ public void draw() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/bridge/CircleShape),resizeByPercentage,MethodDescriptor((double): void),pattern.bridge.CircleShape{ public void resizeByPercentage(double) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(pattern/bridge/DrawingAPI1),<init>,MethodDescriptor((): void),pattern.bridge.DrawingAPI1{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/bridge/DrawingAPI1),drawCircle,MethodDescriptor((double, double, double): void),pattern.bridge.DrawingAPI1{ public void drawCircle(double,double,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/bridge/DrawingAPI2),<init>,MethodDescriptor((): void),pattern.bridge.DrawingAPI2{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/bridge/DrawingAPI2),drawCircle,MethodDescriptor((double, double, double): void),pattern.bridge.DrawingAPI2{ public void drawCircle(double,double,double) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/bridge/Shape),<init>,MethodDescriptor((pattern.bridge.DrawingAPI): void),pattern.bridge.Shape{ protected void <init>(pattern.bridge.DrawingAPI) }) => Pure
DefinedMethod(ObjectType(pattern/builder/Pizza),<init>,MethodDescriptor((pattern.builder.PizzaBuilder): void),pattern.builder.Pizza{ void <init>(pattern.builder.PizzaBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/builder/Pizza),getDough,MethodDescriptor((): java.lang.String),pattern.builder.Pizza{ public java.lang.String getDough() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/builder/Pizza),getSauce,MethodDescriptor((): java.lang.String),pattern.builder.Pizza{ public java.lang.String getSauce() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/builder/Pizza),getTopping,MethodDescriptor((): java.lang.String),pattern.builder.Pizza{ public java.lang.String getTopping() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/builder/Pizza),toString,MethodDescriptor((): java.lang.String),pattern.builder.Pizza{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/builder/PizzaBuilder),<init>,MethodDescriptor((): void),pattern.builder.PizzaBuilder{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/builder/PizzaBuilder),build,MethodDescriptor((): pattern.builder.Pizza),pattern.builder.PizzaBuilder{ public pattern.builder.Pizza build() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/builder/PizzaBuilder),getDough,MethodDescriptor((): java.lang.String),pattern.builder.PizzaBuilder{ public java.lang.String getDough() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/builder/PizzaBuilder),getSauce,MethodDescriptor((): java.lang.String),pattern.builder.PizzaBuilder{ public java.lang.String getSauce() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/builder/PizzaBuilder),getTopping,MethodDescriptor((): java.lang.String),pattern.builder.PizzaBuilder{ public java.lang.String getTopping() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/builder/PizzaBuilder),setDough,MethodDescriptor((java.lang.String): pattern.builder.PizzaBuilder),pattern.builder.PizzaBuilder{ public pattern.builder.PizzaBuilder setDough(java.lang.String) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(pattern/builder/PizzaBuilder),setSauce,MethodDescriptor((java.lang.String): pattern.builder.PizzaBuilder),pattern.builder.PizzaBuilder{ public pattern.builder.PizzaBuilder setSauce(java.lang.String) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(pattern/builder/PizzaBuilder),setTopping,MethodDescriptor((java.lang.String): pattern.builder.PizzaBuilder),pattern.builder.PizzaBuilder{ public pattern.builder.PizzaBuilder setTopping(java.lang.String) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(pattern/builder/PizzaBuilderExample),<init>,MethodDescriptor((): void),pattern.builder.PizzaBuilderExample{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/builder/PizzaBuilderExample),main,MethodDescriptor((java.lang.String[]): void),pattern.builder.PizzaBuilderExample{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/ChainOfResponsibilityExample),<init>,MethodDescriptor((): void),pattern.chainofresponsibility.example1.ChainOfResponsibilityExample{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/ChainOfResponsibilityExample),main,MethodDescriptor((java.lang.String[]): void),pattern.chainofresponsibility.example1.ChainOfResponsibilityExample{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/EmailLogger),<init>,MethodDescriptor((int): void),pattern.chainofresponsibility.example1.EmailLogger{ public void <init>(int) }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/EmailLogger),message,MethodDescriptor((java.lang.String, int): void),pattern.chainofresponsibility.example1.Logger{ public void message(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/EmailLogger),setNext,MethodDescriptor((pattern.chainofresponsibility.example1.Logger): pattern.chainofresponsibility.example1.Logger),pattern.chainofresponsibility.example1.Logger{ public pattern.chainofresponsibility.example1.Logger setNext(pattern.chainofresponsibility.example1.Logger) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/EmailLogger),writeMessage,MethodDescriptor((java.lang.String): void),pattern.chainofresponsibility.example1.EmailLogger{ protected void writeMessage(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/Logger),<clinit>,MethodDescriptor((): void),pattern.chainofresponsibility.example1.Logger{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/Logger),<init>,MethodDescriptor((): void),pattern.chainofresponsibility.example1.Logger{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/Logger),message,MethodDescriptor((java.lang.String, int): void),pattern.chainofresponsibility.example1.Logger{ public void message(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/Logger),setNext,MethodDescriptor((pattern.chainofresponsibility.example1.Logger): pattern.chainofresponsibility.example1.Logger),pattern.chainofresponsibility.example1.Logger{ public pattern.chainofresponsibility.example1.Logger setNext(pattern.chainofresponsibility.example1.Logger) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/StderrLogger),<init>,MethodDescriptor((int): void),pattern.chainofresponsibility.example1.StderrLogger{ public void <init>(int) }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/StderrLogger),message,MethodDescriptor((java.lang.String, int): void),pattern.chainofresponsibility.example1.Logger{ public void message(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/StderrLogger),setNext,MethodDescriptor((pattern.chainofresponsibility.example1.Logger): pattern.chainofresponsibility.example1.Logger),pattern.chainofresponsibility.example1.Logger{ public pattern.chainofresponsibility.example1.Logger setNext(pattern.chainofresponsibility.example1.Logger) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/StderrLogger),writeMessage,MethodDescriptor((java.lang.String): void),pattern.chainofresponsibility.example1.StderrLogger{ protected void writeMessage(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/StdoutLogger),<init>,MethodDescriptor((int): void),pattern.chainofresponsibility.example1.StdoutLogger{ public void <init>(int) }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/StdoutLogger),message,MethodDescriptor((java.lang.String, int): void),pattern.chainofresponsibility.example1.Logger{ public void message(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/StdoutLogger),setNext,MethodDescriptor((pattern.chainofresponsibility.example1.Logger): pattern.chainofresponsibility.example1.Logger),pattern.chainofresponsibility.example1.Logger{ public pattern.chainofresponsibility.example1.Logger setNext(pattern.chainofresponsibility.example1.Logger) }) => ExternallySideEffectFree
DefinedMethod(ObjectType(pattern/chainofresponsibility/example1/StdoutLogger),writeMessage,MethodDescriptor((java.lang.String): void),pattern.chainofresponsibility.example1.StdoutLogger{ protected void writeMessage(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/CheckAuthority),<init>,MethodDescriptor((): void),pattern.chainofresponsibility.example2.CheckAuthority{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/CheckAuthority),main,MethodDescriptor((java.lang.String[]): void),pattern.chainofresponsibility.example2.CheckAuthority{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/DirectorPPower),<init>,MethodDescriptor((): void),pattern.chainofresponsibility.example2.DirectorPPower{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/DirectorPPower),processRequest,MethodDescriptor((pattern.chainofresponsibility.example2.PurchaseRequest): void),pattern.chainofresponsibility.example2.DirectorPPower{ public void processRequest(pattern.chainofresponsibility.example2.PurchaseRequest) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/DirectorPPower),setSuccessor,MethodDescriptor((pattern.chainofresponsibility.example2.PurchasePower): void),pattern.chainofresponsibility.example2.PurchasePower{ public void setSuccessor(pattern.chainofresponsibility.example2.PurchasePower) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/ManagerPPower),<init>,MethodDescriptor((): void),pattern.chainofresponsibility.example2.ManagerPPower{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/ManagerPPower),processRequest,MethodDescriptor((pattern.chainofresponsibility.example2.PurchaseRequest): void),pattern.chainofresponsibility.example2.ManagerPPower{ public void processRequest(pattern.chainofresponsibility.example2.PurchaseRequest) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/ManagerPPower),setSuccessor,MethodDescriptor((pattern.chainofresponsibility.example2.PurchasePower): void),pattern.chainofresponsibility.example2.PurchasePower{ public void setSuccessor(pattern.chainofresponsibility.example2.PurchasePower) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PresidentPPower),<init>,MethodDescriptor((): void),pattern.chainofresponsibility.example2.PresidentPPower{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PresidentPPower),processRequest,MethodDescriptor((pattern.chainofresponsibility.example2.PurchaseRequest): void),pattern.chainofresponsibility.example2.PresidentPPower{ public void processRequest(pattern.chainofresponsibility.example2.PurchaseRequest) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PresidentPPower),setSuccessor,MethodDescriptor((pattern.chainofresponsibility.example2.PurchasePower): void),pattern.chainofresponsibility.example2.PurchasePower{ public void setSuccessor(pattern.chainofresponsibility.example2.PurchasePower) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PurchasePower),<init>,MethodDescriptor((): void),pattern.chainofresponsibility.example2.PurchasePower{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PurchasePower),setSuccessor,MethodDescriptor((pattern.chainofresponsibility.example2.PurchasePower): void),pattern.chainofresponsibility.example2.PurchasePower{ public void setSuccessor(pattern.chainofresponsibility.example2.PurchasePower) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PurchaseRequest),<init>,MethodDescriptor((int, double, java.lang.String): void),pattern.chainofresponsibility.example2.PurchaseRequest{ public void <init>(int,double,java.lang.String) }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PurchaseRequest),getAmount,MethodDescriptor((): double),pattern.chainofresponsibility.example2.PurchaseRequest{ public double getAmount() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PurchaseRequest),getNumber,MethodDescriptor((): int),pattern.chainofresponsibility.example2.PurchaseRequest{ public int getNumber() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PurchaseRequest),getPurpose,MethodDescriptor((): java.lang.String),pattern.chainofresponsibility.example2.PurchaseRequest{ public java.lang.String getPurpose() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PurchaseRequest),setAmount,MethodDescriptor((double): void),pattern.chainofresponsibility.example2.PurchaseRequest{ public void setAmount(double) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PurchaseRequest),setNumber,MethodDescriptor((int): void),pattern.chainofresponsibility.example2.PurchaseRequest{ public void setNumber(int) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/PurchaseRequest),setPurpose,MethodDescriptor((java.lang.String): void),pattern.chainofresponsibility.example2.PurchaseRequest{ public void setPurpose(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/VicePresidentPPower),<init>,MethodDescriptor((): void),pattern.chainofresponsibility.example2.VicePresidentPPower{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/VicePresidentPPower),processRequest,MethodDescriptor((pattern.chainofresponsibility.example2.PurchaseRequest): void),pattern.chainofresponsibility.example2.VicePresidentPPower{ public void processRequest(pattern.chainofresponsibility.example2.PurchaseRequest) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/chainofresponsibility/example2/VicePresidentPPower),setSuccessor,MethodDescriptor((pattern.chainofresponsibility.example2.PurchasePower): void),pattern.chainofresponsibility.example2.PurchasePower{ public void setSuccessor(pattern.chainofresponsibility.example2.PurchasePower) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/command/FlipDownCommand),<init>,MethodDescriptor((pattern.command.Light): void),pattern.command.FlipDownCommand{ public void <init>(pattern.command.Light) }) => Pure
DefinedMethod(ObjectType(pattern/command/FlipDownCommand),execute,MethodDescriptor((): void),pattern.command.FlipDownCommand{ public void execute() }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/command/FlipUpCommand),<init>,MethodDescriptor((pattern.command.Light): void),pattern.command.FlipUpCommand{ public void <init>(pattern.command.Light) }) => Pure
DefinedMethod(ObjectType(pattern/command/FlipUpCommand),execute,MethodDescriptor((): void),pattern.command.FlipUpCommand{ public void execute() }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/command/Light),<init>,MethodDescriptor((): void),pattern.command.Light{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/command/Light),turnOff,MethodDescriptor((): void),pattern.command.Light{ public void turnOff() }) => DPure
DefinedMethod(ObjectType(pattern/command/Light),turnOn,MethodDescriptor((): void),pattern.command.Light{ public void turnOn() }) => DPure
DefinedMethod(ObjectType(pattern/command/PressSwitch),<init>,MethodDescriptor((): void),pattern.command.PressSwitch{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/command/PressSwitch),main,MethodDescriptor((java.lang.String[]): void),pattern.command.PressSwitch{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/command/Switch),<init>,MethodDescriptor((): void),pattern.command.Switch{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/command/Switch),storeAndExecute,MethodDescriptor((pattern.command.Command): void),pattern.command.Switch{ public void storeAndExecute(pattern.command.Command) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/composite/CompositeGraphic),<init>,MethodDescriptor((): void),pattern.composite.CompositeGraphic{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/composite/CompositeGraphic),add,MethodDescriptor((pattern.composite.Graphic): void),pattern.composite.CompositeGraphic{ public void add(pattern.composite.Graphic) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/composite/CompositeGraphic),print,MethodDescriptor((): void),pattern.composite.CompositeGraphic{ public void print() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/composite/CompositeGraphic),remove,MethodDescriptor((pattern.composite.Graphic): void),pattern.composite.CompositeGraphic{ public void remove(pattern.composite.Graphic) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/composite/Ellipse),<init>,MethodDescriptor((): void),pattern.composite.Ellipse{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/composite/Ellipse),print,MethodDescriptor((): void),pattern.composite.Ellipse{ public void print() }) => DPure
DefinedMethod(ObjectType(pattern/composite/Program),<init>,MethodDescriptor((): void),pattern.composite.Program{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/composite/Program),main,MethodDescriptor((java.lang.String[]): void),pattern.composite.Program{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/decorator/example1/DecoratedWindowTest),<init>,MethodDescriptor((): void),pattern.decorator.example1.DecoratedWindowTest{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example1/DecoratedWindowTest),main,MethodDescriptor((java.lang.String[]): void),pattern.decorator.example1.DecoratedWindowTest{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/decorator/example1/HorizontalScrollBarDecorator),<init>,MethodDescriptor((pattern.decorator.example1.Window): void),pattern.decorator.example1.HorizontalScrollBarDecorator{ public void <init>(pattern.decorator.example1.Window) }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example1/HorizontalScrollBarDecorator),draw,MethodDescriptor((): void),pattern.decorator.example1.HorizontalScrollBarDecorator{ public void draw() }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/decorator/example1/HorizontalScrollBarDecorator),drawHorizontalScrollBar,MethodDescriptor((): void),pattern.decorator.example1.HorizontalScrollBarDecorator{ private void drawHorizontalScrollBar() }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example1/HorizontalScrollBarDecorator),getDescription,MethodDescriptor((): java.lang.String),pattern.decorator.example1.HorizontalScrollBarDecorator{ public java.lang.String getDescription() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/decorator/example1/SimpleWindow),<init>,MethodDescriptor((): void),pattern.decorator.example1.SimpleWindow{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example1/SimpleWindow),draw,MethodDescriptor((): void),pattern.decorator.example1.SimpleWindow{ public void draw() }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example1/SimpleWindow),getDescription,MethodDescriptor((): java.lang.String),pattern.decorator.example1.SimpleWindow{ public java.lang.String getDescription() }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example1/VerticalScrollBarDecorator),<init>,MethodDescriptor((pattern.decorator.example1.Window): void),pattern.decorator.example1.VerticalScrollBarDecorator{ public void <init>(pattern.decorator.example1.Window) }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example1/VerticalScrollBarDecorator),draw,MethodDescriptor((): void),pattern.decorator.example1.VerticalScrollBarDecorator{ public void draw() }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/decorator/example1/VerticalScrollBarDecorator),drawVerticalScrollBar,MethodDescriptor((): void),pattern.decorator.example1.VerticalScrollBarDecorator{ private void drawVerticalScrollBar() }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example1/VerticalScrollBarDecorator),getDescription,MethodDescriptor((): java.lang.String),pattern.decorator.example1.VerticalScrollBarDecorator{ public java.lang.String getDescription() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/decorator/example1/WindowDecorator),<init>,MethodDescriptor((pattern.decorator.example1.Window): void),pattern.decorator.example1.WindowDecorator{ public void <init>(pattern.decorator.example1.Window) }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example1/WindowDecorator),draw,MethodDescriptor((): void),pattern.decorator.example1.WindowDecorator{ public void draw() }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/decorator/example2/CoffeeDecorator),<init>,MethodDescriptor((pattern.decorator.example2.Coffee): void),pattern.decorator.example2.CoffeeDecorator{ public void <init>(pattern.decorator.example2.Coffee) }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example2/CoffeeDecorator),getCost,MethodDescriptor((): double),pattern.decorator.example2.CoffeeDecorator{ public double getCost() }) => DPure
DefinedMethod(ObjectType(pattern/decorator/example2/CoffeeDecorator),getIngredients,MethodDescriptor((): java.lang.String),pattern.decorator.example2.CoffeeDecorator{ public java.lang.String getIngredients() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/decorator/example2/CoffeeMain),<init>,MethodDescriptor((): void),pattern.decorator.example2.CoffeeMain{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example2/CoffeeMain),main,MethodDescriptor((java.lang.String[]): void),pattern.decorator.example2.CoffeeMain{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/decorator/example2/Milk),<init>,MethodDescriptor((pattern.decorator.example2.Coffee): void),pattern.decorator.example2.Milk{ public void <init>(pattern.decorator.example2.Coffee) }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example2/Milk),getCost,MethodDescriptor((): double),pattern.decorator.example2.Milk{ public double getCost() }) => DPure
DefinedMethod(ObjectType(pattern/decorator/example2/Milk),getIngredients,MethodDescriptor((): java.lang.String),pattern.decorator.example2.Milk{ public java.lang.String getIngredients() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/decorator/example2/SimpleCoffee),<init>,MethodDescriptor((): void),pattern.decorator.example2.SimpleCoffee{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example2/SimpleCoffee),getCost,MethodDescriptor((): double),pattern.decorator.example2.SimpleCoffee{ public double getCost() }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example2/SimpleCoffee),getIngredients,MethodDescriptor((): java.lang.String),pattern.decorator.example2.SimpleCoffee{ public java.lang.String getIngredients() }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example2/Sprinkles),<init>,MethodDescriptor((pattern.decorator.example2.Coffee): void),pattern.decorator.example2.Sprinkles{ public void <init>(pattern.decorator.example2.Coffee) }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example2/Sprinkles),getCost,MethodDescriptor((): double),pattern.decorator.example2.Sprinkles{ public double getCost() }) => DPure
DefinedMethod(ObjectType(pattern/decorator/example2/Sprinkles),getIngredients,MethodDescriptor((): java.lang.String),pattern.decorator.example2.Sprinkles{ public java.lang.String getIngredients() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/decorator/example2/Whip),<init>,MethodDescriptor((pattern.decorator.example2.Coffee): void),pattern.decorator.example2.Whip{ public void <init>(pattern.decorator.example2.Coffee) }) => Pure
DefinedMethod(ObjectType(pattern/decorator/example2/Whip),getCost,MethodDescriptor((): double),pattern.decorator.example2.Whip{ public double getCost() }) => DPure
DefinedMethod(ObjectType(pattern/decorator/example2/Whip),getIngredients,MethodDescriptor((): java.lang.String),pattern.decorator.example2.Whip{ public java.lang.String getIngredients() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/facade/CPU),<init>,MethodDescriptor((): void),pattern.facade.CPU{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/facade/CPU),execute,MethodDescriptor((): void),pattern.facade.CPU{ public void execute() }) => Pure
DefinedMethod(ObjectType(pattern/facade/CPU),freeze,MethodDescriptor((): void),pattern.facade.CPU{ public void freeze() }) => Pure
DefinedMethod(ObjectType(pattern/facade/CPU),jump,MethodDescriptor((long): void),pattern.facade.CPU{ public void jump(long) }) => Pure
DefinedMethod(ObjectType(pattern/facade/Computer),<init>,MethodDescriptor((): void),pattern.facade.Computer{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/facade/Computer),startComputer,MethodDescriptor((): void),pattern.facade.Computer{ public void startComputer() }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/facade/HardDrive),<init>,MethodDescriptor((): void),pattern.facade.HardDrive{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/facade/HardDrive),read,MethodDescriptor((long, int): byte[]),pattern.facade.HardDrive{ public byte[] read(long,int) }) => Pure
DefinedMethod(ObjectType(pattern/facade/Memory),<init>,MethodDescriptor((): void),pattern.facade.Memory{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/facade/Memory),load,MethodDescriptor((long, byte[]): void),pattern.facade.Memory{ public void load(long,byte[]) }) => Pure
DefinedMethod(ObjectType(pattern/facade/You),<init>,MethodDescriptor((): void),pattern.facade.You{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/facade/You),main,MethodDescriptor((java.lang.String[]): void),pattern.facade.You{ public static void main(java.lang.String[]) }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/factoryMethod/MagicMazeGame),<init>,MethodDescriptor((): void),pattern.factoryMethod.MagicMazeGame{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/factoryMethod/MagicMazeGame),makeRoom,MethodDescriptor((): pattern.factoryMethod.Room),pattern.factoryMethod.MagicMazeGame{ protected pattern.factoryMethod.Room makeRoom() }) => Pure
DefinedMethod(ObjectType(pattern/factoryMethod/MagicRoom),<init>,MethodDescriptor((): void),pattern.factoryMethod.MagicRoom{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/factoryMethod/MagicRoom),connect,MethodDescriptor((pattern.factoryMethod.Room): void),pattern.factoryMethod.MagicRoom{ public void connect(pattern.factoryMethod.Room) }) => Pure
DefinedMethod(ObjectType(pattern/factoryMethod/MazeGame),<init>,MethodDescriptor((): void),pattern.factoryMethod.MazeGame{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/factoryMethod/MazeGame),addRoom,MethodDescriptor((pattern.factoryMethod.Room): void),pattern.factoryMethod.MazeGame{ private void addRoom(pattern.factoryMethod.Room) }) => Pure
DefinedMethod(ObjectType(pattern/factoryMethod/MazeGame),makeRoom,MethodDescriptor((): pattern.factoryMethod.Room),pattern.factoryMethod.MazeGame{ protected pattern.factoryMethod.Room makeRoom() }) => Pure
DefinedMethod(ObjectType(pattern/factoryMethod/OrdinaryRoom),<init>,MethodDescriptor((): void),pattern.factoryMethod.OrdinaryRoom{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/factoryMethod/OrdinaryRoom),connect,MethodDescriptor((pattern.factoryMethod.Room): void),pattern.factoryMethod.OrdinaryRoom{ public void connect(pattern.factoryMethod.Room) }) => Pure
DefinedMethod(ObjectType(pattern/flyweight/CoffeeFlavor),<init>,MethodDescriptor((java.lang.String): void),pattern.flyweight.CoffeeFlavor{ public void <init>(java.lang.String) }) => Pure
DefinedMethod(ObjectType(pattern/flyweight/CoffeeFlavor),getFlavor,MethodDescriptor((): java.lang.String),pattern.flyweight.CoffeeFlavor{ public java.lang.String getFlavor() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/flyweight/CoffeeFlavor),serveCoffee,MethodDescriptor((pattern.flyweight.CoffeeOrderContext): void),pattern.flyweight.CoffeeFlavor{ public void serveCoffee(pattern.flyweight.CoffeeOrderContext) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/flyweight/CoffeeFlavorFactory),<init>,MethodDescriptor((): void),pattern.flyweight.CoffeeFlavorFactory{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/flyweight/CoffeeFlavorFactory),getCoffeeFlavor,MethodDescriptor((java.lang.String): pattern.flyweight.CoffeeFlavor),pattern.flyweight.CoffeeFlavorFactory{ public pattern.flyweight.CoffeeFlavor getCoffeeFlavor(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/flyweight/CoffeeFlavorFactory),getTotalCoffeeFlavorsMade,MethodDescriptor((): int),pattern.flyweight.CoffeeFlavorFactory{ public int getTotalCoffeeFlavorsMade() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/flyweight/CoffeeOrderContext),<init>,MethodDescriptor((int): void),pattern.flyweight.CoffeeOrderContext{ public void <init>(int) }) => Pure
DefinedMethod(ObjectType(pattern/flyweight/CoffeeOrderContext),getTable,MethodDescriptor((): int),pattern.flyweight.CoffeeOrderContext{ public int getTable() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/flyweight/TestFlyweight),<clinit>,MethodDescriptor((): void),pattern.flyweight.TestFlyweight{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/flyweight/TestFlyweight),<init>,MethodDescriptor((): void),pattern.flyweight.TestFlyweight{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/flyweight/TestFlyweight),main,MethodDescriptor((java.lang.String[]): void),pattern.flyweight.TestFlyweight{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/flyweight/TestFlyweight),takeOrders,MethodDescriptor((java.lang.String, int): void),pattern.flyweight.TestFlyweight{ public static void takeOrders(java.lang.String,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/interpreter/Evaluator),<init>,MethodDescriptor((java.lang.String): void),pattern.interpreter.Evaluator{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/interpreter/Evaluator),interpret,MethodDescriptor((java.util.Map): int),pattern.interpreter.Evaluator{ public int interpret(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/interpreter/InterpreterExample),<init>,MethodDescriptor((): void),pattern.interpreter.InterpreterExample{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/interpreter/InterpreterExample),main,MethodDescriptor((java.lang.String[]): void),pattern.interpreter.InterpreterExample{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/interpreter/Minus),<init>,MethodDescriptor((pattern.interpreter.Expression, pattern.interpreter.Expression): void),pattern.interpreter.Minus{ public void <init>(pattern.interpreter.Expression,pattern.interpreter.Expression) }) => Pure
DefinedMethod(ObjectType(pattern/interpreter/Minus),interpret,MethodDescriptor((java.util.Map): int),pattern.interpreter.Minus{ public int interpret(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/interpreter/Number),<init>,MethodDescriptor((int): void),pattern.interpreter.Number{ public void <init>(int) }) => Pure
DefinedMethod(ObjectType(pattern/interpreter/Number),interpret,MethodDescriptor((java.util.Map): int),pattern.interpreter.Number{ public int interpret(java.util.Map) }) => SideEffectFree
DefinedMethod(ObjectType(pattern/interpreter/Plus),<init>,MethodDescriptor((pattern.interpreter.Expression, pattern.interpreter.Expression): void),pattern.interpreter.Plus{ public void <init>(pattern.interpreter.Expression,pattern.interpreter.Expression) }) => Pure
DefinedMethod(ObjectType(pattern/interpreter/Plus),interpret,MethodDescriptor((java.util.Map): int),pattern.interpreter.Plus{ public int interpret(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/interpreter/Variable),<init>,MethodDescriptor((java.lang.String): void),pattern.interpreter.Variable{ public void <init>(java.lang.String) }) => Pure
DefinedMethod(ObjectType(pattern/interpreter/Variable),interpret,MethodDescriptor((java.util.Map): int),pattern.interpreter.Variable{ public int interpret(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/iterator/ConcreteAggregate),<init>,MethodDescriptor((java.util.List): void),pattern.iterator.ConcreteAggregate{ public void <init>(java.util.List) }) => Pure
DefinedMethod(ObjectType(pattern/iterator/ConcreteAggregate),getIterator,MethodDescriptor((): pattern.iterator.Iterator),pattern.iterator.ConcreteAggregate{ public pattern.iterator.Iterator getIterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/iterator/ConcreteIterator),<init>,MethodDescriptor((pattern.iterator.ConcreteAggregate): void),pattern.iterator.ConcreteIterator{ protected void <init>(pattern.iterator.ConcreteAggregate) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/iterator/ConcreteIterator),hasNext,MethodDescriptor((): boolean),pattern.iterator.ConcreteIterator{ public boolean hasNext() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/iterator/ConcreteIterator),next,MethodDescriptor((): java.lang.Integer),pattern.iterator.ConcreteIterator{ public java.lang.Integer next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/iterator/ConcreteIterator),next,MethodDescriptor((): java.lang.Object),pattern.iterator.ConcreteIterator{ public java.lang.Object next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/iterator/IteratorDemo),<init>,MethodDescriptor((): void),pattern.iterator.IteratorDemo{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/iterator/IteratorDemo),main,MethodDescriptor((java.lang.String[]): void),pattern.iterator.IteratorDemo{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/BtnBook),<init>,MethodDescriptor((java.awt.event.ActionListener, pattern.mediator.IMediator): void),pattern.mediator.BtnBook{ void <init>(java.awt.event.ActionListener,pattern.mediator.IMediator) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/BtnBook),execute,MethodDescriptor((): void),pattern.mediator.BtnBook{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/BtnSearch),<init>,MethodDescriptor((java.awt.event.ActionListener, pattern.mediator.IMediator): void),pattern.mediator.BtnSearch{ void <init>(java.awt.event.ActionListener,pattern.mediator.IMediator) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/BtnSearch),execute,MethodDescriptor((): void),pattern.mediator.BtnSearch{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/BtnView),<init>,MethodDescriptor((java.awt.event.ActionListener, pattern.mediator.IMediator): void),pattern.mediator.BtnView{ void <init>(java.awt.event.ActionListener,pattern.mediator.IMediator) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/BtnView),execute,MethodDescriptor((): void),pattern.mediator.BtnView{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/LblDisplay),<init>,MethodDescriptor((pattern.mediator.IMediator): void),pattern.mediator.LblDisplay{ void <init>(pattern.mediator.IMediator) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/Mediator),<init>,MethodDescriptor((): void),pattern.mediator.Mediator{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/mediator/Mediator),book,MethodDescriptor((): void),pattern.mediator.Mediator{ public void book() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/Mediator),registerBook,MethodDescriptor((pattern.mediator.BtnBook): void),pattern.mediator.Mediator{ public void registerBook(pattern.mediator.BtnBook) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/mediator/Mediator),registerDisplay,MethodDescriptor((pattern.mediator.LblDisplay): void),pattern.mediator.Mediator{ public void registerDisplay(pattern.mediator.LblDisplay) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/mediator/Mediator),registerSearch,MethodDescriptor((pattern.mediator.BtnSearch): void),pattern.mediator.Mediator{ public void registerSearch(pattern.mediator.BtnSearch) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/mediator/Mediator),registerView,MethodDescriptor((pattern.mediator.BtnView): void),pattern.mediator.Mediator{ public void registerView(pattern.mediator.BtnView) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/mediator/Mediator),search,MethodDescriptor((): void),pattern.mediator.Mediator{ public void search() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/Mediator),view,MethodDescriptor((): void),pattern.mediator.Mediator{ public void view() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/MediatorDemo),<init>,MethodDescriptor((): void),pattern.mediator.MediatorDemo{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/MediatorDemo),actionPerformed,MethodDescriptor((java.awt.event.ActionEvent): void),pattern.mediator.MediatorDemo{ public void actionPerformed(java.awt.event.ActionEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/mediator/MediatorDemo),main,MethodDescriptor((java.lang.String[]): void),pattern.mediator.MediatorDemo{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/memento/Caretaker),<init>,MethodDescriptor((): void),pattern.memento.Caretaker{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/memento/Caretaker),main,MethodDescriptor((java.lang.String[]): void),pattern.memento.Caretaker{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/memento/Originator$Memento),<init>,MethodDescriptor((java.lang.String): void),pattern.memento.Originator$Memento{ private void <init>(java.lang.String) }) => Pure
DefinedMethod(ObjectType(pattern/memento/Originator$Memento),<init>,MethodDescriptor((java.lang.String, pattern.memento.Originator$1): void),pattern.memento.Originator$Memento{ void <init>(java.lang.String,pattern.memento.Originator$1) }) => Pure
DefinedMethod(ObjectType(pattern/memento/Originator$Memento),access$100,MethodDescriptor((pattern.memento.Originator$Memento): java.lang.String),pattern.memento.Originator$Memento{ static java.lang.String access$100(pattern.memento.Originator$Memento) }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/memento/Originator$Memento),getSavedState,MethodDescriptor((): java.lang.String),pattern.memento.Originator$Memento{ private java.lang.String getSavedState() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/memento/Originator),<init>,MethodDescriptor((): void),pattern.memento.Originator{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/memento/Originator),restoreFromMemento,MethodDescriptor((pattern.memento.Originator$Memento): void),pattern.memento.Originator{ public void restoreFromMemento(pattern.memento.Originator$Memento) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/memento/Originator),saveToMemento,MethodDescriptor((): pattern.memento.Originator$Memento),pattern.memento.Originator{ public pattern.memento.Originator$Memento saveToMemento() }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/memento/Originator),set,MethodDescriptor((java.lang.String): void),pattern.memento.Originator{ public void set(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/observer/EventSource),<init>,MethodDescriptor((): void),pattern.observer.EventSource{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/observer/EventSource),run,MethodDescriptor((): void),pattern.observer.EventSource{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/observer/MyApp),<init>,MethodDescriptor((): void),pattern.observer.MyApp{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/observer/MyApp),main,MethodDescriptor((java.lang.String[]): void),pattern.observer.MyApp{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/observer/ResponseHandler),<init>,MethodDescriptor((): void),pattern.observer.ResponseHandler{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/observer/ResponseHandler),update,MethodDescriptor((java.util.Observable, java.lang.Object): void),pattern.observer.ResponseHandler{ public void update(java.util.Observable,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/prototype/Prototype),<init>,MethodDescriptor((): void),pattern.prototype.Prototype{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/prototype/Prototype),clone,MethodDescriptor((): java.lang.Object),pattern.prototype.Prototype{ public java.lang.Object clone() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/prototype/PrototypeImpl),<init>,MethodDescriptor((int): void),pattern.prototype.PrototypeImpl{ public void <init>(int) }) => Pure
DefinedMethod(ObjectType(pattern/prototype/PrototypeImpl),clone,MethodDescriptor((): java.lang.Object),pattern.prototype.Prototype{ public java.lang.Object clone() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/prototype/PrototypeImpl),getX,MethodDescriptor((): int),pattern.prototype.PrototypeImpl{ public int getX() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/prototype/PrototypeImpl),printX,MethodDescriptor((): void),pattern.prototype.PrototypeImpl{ public void printX() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/prototype/PrototypeImpl),setX,MethodDescriptor((int): void),pattern.prototype.PrototypeImpl{ public void setX(int) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/prototype/PrototypeTest),<init>,MethodDescriptor((): void),pattern.prototype.PrototypeTest{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/prototype/PrototypeTest),main,MethodDescriptor((java.lang.String[]): void),pattern.prototype.PrototypeTest{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/proxy/ProxyExample),<init>,MethodDescriptor((): void),pattern.proxy.ProxyExample{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/proxy/ProxyExample),main,MethodDescriptor((java.lang.String[]): void),pattern.proxy.ProxyExample{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/proxy/ProxyImage),<init>,MethodDescriptor((java.lang.String): void),pattern.proxy.ProxyImage{ public void <init>(java.lang.String) }) => Pure
DefinedMethod(ObjectType(pattern/proxy/ProxyImage),displayImage,MethodDescriptor((): void),pattern.proxy.ProxyImage{ public void displayImage() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/proxy/RealImage),<init>,MethodDescriptor((java.lang.String): void),pattern.proxy.RealImage{ public void <init>(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/proxy/RealImage),displayImage,MethodDescriptor((): void),pattern.proxy.RealImage{ public void displayImage() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/proxy/RealImage),loadImageFromDisk,MethodDescriptor((): void),pattern.proxy.RealImage{ private void loadImageFromDisk() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/singleton/BillPughSingleton$BillPughSingletonHolder),<clinit>,MethodDescriptor((): void),pattern.singleton.BillPughSingleton$BillPughSingletonHolder{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/singleton/BillPughSingleton$BillPughSingletonHolder),<init>,MethodDescriptor((): void),pattern.singleton.BillPughSingleton$BillPughSingletonHolder{ private void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/singleton/BillPughSingleton),<init>,MethodDescriptor((): void),pattern.singleton.BillPughSingleton{ private void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/singleton/BillPughSingleton),<init>,MethodDescriptor((pattern.singleton.BillPughSingleton$1): void),pattern.singleton.BillPughSingleton{ void <init>(pattern.singleton.BillPughSingleton$1) }) => Pure
DefinedMethod(ObjectType(pattern/singleton/BillPughSingleton),getInstance,MethodDescriptor((): pattern.singleton.BillPughSingleton),pattern.singleton.BillPughSingleton{ public static pattern.singleton.BillPughSingleton getInstance() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/singleton/LazySingleton),<init>,MethodDescriptor((): void),pattern.singleton.LazySingleton{ private void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/singleton/LazySingleton),getInstance,MethodDescriptor((): pattern.singleton.LazySingleton),pattern.singleton.LazySingleton{ public static pattern.singleton.LazySingleton getInstance() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/singleton/TraditionalSingleton),<clinit>,MethodDescriptor((): void),pattern.singleton.TraditionalSingleton{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/singleton/TraditionalSingleton),<init>,MethodDescriptor((): void),pattern.singleton.TraditionalSingleton{ private void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/singleton/TraditionalSingleton),getInstance,MethodDescriptor((): pattern.singleton.TraditionalSingleton),pattern.singleton.TraditionalSingleton{ public static pattern.singleton.TraditionalSingleton getInstance() }) => SideEffectFree
DefinedMethod(ObjectType(pattern/state/StateA),<init>,MethodDescriptor((): void),pattern.state.StateA{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/state/StateA),writeName,MethodDescriptor((pattern.state.StateContext, java.lang.String): void),pattern.state.StateA{ public void writeName(pattern.state.StateContext,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/state/StateB),<init>,MethodDescriptor((): void),pattern.state.StateB{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/state/StateB),writeName,MethodDescriptor((pattern.state.StateContext, java.lang.String): void),pattern.state.StateB{ public void writeName(pattern.state.StateContext,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/state/StateContext),<init>,MethodDescriptor((): void),pattern.state.StateContext{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/state/StateContext),setState,MethodDescriptor((pattern.state.State): void),pattern.state.StateContext{ public void setState(pattern.state.State) }) => ExternallyPure
DefinedMethod(ObjectType(pattern/state/StateContext),writeName,MethodDescriptor((java.lang.String): void),pattern.state.StateContext{ public void writeName(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/state/TestClientState),<init>,MethodDescriptor((): void),pattern.state.TestClientState{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/state/TestClientState),main,MethodDescriptor((java.lang.String[]): void),pattern.state.TestClientState{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/strategy/ConcreteStrategyAdd),<init>,MethodDescriptor((): void),pattern.strategy.ConcreteStrategyAdd{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/strategy/ConcreteStrategyAdd),execute,MethodDescriptor((int, int): int),pattern.strategy.ConcreteStrategyAdd{ public int execute(int,int) }) => DPure
DefinedMethod(ObjectType(pattern/strategy/ConcreteStrategyMultiply),<init>,MethodDescriptor((): void),pattern.strategy.ConcreteStrategyMultiply{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/strategy/ConcreteStrategyMultiply),execute,MethodDescriptor((int, int): int),pattern.strategy.ConcreteStrategyMultiply{ public int execute(int,int) }) => DPure
DefinedMethod(ObjectType(pattern/strategy/ConcreteStrategySubtract),<init>,MethodDescriptor((): void),pattern.strategy.ConcreteStrategySubtract{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/strategy/ConcreteStrategySubtract),execute,MethodDescriptor((int, int): int),pattern.strategy.ConcreteStrategySubtract{ public int execute(int,int) }) => DPure
DefinedMethod(ObjectType(pattern/strategy/Context),<init>,MethodDescriptor((pattern.strategy.Strategy): void),pattern.strategy.Context{ public void <init>(pattern.strategy.Strategy) }) => Pure
DefinedMethod(ObjectType(pattern/strategy/Context),executeStrategy,MethodDescriptor((int, int): int),pattern.strategy.Context{ public int executeStrategy(int,int) }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/strategy/StrategyExample),<init>,MethodDescriptor((): void),pattern.strategy.StrategyExample{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/strategy/StrategyExample),main,MethodDescriptor((java.lang.String[]): void),pattern.strategy.StrategyExample{ public static void main(java.lang.String[]) }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/templatemethod/Chess),<init>,MethodDescriptor((): void),pattern.templatemethod.Chess{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/templatemethod/Chess),endOfGame,MethodDescriptor((): boolean),pattern.templatemethod.Chess{ boolean endOfGame() }) => Pure
DefinedMethod(ObjectType(pattern/templatemethod/Chess),initializeGame,MethodDescriptor((): void),pattern.templatemethod.Chess{ void initializeGame() }) => Pure
DefinedMethod(ObjectType(pattern/templatemethod/Chess),makePlay,MethodDescriptor((int): void),pattern.templatemethod.Chess{ void makePlay(int) }) => Pure
DefinedMethod(ObjectType(pattern/templatemethod/Chess),playOneGame,MethodDescriptor((int): void),pattern.templatemethod.Game{ public void playOneGame(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/templatemethod/Chess),printWinner,MethodDescriptor((): void),pattern.templatemethod.Chess{ void printWinner() }) => Pure
DefinedMethod(ObjectType(pattern/templatemethod/Game),<init>,MethodDescriptor((): void),pattern.templatemethod.Game{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/templatemethod/Game),playOneGame,MethodDescriptor((int): void),pattern.templatemethod.Game{ public void playOneGame(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/templatemethod/Monopoly),<init>,MethodDescriptor((): void),pattern.templatemethod.Monopoly{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/templatemethod/Monopoly),endOfGame,MethodDescriptor((): boolean),pattern.templatemethod.Monopoly{ boolean endOfGame() }) => Pure
DefinedMethod(ObjectType(pattern/templatemethod/Monopoly),initializeGame,MethodDescriptor((): void),pattern.templatemethod.Monopoly{ void initializeGame() }) => Pure
DefinedMethod(ObjectType(pattern/templatemethod/Monopoly),makePlay,MethodDescriptor((int): void),pattern.templatemethod.Monopoly{ void makePlay(int) }) => Pure
DefinedMethod(ObjectType(pattern/templatemethod/Monopoly),playOneGame,MethodDescriptor((int): void),pattern.templatemethod.Game{ public void playOneGame(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/templatemethod/Monopoly),printWinner,MethodDescriptor((): void),pattern.templatemethod.Monopoly{ void printWinner() }) => Pure
DefinedMethod(ObjectType(pattern/visitor/Body),<init>,MethodDescriptor((): void),pattern.visitor.Body{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/visitor/Body),accept,MethodDescriptor((pattern.visitor.CarElementVisitor): void),pattern.visitor.Body{ public void accept(pattern.visitor.CarElementVisitor) }) => DPure
DefinedMethod(ObjectType(pattern/visitor/Car),<init>,MethodDescriptor((): void),pattern.visitor.Car{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/visitor/Car),accept,MethodDescriptor((pattern.visitor.CarElementVisitor): void),pattern.visitor.Car{ public void accept(pattern.visitor.CarElementVisitor) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/visitor/Car),getElements,MethodDescriptor((): pattern.visitor.CarElement[]),pattern.visitor.Car{ public pattern.visitor.CarElement[] getElements() }) => DSideEffectFree
DefinedMethod(ObjectType(pattern/visitor/CarElementDoVisitor),<init>,MethodDescriptor((): void),pattern.visitor.CarElementDoVisitor{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/visitor/CarElementDoVisitor),visit,MethodDescriptor((pattern.visitor.Body): void),pattern.visitor.CarElementDoVisitor{ public void visit(pattern.visitor.Body) }) => DPure
DefinedMethod(ObjectType(pattern/visitor/CarElementDoVisitor),visit,MethodDescriptor((pattern.visitor.Car): void),pattern.visitor.CarElementDoVisitor{ public void visit(pattern.visitor.Car) }) => DPure
DefinedMethod(ObjectType(pattern/visitor/CarElementDoVisitor),visit,MethodDescriptor((pattern.visitor.Engine): void),pattern.visitor.CarElementDoVisitor{ public void visit(pattern.visitor.Engine) }) => DPure
DefinedMethod(ObjectType(pattern/visitor/CarElementDoVisitor),visit,MethodDescriptor((pattern.visitor.Wheel): void),pattern.visitor.CarElementDoVisitor{ public void visit(pattern.visitor.Wheel) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/visitor/CarElementPrintVisitor),<init>,MethodDescriptor((): void),pattern.visitor.CarElementPrintVisitor{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/visitor/CarElementPrintVisitor),visit,MethodDescriptor((pattern.visitor.Body): void),pattern.visitor.CarElementPrintVisitor{ public void visit(pattern.visitor.Body) }) => DPure
DefinedMethod(ObjectType(pattern/visitor/CarElementPrintVisitor),visit,MethodDescriptor((pattern.visitor.Car): void),pattern.visitor.CarElementPrintVisitor{ public void visit(pattern.visitor.Car) }) => DPure
DefinedMethod(ObjectType(pattern/visitor/CarElementPrintVisitor),visit,MethodDescriptor((pattern.visitor.Engine): void),pattern.visitor.CarElementPrintVisitor{ public void visit(pattern.visitor.Engine) }) => DPure
DefinedMethod(ObjectType(pattern/visitor/CarElementPrintVisitor),visit,MethodDescriptor((pattern.visitor.Wheel): void),pattern.visitor.CarElementPrintVisitor{ public void visit(pattern.visitor.Wheel) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/visitor/Engine),<init>,MethodDescriptor((): void),pattern.visitor.Engine{ void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/visitor/Engine),accept,MethodDescriptor((pattern.visitor.CarElementVisitor): void),pattern.visitor.Engine{ public void accept(pattern.visitor.CarElementVisitor) }) => DPure
DefinedMethod(ObjectType(pattern/visitor/VisitorDemo),<init>,MethodDescriptor((): void),pattern.visitor.VisitorDemo{ public void <init>() }) => Pure
DefinedMethod(ObjectType(pattern/visitor/VisitorDemo),main,MethodDescriptor((java.lang.String[]): void),pattern.visitor.VisitorDemo{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/visitor/Wheel),<init>,MethodDescriptor((java.lang.String): void),pattern.visitor.Wheel{ public void <init>(java.lang.String) }) => Pure
DefinedMethod(ObjectType(pattern/visitor/Wheel),accept,MethodDescriptor((pattern.visitor.CarElementVisitor): void),pattern.visitor.Wheel{ public void accept(pattern.visitor.CarElementVisitor) }) => ImpureByAnalysis
DefinedMethod(ObjectType(pattern/visitor/Wheel),getName,MethodDescriptor((): java.lang.String),pattern.visitor.Wheel{ public java.lang.String getName() }) => SideEffectFree
DefinedMethod(ObjectType(test/GetterSetterTestClass),<init>,MethodDescriptor((): void),test.GetterSetterTestClass{ public void <init>() }) => Pure
DefinedMethod(ObjectType(test/GetterSetterTestClass),getField,MethodDescriptor((): java.lang.Integer),test.GetterSetterTestClass{ public java.lang.Integer getField() }) => SideEffectFree
DefinedMethod(ObjectType(test/GetterSetterTestClass),getField2,MethodDescriptor((): java.lang.String),test.GetterSetterTestClass{ public java.lang.String getField2() }) => SideEffectFree
DefinedMethod(ObjectType(test/GetterSetterTestClass),setField,MethodDescriptor((java.lang.Integer): void),test.GetterSetterTestClass{ public void setField(java.lang.Integer) }) => ExternallyPure
DefinedMethod(ObjectType(test/GetterSetterTestClass),setField2,MethodDescriptor((java.lang.String): void),test.GetterSetterTestClass{ public void setField2(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(test/StronglyConnectedComponentsTestClass),<init>,MethodDescriptor((): void),test.StronglyConnectedComponentsTestClass{ public void <init>() }) => Pure
DefinedMethod(ObjectType(test/StronglyConnectedComponentsTestClass),methodA,MethodDescriptor((): void),test.StronglyConnectedComponentsTestClass{ public void methodA() }) => ImpureByAnalysis
DefinedMethod(ObjectType(test/StronglyConnectedComponentsTestClass),methodB,MethodDescriptor((): void),test.StronglyConnectedComponentsTestClass{ public void methodB() }) => ImpureByAnalysis
DefinedMethod(ObjectType(test/StronglyConnectedComponentsTestClass),methodC,MethodDescriptor((): void),test.StronglyConnectedComponentsTestClass{ public void methodC() }) => ImpureByAnalysis
DefinedMethod(ObjectType(test/StronglyConnectedComponentsTestClass),methodD,MethodDescriptor((): void),test.StronglyConnectedComponentsTestClass{ public void methodD() }) => Pure
