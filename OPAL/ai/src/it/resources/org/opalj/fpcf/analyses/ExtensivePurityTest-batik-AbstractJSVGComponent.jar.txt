DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1$Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1$Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1$Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1$Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, org.apache.batik.util.ParsedURL): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$10),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$10{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$10),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$10{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$10Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, float): void),org.apache.batik.swing.svg.AbstractJSVGComponent$10Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,float) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$10Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$10Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$11),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$11{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$11),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$11{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$11Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$11Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$11Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$11Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$12),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$12{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$12),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$12{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$12Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$12Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$12Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$12Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$13),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$13{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$13),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$13{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$13Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$13Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$13Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$13Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$14),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, java.awt.event.KeyEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$14{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,java.awt.event.KeyEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$14),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$14{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$14Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$14Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$14Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$14Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$15),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, java.awt.event.KeyEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$15{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,java.awt.event.KeyEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$15),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$15{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$15Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$15Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$15Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$15Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$16),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, java.awt.event.KeyEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$16{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,java.awt.event.KeyEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$16),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$16{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$16Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.awt.geom.AffineTransform): void),org.apache.batik.swing.svg.AbstractJSVGComponent$16Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.awt.geom.AffineTransform) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$16Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$16Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$17),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$17{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$17),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$17{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$17Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$17Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$17Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$17Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$18),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$18{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$18),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$18{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$18Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$18Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$18Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$18Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$19),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$19{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$19),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$19{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$19Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$19Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$19Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$19Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1MouseDraggedRunnable),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1MouseDraggedRunnable{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1MouseDraggedRunnable),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1MouseDraggedRunnable{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1MouseMovedRunnable),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1MouseMovedRunnable{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1MouseMovedRunnable),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1MouseMovedRunnable{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1UpdateRenderingRunnable),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, java.awt.geom.AffineTransform, boolean, boolean, java.awt.Shape, int, int): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1UpdateRenderingRunnable{ public void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent,java.awt.geom.AffineTransform,boolean,boolean,java.awt.Shape,int,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1UpdateRenderingRunnable),deactivate,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1UpdateRenderingRunnable{ public void deactivate() }) => ExternallyPure
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1UpdateRenderingRunnable),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1UpdateRenderingRunnable{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$1UpdateRenderingRunnable),updateInfo,MethodDescriptor((java.awt.geom.AffineTransform, boolean, boolean, java.awt.Shape, int, int): void),org.apache.batik.swing.svg.AbstractJSVGComponent$1UpdateRenderingRunnable{ public void updateInfo(java.awt.geom.AffineTransform,boolean,boolean,java.awt.Shape,int,int) }) => ExternallyPure
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$2),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, org.w3c.dom.svg.SVGDocument): void),org.apache.batik.swing.svg.AbstractJSVGComponent$2{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent,org.w3c.dom.svg.SVGDocument) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$2),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$2{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$20),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$20{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$20),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$20{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$20Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$20Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$20Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$20Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$21),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$21{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$21),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$21{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$21Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$21Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$21Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$21Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$22),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.lang.Exception): void),org.apache.batik.swing.svg.AbstractJSVGComponent$22{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$22),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$22{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$22Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.lang.String, org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): void),org.apache.batik.swing.svg.AbstractJSVGComponent$22Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$22Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$22Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$23),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$23{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$23),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$23{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$23Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.lang.String, org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): void),org.apache.batik.swing.svg.AbstractJSVGComponent$23Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$23Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$23Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$24),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$24{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$24),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$24{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$24Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): void),org.apache.batik.swing.svg.AbstractJSVGComponent$24Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$24Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$24Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$25),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, org.w3c.dom.svg.SVGAElement): void),org.apache.batik.swing.svg.AbstractJSVGComponent$25{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,org.w3c.dom.svg.SVGAElement) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$25),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$25{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$25Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): void),org.apache.batik.swing.svg.AbstractJSVGComponent$25Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$25Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$25Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$26),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.awt.Cursor): void),org.apache.batik.swing.svg.AbstractJSVGComponent$26{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.awt.Cursor) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$26),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$26{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$26Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, org.w3c.dom.Element, java.lang.String, java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$26Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,org.w3c.dom.Element,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$26Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$26Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$27),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, org.apache.batik.gvt.text.Mark, org.apache.batik.gvt.text.Mark): void),org.apache.batik.swing.svg.AbstractJSVGComponent$27{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,org.apache.batik.gvt.text.Mark,org.apache.batik.gvt.text.Mark) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$27),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$27{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$28),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$28{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$28),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$28{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$29),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, org.apache.batik.bridge.BridgeExtension): void),org.apache.batik.swing.svg.AbstractJSVGComponent$29{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,org.apache.batik.bridge.BridgeExtension) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$29),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$29{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$2Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$2Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$2Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$2Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$3),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, java.awt.geom.AffineTransform): void),org.apache.batik.swing.svg.AbstractJSVGComponent$3{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent,java.awt.geom.AffineTransform) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$3),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$3{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$30),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, org.w3c.dom.Element, java.lang.Object): void),org.apache.batik.swing.svg.AbstractJSVGComponent$30{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,org.w3c.dom.Element,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$30),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$30{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$3Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$3Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$3Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$3Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$4),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$JSVGComponentListener): void),org.apache.batik.swing.svg.AbstractJSVGComponent$4{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$JSVGComponentListener) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$4),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$4{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$4Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.lang.String, java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$4Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$4Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$4Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$5),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$JSVGComponentListener, boolean, boolean): void),org.apache.batik.swing.svg.AbstractJSVGComponent$5{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$JSVGComponentListener,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$5),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$5{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$5Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$5Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$5Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$5Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$6),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$6{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$6),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$6{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$6Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$6Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$6Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$6Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$7),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$7{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$7),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$7{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$7Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$7Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$7Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$7Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$8),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$8{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$8),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$8{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$8Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper): void),org.apache.batik.swing.svg.AbstractJSVGComponent$8Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$8Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$8Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$9),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$9{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener,org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$9),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$9{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$9Query),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper, float): void),org.apache.batik.swing.svg.AbstractJSVGComponent$9Query{ void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,float) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$9Query),run,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$9Query{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ protected void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),checkLoadExternalResource,MethodDescriptor((org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void checkLoadExternalResource(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),checkLoadScript,MethodDescriptor((java.lang.String, org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void checkLoadScript(java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),deselectAll,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void deselectAll() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),displayError,MethodDescriptor((java.lang.Exception): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void displayError(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),displayError,MethodDescriptor((java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void displayError(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),displayMessage,MethodDescriptor((java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void displayMessage(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),fireLinkActivatedEvent,MethodDescriptor((org.w3c.dom.svg.SVGAElement, java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ protected void fireLinkActivatedEvent(org.w3c.dom.svg.SVGAElement,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getAlternateStyleSheet,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public java.lang.String getAlternateStyleSheet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getBolderFontWeight,MethodDescriptor((float): float),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public float getBolderFontWeight(float) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getBrokenLinkDocument,MethodDescriptor((org.w3c.dom.Element, java.lang.String, java.lang.String): org.w3c.dom.svg.SVGDocument),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public org.w3c.dom.svg.SVGDocument getBrokenLinkDocument(org.w3c.dom.Element,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getClientAreaLocationOnScreen,MethodDescriptor((): java.awt.Point),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public java.awt.Point getClientAreaLocationOnScreen() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getDefaultFontFamily,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public java.lang.String getDefaultFontFamily() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getEventDispatcher,MethodDescriptor((): org.apache.batik.gvt.event.EventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public org.apache.batik.gvt.event.EventDispatcher getEventDispatcher() }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getExternalResourceSecurity,MethodDescriptor((org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): org.apache.batik.bridge.ExternalResourceSecurity),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public org.apache.batik.bridge.ExternalResourceSecurity getExternalResourceSecurity(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getLanguages,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public java.lang.String getLanguages() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getLighterFontWeight,MethodDescriptor((float): float),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public float getLighterFontWeight(float) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getMedia,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public java.lang.String getMedia() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getMediumFontSize,MethodDescriptor((): float),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public float getMediumFontSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getPixelToMM,MethodDescriptor((): float),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public float getPixelToMM() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getPixelUnitToMillimeter,MethodDescriptor((): float),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public float getPixelUnitToMillimeter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getScriptSecurity,MethodDescriptor((java.lang.String, org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): org.apache.batik.bridge.ScriptSecurity),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public org.apache.batik.bridge.ScriptSecurity getScriptSecurity(java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getTransform,MethodDescriptor((): java.awt.geom.AffineTransform),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public java.awt.geom.AffineTransform getTransform() }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getUserStyleSheetURI,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public java.lang.String getUserStyleSheetURI() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getViewportSize,MethodDescriptor((): java.awt.geom.Dimension2D),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public java.awt.geom.Dimension2D getViewportSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),getXMLParserClassName,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public java.lang.String getXMLParserClassName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),handleElement,MethodDescriptor((org.w3c.dom.Element, java.lang.Object): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void handleElement(org.w3c.dom.Element,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),hasFeature,MethodDescriptor((java.lang.String): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public boolean hasFeature(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),isXMLParserValidating,MethodDescriptor((): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public boolean isXMLParserValidating() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),openLink,MethodDescriptor((org.w3c.dom.svg.SVGAElement): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void openLink(org.w3c.dom.svg.SVGAElement) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),registerExtension,MethodDescriptor((org.apache.batik.bridge.BridgeExtension): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void registerExtension(org.apache.batik.bridge.BridgeExtension) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),setSVGCursor,MethodDescriptor((java.awt.Cursor): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void setSVGCursor(java.awt.Cursor) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),setTextSelection,MethodDescriptor((org.apache.batik.gvt.text.Mark, org.apache.batik.gvt.text.Mark): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void setTextSelection(org.apache.batik.gvt.text.Mark,org.apache.batik.gvt.text.Mark) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),setTransform,MethodDescriptor((java.awt.geom.AffineTransform): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void setTransform(java.awt.geom.AffineTransform) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),showAlert,MethodDescriptor((java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public void showAlert(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),showConfirm,MethodDescriptor((java.lang.String): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public boolean showConfirm(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),showPrompt,MethodDescriptor((java.lang.String): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public java.lang.String showPrompt(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),showPrompt,MethodDescriptor((java.lang.String, java.lang.String): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public java.lang.String showPrompt(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgent),supportExtension,MethodDescriptor((java.lang.String): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent{ public boolean supportExtension(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),<init>,MethodDescriptor((org.apache.batik.bridge.UserAgent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void <init>(org.apache.batik.bridge.UserAgent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),checkLoadExternalResource,MethodDescriptor((org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void checkLoadExternalResource(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),checkLoadScript,MethodDescriptor((java.lang.String, org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void checkLoadScript(java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),deselectAll,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void deselectAll() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),displayError,MethodDescriptor((java.lang.Exception): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void displayError(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),displayMessage,MethodDescriptor((java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void displayMessage(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getAlternateStyleSheet,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public java.lang.String getAlternateStyleSheet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getBolderFontWeight,MethodDescriptor((float): float),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public float getBolderFontWeight(float) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getBrokenLinkDocument,MethodDescriptor((org.w3c.dom.Element, java.lang.String, java.lang.String): org.w3c.dom.svg.SVGDocument),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public org.w3c.dom.svg.SVGDocument getBrokenLinkDocument(org.w3c.dom.Element,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getClientAreaLocationOnScreen,MethodDescriptor((): java.awt.Point),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public java.awt.Point getClientAreaLocationOnScreen() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getDefaultFontFamily,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public java.lang.String getDefaultFontFamily() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getEventDispatcher,MethodDescriptor((): org.apache.batik.gvt.event.EventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public org.apache.batik.gvt.event.EventDispatcher getEventDispatcher() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getExternalResourceSecurity,MethodDescriptor((org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): org.apache.batik.bridge.ExternalResourceSecurity),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public org.apache.batik.bridge.ExternalResourceSecurity getExternalResourceSecurity(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getLanguages,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public java.lang.String getLanguages() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getLighterFontWeight,MethodDescriptor((float): float),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public float getLighterFontWeight(float) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getMedia,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public java.lang.String getMedia() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getMediumFontSize,MethodDescriptor((): float),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public float getMediumFontSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getPixelToMM,MethodDescriptor((): float),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public float getPixelToMM() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getPixelUnitToMillimeter,MethodDescriptor((): float),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public float getPixelUnitToMillimeter() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getScriptSecurity,MethodDescriptor((java.lang.String, org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL): org.apache.batik.bridge.ScriptSecurity),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public org.apache.batik.bridge.ScriptSecurity getScriptSecurity(java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getTransform,MethodDescriptor((): java.awt.geom.AffineTransform),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public java.awt.geom.AffineTransform getTransform() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getUserStyleSheetURI,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public java.lang.String getUserStyleSheetURI() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getViewportSize,MethodDescriptor((): java.awt.geom.Dimension2D),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public java.awt.geom.Dimension2D getViewportSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),getXMLParserClassName,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public java.lang.String getXMLParserClassName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),handleElement,MethodDescriptor((org.w3c.dom.Element, java.lang.Object): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void handleElement(org.w3c.dom.Element,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),hasFeature,MethodDescriptor((java.lang.String): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public boolean hasFeature(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),invokeAndWait,MethodDescriptor((java.lang.Runnable): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ protected void invokeAndWait(java.lang.Runnable) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),isXMLParserValidating,MethodDescriptor((): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public boolean isXMLParserValidating() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),openLink,MethodDescriptor((org.w3c.dom.svg.SVGAElement): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void openLink(org.w3c.dom.svg.SVGAElement) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),registerExtension,MethodDescriptor((org.apache.batik.bridge.BridgeExtension): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void registerExtension(org.apache.batik.bridge.BridgeExtension) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),setSVGCursor,MethodDescriptor((java.awt.Cursor): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void setSVGCursor(java.awt.Cursor) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),setTextSelection,MethodDescriptor((org.apache.batik.gvt.text.Mark, org.apache.batik.gvt.text.Mark): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void setTextSelection(org.apache.batik.gvt.text.Mark,org.apache.batik.gvt.text.Mark) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),setTransform,MethodDescriptor((java.awt.geom.AffineTransform): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void setTransform(java.awt.geom.AffineTransform) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),showAlert,MethodDescriptor((java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public void showAlert(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),showConfirm,MethodDescriptor((java.lang.String): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public boolean showConfirm(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),showPrompt,MethodDescriptor((java.lang.String): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public java.lang.String showPrompt(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),showPrompt,MethodDescriptor((java.lang.String, java.lang.String): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public java.lang.String showPrompt(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$BridgeUserAgentWrapper),supportExtension,MethodDescriptor((java.lang.String): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper{ public boolean supportExtension(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$JSVGComponentListener),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$JSVGComponentListener{ protected void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$JSVGComponentListener),access$100,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$JSVGComponentListener): org.apache.batik.swing.svg.AbstractJSVGComponent),org.apache.batik.swing.svg.AbstractJSVGComponent$JSVGComponentListener{ static org.apache.batik.swing.svg.AbstractJSVGComponent access$100(org.apache.batik.swing.svg.AbstractJSVGComponent$JSVGComponentListener) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$JSVGComponentListener),componentResized,MethodDescriptor((java.awt.event.ComponentEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$JSVGComponentListener{ public void componentResized(java.awt.event.ComponentEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$JSVGComponentListener),componentTransformChanged,MethodDescriptor((java.awt.event.ComponentEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$JSVGComponentListener{ public void componentTransformChanged(java.awt.event.ComponentEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$JSVGComponentListener),updateMatrix,MethodDescriptor((java.awt.geom.AffineTransform): void),org.apache.batik.swing.svg.AbstractJSVGComponent$JSVGComponentListener{ public void updateMatrix(java.awt.geom.AffineTransform) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),<init>,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ protected void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),access$1000,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener): org.apache.batik.swing.svg.AbstractJSVGComponent),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ static org.apache.batik.swing.svg.AbstractJSVGComponent access$1000(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),dispatchKeyPressed,MethodDescriptor((java.awt.event.KeyEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ protected void dispatchKeyPressed(java.awt.event.KeyEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),dispatchKeyReleased,MethodDescriptor((java.awt.event.KeyEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ protected void dispatchKeyReleased(java.awt.event.KeyEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),dispatchKeyTyped,MethodDescriptor((java.awt.event.KeyEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ protected void dispatchKeyTyped(java.awt.event.KeyEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),dispatchMouseClicked,MethodDescriptor((java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ protected void dispatchMouseClicked(java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),dispatchMouseDragged,MethodDescriptor((java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ protected void dispatchMouseDragged(java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),dispatchMouseEntered,MethodDescriptor((java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ protected void dispatchMouseEntered(java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),dispatchMouseExited,MethodDescriptor((java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ protected void dispatchMouseExited(java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),dispatchMouseMoved,MethodDescriptor((java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ protected void dispatchMouseMoved(java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),dispatchMousePressed,MethodDescriptor((java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ protected void dispatchMousePressed(java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),dispatchMouseReleased,MethodDescriptor((java.awt.event.MouseEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ protected void dispatchMouseReleased(java.awt.event.MouseEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),documentLoadingCancelled,MethodDescriptor((org.apache.batik.swing.svg.SVGDocumentLoaderEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void documentLoadingCancelled(org.apache.batik.swing.svg.SVGDocumentLoaderEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),documentLoadingCompleted,MethodDescriptor((org.apache.batik.swing.svg.SVGDocumentLoaderEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void documentLoadingCompleted(org.apache.batik.swing.svg.SVGDocumentLoaderEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),documentLoadingFailed,MethodDescriptor((org.apache.batik.swing.svg.SVGDocumentLoaderEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void documentLoadingFailed(org.apache.batik.swing.svg.SVGDocumentLoaderEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),documentLoadingStarted,MethodDescriptor((org.apache.batik.swing.svg.SVGDocumentLoaderEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void documentLoadingStarted(org.apache.batik.swing.svg.SVGDocumentLoaderEvent) }) => CompileTimePure
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),gvtBuildCancelled,MethodDescriptor((org.apache.batik.swing.svg.GVTTreeBuilderEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void gvtBuildCancelled(org.apache.batik.swing.svg.GVTTreeBuilderEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),gvtBuildCompleted,MethodDescriptor((org.apache.batik.swing.svg.GVTTreeBuilderEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void gvtBuildCompleted(org.apache.batik.swing.svg.GVTTreeBuilderEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),gvtBuildFailed,MethodDescriptor((org.apache.batik.swing.svg.GVTTreeBuilderEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void gvtBuildFailed(org.apache.batik.swing.svg.GVTTreeBuilderEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),gvtBuildStarted,MethodDescriptor((org.apache.batik.swing.svg.GVTTreeBuilderEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void gvtBuildStarted(org.apache.batik.swing.svg.GVTTreeBuilderEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),gvtRenderingCancelled,MethodDescriptor((org.apache.batik.swing.gvt.GVTTreeRendererEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void gvtRenderingCancelled(org.apache.batik.swing.gvt.GVTTreeRendererEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),gvtRenderingCompleted,MethodDescriptor((org.apache.batik.swing.gvt.GVTTreeRendererEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void gvtRenderingCompleted(org.apache.batik.swing.gvt.GVTTreeRendererEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),gvtRenderingFailed,MethodDescriptor((org.apache.batik.swing.gvt.GVTTreeRendererEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void gvtRenderingFailed(org.apache.batik.swing.gvt.GVTTreeRendererEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),managerResumed,MethodDescriptor((org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void managerResumed(org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),managerStarted,MethodDescriptor((org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void managerStarted(org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),managerStopped,MethodDescriptor((org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void managerStopped(org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),managerSuspended,MethodDescriptor((org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void managerSuspended(org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),svgLoadEventDispatchCancelled,MethodDescriptor((org.apache.batik.swing.svg.SVGLoadEventDispatcherEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void svgLoadEventDispatchCancelled(org.apache.batik.swing.svg.SVGLoadEventDispatcherEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),svgLoadEventDispatchCompleted,MethodDescriptor((org.apache.batik.swing.svg.SVGLoadEventDispatcherEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void svgLoadEventDispatchCompleted(org.apache.batik.swing.svg.SVGLoadEventDispatcherEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),svgLoadEventDispatchFailed,MethodDescriptor((org.apache.batik.swing.svg.SVGLoadEventDispatcherEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void svgLoadEventDispatchFailed(org.apache.batik.swing.svg.SVGLoadEventDispatcherEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),svgLoadEventDispatchStarted,MethodDescriptor((org.apache.batik.swing.svg.SVGLoadEventDispatcherEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void svgLoadEventDispatchStarted(org.apache.batik.swing.svg.SVGLoadEventDispatcherEvent) }) => CompileTimePure
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),updateCompleted,MethodDescriptor((org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void updateCompleted(org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),updateFailed,MethodDescriptor((org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void updateFailed(org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent$SVGListener),updateStarted,MethodDescriptor((org.apache.batik.bridge.UpdateManagerEvent): void),org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener{ public void updateStarted(org.apache.batik.bridge.UpdateManagerEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),<clinit>,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),<init>,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),<init>,MethodDescriptor((org.apache.batik.swing.svg.SVGUserAgent, boolean, boolean): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void <init>(org.apache.batik.swing.svg.SVGUserAgent,boolean,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$000,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ static void access$000(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$1102,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, boolean): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent{ static boolean access$1102(org.apache.batik.swing.svg.AbstractJSVGComponent,boolean) }) => DContextuallyPure
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$1200,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent{ static boolean access$1200(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$1302,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, java.awt.image.BufferedImage): java.awt.image.BufferedImage),org.apache.batik.swing.svg.AbstractJSVGComponent{ static java.awt.image.BufferedImage access$1302(org.apache.batik.swing.svg.AbstractJSVGComponent,java.awt.image.BufferedImage) }) => DContextuallySideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$1402,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, java.awt.image.BufferedImage): java.awt.image.BufferedImage),org.apache.batik.swing.svg.AbstractJSVGComponent{ static java.awt.image.BufferedImage access$1402(org.apache.batik.swing.svg.AbstractJSVGComponent,java.awt.image.BufferedImage) }) => DContextuallySideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$1502,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, java.awt.geom.AffineTransform): java.awt.geom.AffineTransform),org.apache.batik.swing.svg.AbstractJSVGComponent{ static java.awt.geom.AffineTransform access$1502(org.apache.batik.swing.svg.AbstractJSVGComponent,java.awt.geom.AffineTransform) }) => DContextuallySideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$1600,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent{ static boolean access$1600(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$1702,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, boolean): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent{ static boolean access$1702(org.apache.batik.swing.svg.AbstractJSVGComponent,boolean) }) => DContextuallyPure
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$1800,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.event.AWTEventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.event.AWTEventDispatcher access$1800(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$1900,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.event.AWTEventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.event.AWTEventDispatcher access$1900(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$2000,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.event.AWTEventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.event.AWTEventDispatcher access$2000(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$202,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, org.apache.batik.gvt.GraphicsNode): org.apache.batik.gvt.GraphicsNode),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.GraphicsNode access$202(org.apache.batik.swing.svg.AbstractJSVGComponent,org.apache.batik.gvt.GraphicsNode) }) => DContextuallySideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$2100,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.event.AWTEventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.event.AWTEventDispatcher access$2100(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$2200,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.event.AWTEventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.event.AWTEventDispatcher access$2200(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$2300,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.event.AWTEventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.event.AWTEventDispatcher access$2300(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$2400,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.event.AWTEventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.event.AWTEventDispatcher access$2400(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$2500,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.event.AWTEventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.event.AWTEventDispatcher access$2500(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$2600,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.event.AWTEventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.event.AWTEventDispatcher access$2600(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$2700,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.event.AWTEventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.event.AWTEventDispatcher access$2700(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$2800,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.event.AWTEventDispatcher),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.event.AWTEventDispatcher access$2800(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$2900,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ static void access$2900(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$300,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent{ static boolean access$300(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$3000,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): java.awt.geom.AffineTransform),org.apache.batik.swing.svg.AbstractJSVGComponent{ static java.awt.geom.AffineTransform access$3000(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$400,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ static void access$400(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$502,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, java.awt.image.BufferedImage): java.awt.image.BufferedImage),org.apache.batik.swing.svg.AbstractJSVGComponent{ static java.awt.image.BufferedImage access$502(org.apache.batik.swing.svg.AbstractJSVGComponent,java.awt.image.BufferedImage) }) => DContextuallySideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$602,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, java.awt.image.BufferedImage): java.awt.image.BufferedImage),org.apache.batik.swing.svg.AbstractJSVGComponent{ static java.awt.image.BufferedImage access$602(org.apache.batik.swing.svg.AbstractJSVGComponent,java.awt.image.BufferedImage) }) => DContextuallySideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$700,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ static void access$700(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$802,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent, java.awt.image.BufferedImage): java.awt.image.BufferedImage),org.apache.batik.swing.svg.AbstractJSVGComponent{ static java.awt.image.BufferedImage access$802(org.apache.batik.swing.svg.AbstractJSVGComponent,java.awt.image.BufferedImage) }) => DContextuallySideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),access$900,MethodDescriptor((org.apache.batik.swing.svg.AbstractJSVGComponent): org.apache.batik.gvt.renderer.ImageRenderer),org.apache.batik.swing.svg.AbstractJSVGComponent{ static org.apache.batik.gvt.renderer.ImageRenderer access$900(org.apache.batik.swing.svg.AbstractJSVGComponent) }) => DSideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),addGVTTreeBuilderListener,MethodDescriptor((org.apache.batik.swing.svg.GVTTreeBuilderListener): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void addGVTTreeBuilderListener(org.apache.batik.swing.svg.GVTTreeBuilderListener) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),addLinkActivationListener,MethodDescriptor((org.apache.batik.swing.svg.LinkActivationListener): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void addLinkActivationListener(org.apache.batik.swing.svg.LinkActivationListener) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),addSVGDocumentLoaderListener,MethodDescriptor((org.apache.batik.swing.svg.SVGDocumentLoaderListener): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void addSVGDocumentLoaderListener(org.apache.batik.swing.svg.SVGDocumentLoaderListener) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),addSVGLoadEventDispatcherListener,MethodDescriptor((org.apache.batik.swing.svg.SVGLoadEventDispatcherListener): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void addSVGLoadEventDispatcherListener(org.apache.batik.swing.svg.SVGLoadEventDispatcherListener) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),addUpdateManagerListener,MethodDescriptor((org.apache.batik.bridge.UpdateManagerListener): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void addUpdateManagerListener(org.apache.batik.bridge.UpdateManagerListener) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),calculateViewingTransform,MethodDescriptor((java.lang.String, org.w3c.dom.svg.SVGSVGElement): java.awt.geom.AffineTransform),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected java.awt.geom.AffineTransform calculateViewingTransform(java.lang.String,org.w3c.dom.svg.SVGSVGElement) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),class$,MethodDescriptor((java.lang.String): java.lang.Class),org.apache.batik.swing.svg.AbstractJSVGComponent{ static java.lang.Class class$(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),clearUserSetDisableInteractions,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void clearUserSetDisableInteractions() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),computeRenderingTransform,MethodDescriptor((): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected boolean computeRenderingTransform() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),createBridgeContext,MethodDescriptor((org.apache.batik.dom.svg.SVGOMDocument): org.apache.batik.bridge.BridgeContext),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected org.apache.batik.bridge.BridgeContext createBridgeContext(org.apache.batik.dom.svg.SVGOMDocument) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),createImageRenderer,MethodDescriptor((): org.apache.batik.gvt.renderer.ImageRenderer),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected org.apache.batik.gvt.renderer.ImageRenderer createImageRenderer() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),createListener,MethodDescriptor((): org.apache.batik.swing.gvt.AbstractJGVTComponent$Listener),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected org.apache.batik.swing.gvt.AbstractJGVTComponent$Listener createListener() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),createUserAgent,MethodDescriptor((): org.apache.batik.bridge.UserAgent),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected org.apache.batik.bridge.UserAgent createUserAgent() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),dispose,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void dispose() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),flushImageCache,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void flushImageCache() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),getCanvasGraphicsNode,MethodDescriptor((): org.apache.batik.gvt.CanvasGraphicsNode),org.apache.batik.swing.svg.AbstractJSVGComponent{ public org.apache.batik.gvt.CanvasGraphicsNode getCanvasGraphicsNode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),getCanvasGraphicsNode,MethodDescriptor((org.apache.batik.gvt.GraphicsNode): org.apache.batik.gvt.CanvasGraphicsNode),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected org.apache.batik.gvt.CanvasGraphicsNode getCanvasGraphicsNode(org.apache.batik.gvt.GraphicsNode) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),getFragmentIdentifier,MethodDescriptor((): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent{ public java.lang.String getFragmentIdentifier() }) => SideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),getRecenterOnResize,MethodDescriptor((): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent{ public boolean getRecenterOnResize() }) => SideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),getSVGDocument,MethodDescriptor((): org.w3c.dom.svg.SVGDocument),org.apache.batik.swing.svg.AbstractJSVGComponent{ public org.w3c.dom.svg.SVGDocument getSVGDocument() }) => SideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),getSVGDocumentSize,MethodDescriptor((): java.awt.geom.Dimension2D),org.apache.batik.swing.svg.AbstractJSVGComponent{ public java.awt.geom.Dimension2D getSVGDocumentSize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),getUpdateManager,MethodDescriptor((): org.apache.batik.bridge.UpdateManager),org.apache.batik.swing.svg.AbstractJSVGComponent{ public org.apache.batik.bridge.UpdateManager getUpdateManager() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),getViewBoxTransform,MethodDescriptor((): java.awt.geom.AffineTransform),org.apache.batik.swing.svg.AbstractJSVGComponent{ public java.awt.geom.AffineTransform getViewBoxTransform() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),getViewingTransform,MethodDescriptor((): java.awt.geom.AffineTransform),org.apache.batik.swing.svg.AbstractJSVGComponent{ public java.awt.geom.AffineTransform getViewingTransform() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),handleException,MethodDescriptor((java.lang.Exception): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected void handleException(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),installSVGDocument,MethodDescriptor((org.w3c.dom.svg.SVGDocument): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected void installSVGDocument(org.w3c.dom.svg.SVGDocument) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),isDynamic,MethodDescriptor((): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent{ public boolean isDynamic() }) => SideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),isInteractive,MethodDescriptor((): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent{ public boolean isInteractive() }) => SideEffectFree
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),loadSVGDocument,MethodDescriptor((java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void loadSVGDocument(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),removeGVTTreeBuilderListener,MethodDescriptor((org.apache.batik.swing.svg.GVTTreeBuilderListener): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void removeGVTTreeBuilderListener(org.apache.batik.swing.svg.GVTTreeBuilderListener) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),removeLinkActivationListener,MethodDescriptor((org.apache.batik.swing.svg.LinkActivationListener): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void removeLinkActivationListener(org.apache.batik.swing.svg.LinkActivationListener) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),removeSVGDocumentLoaderListener,MethodDescriptor((org.apache.batik.swing.svg.SVGDocumentLoaderListener): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void removeSVGDocumentLoaderListener(org.apache.batik.swing.svg.SVGDocumentLoaderListener) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),removeSVGLoadEventDispatcherListener,MethodDescriptor((org.apache.batik.swing.svg.SVGLoadEventDispatcherListener): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void removeSVGLoadEventDispatcherListener(org.apache.batik.swing.svg.SVGLoadEventDispatcherListener) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),removeUpdateManagerListener,MethodDescriptor((org.apache.batik.bridge.UpdateManagerListener): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void removeUpdateManagerListener(org.apache.batik.bridge.UpdateManagerListener) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),renderGVTTree,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected void renderGVTTree() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),resumeProcessing,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void resumeProcessing() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setAnimationLimitingCPU,MethodDescriptor((float): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void setAnimationLimitingCPU(float) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setAnimationLimitingFPS,MethodDescriptor((float): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void setAnimationLimitingFPS(float) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setAnimationLimitingNone,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void setAnimationLimitingNone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setBridgeContextAnimationLimitingMode,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected void setBridgeContextAnimationLimitingMode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setDisableInteractions,MethodDescriptor((boolean): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void setDisableInteractions(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setDocument,MethodDescriptor((org.w3c.dom.Document): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void setDocument(org.w3c.dom.Document) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setDocumentState,MethodDescriptor((int): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void setDocumentState(int) }) => ExternallyPure
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setFragmentIdentifier,MethodDescriptor((java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void setFragmentIdentifier(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setGraphicsNode,MethodDescriptor((org.apache.batik.gvt.GraphicsNode, boolean): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void setGraphicsNode(org.apache.batik.gvt.GraphicsNode,boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setMySize,MethodDescriptor((java.awt.Dimension): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void setMySize(java.awt.Dimension) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setRecenterOnResize,MethodDescriptor((boolean): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void setRecenterOnResize(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),setSVGDocument,MethodDescriptor((org.w3c.dom.svg.SVGDocument): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void setSVGDocument(org.w3c.dom.svg.SVGDocument) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),showAlert,MethodDescriptor((java.lang.String): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void showAlert(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),showConfirm,MethodDescriptor((java.lang.String): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent{ public boolean showConfirm(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),showPrompt,MethodDescriptor((java.lang.String): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent{ public java.lang.String showPrompt(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),showPrompt,MethodDescriptor((java.lang.String, java.lang.String): java.lang.String),org.apache.batik.swing.svg.AbstractJSVGComponent{ public java.lang.String showPrompt(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),startDocumentLoader,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ private void startDocumentLoader() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),startGVTTreeBuilder,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected void startGVTTreeBuilder() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),startSVGLoadEventDispatcher,MethodDescriptor((org.apache.batik.gvt.GraphicsNode): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected void startSVGLoadEventDispatcher(org.apache.batik.gvt.GraphicsNode) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),stopProcessing,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void stopProcessing() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),stopThenRun,MethodDescriptor((java.lang.Runnable): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected void stopThenRun(java.lang.Runnable) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),suspendProcessing,MethodDescriptor((): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void suspendProcessing() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),updateRenderingTransform,MethodDescriptor((): boolean),org.apache.batik.swing.svg.AbstractJSVGComponent{ protected boolean updateRenderingTransform() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/apache/batik/swing/svg/AbstractJSVGComponent),updateZoomAndPanEnable,MethodDescriptor((org.w3c.dom.Document): void),org.apache.batik.swing.svg.AbstractJSVGComponent{ public void updateZoomAndPanEnable(org.w3c.dom.Document) }) => ImpureByAnalysis
