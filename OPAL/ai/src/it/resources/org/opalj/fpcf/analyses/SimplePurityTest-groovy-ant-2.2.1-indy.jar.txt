DefinedMethod(ObjectType(groovy/util/AntBuilder),<clinit>,MethodDescriptor((): void),groovy.util.AntBuilder{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),<init>,MethodDescriptor((): void),groovy.util.AntBuilder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),<init>,MethodDescriptor((org.apache.tools.ant.Project): void),groovy.util.AntBuilder{ public void <init>(org.apache.tools.ant.Project) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),<init>,MethodDescriptor((org.apache.tools.ant.Project, org.apache.tools.ant.Target): void),groovy.util.AntBuilder{ public void <init>(org.apache.tools.ant.Project,org.apache.tools.ant.Target) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),<init>,MethodDescriptor((org.apache.tools.ant.Task): void),groovy.util.AntBuilder{ public void <init>(org.apache.tools.ant.Task) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),buildAttributes,MethodDescriptor((java.util.Map): org.xml.sax.Attributes),groovy.util.AntBuilder{ protected static org.xml.sax.Attributes buildAttributes(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),createNode,MethodDescriptor((java.lang.Object): java.lang.Object),groovy.util.AntBuilder{ protected java.lang.Object createNode(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),createNode,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),groovy.util.AntBuilder{ protected java.lang.Object createNode(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),createNode,MethodDescriptor((java.lang.Object, java.util.Map): java.lang.Object),groovy.util.AntBuilder{ protected java.lang.Object createNode(java.lang.Object,java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),createNode,MethodDescriptor((java.lang.Object, java.util.Map, java.lang.Object): java.lang.Object),groovy.util.AntBuilder{ protected java.lang.Object createNode(java.lang.Object,java.util.Map,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),createProject,MethodDescriptor((): org.apache.tools.ant.Project),groovy.util.AntBuilder{ protected static org.apache.tools.ant.Project createProject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),doInvokeMethod,MethodDescriptor((java.lang.String, java.lang.Object, java.lang.Object): java.lang.Object),groovy.util.AntBuilder{ protected java.lang.Object doInvokeMethod(java.lang.String,java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),getAntProject,MethodDescriptor((): org.apache.tools.ant.Project),groovy.util.AntBuilder{ public org.apache.tools.ant.Project getAntProject() }) => SideEffectFree
DefinedMethod(ObjectType(groovy/util/AntBuilder),getAntXmlContext,MethodDescriptor((): org.apache.tools.ant.helper.AntXMLContext),groovy.util.AntBuilder{ public org.apache.tools.ant.helper.AntXMLContext getAntXmlContext() }) => SideEffectFree
DefinedMethod(ObjectType(groovy/util/AntBuilder),getProject,MethodDescriptor((): org.apache.tools.ant.Project),groovy.util.AntBuilder{ public org.apache.tools.ant.Project getProject() }) => SideEffectFree
DefinedMethod(ObjectType(groovy/util/AntBuilder),isSaveStreams,MethodDescriptor((): boolean),groovy.util.AntBuilder{ public boolean isSaveStreams() }) => SideEffectFree
DefinedMethod(ObjectType(groovy/util/AntBuilder),nodeCompleted,MethodDescriptor((java.lang.Object, java.lang.Object): void),groovy.util.AntBuilder{ protected void nodeCompleted(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),onStartTarget,MethodDescriptor((org.xml.sax.Attributes, java.lang.String, java.lang.String): org.apache.tools.ant.Target),groovy.util.AntBuilder{ private org.apache.tools.ant.Target onStartTarget(org.xml.sax.Attributes,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),performTask,MethodDescriptor((org.apache.tools.ant.Task): java.lang.Object),groovy.util.AntBuilder{ private java.lang.Object performTask(org.apache.tools.ant.Task) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilder),setParent,MethodDescriptor((java.lang.Object, java.lang.Object): void),groovy.util.AntBuilder{ protected void setParent(java.lang.Object,java.lang.Object) }) => Pure
DefinedMethod(ObjectType(groovy/util/AntBuilder),setSaveStreams,MethodDescriptor((boolean): void),groovy.util.AntBuilder{ public void setSaveStreams(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(groovy/util/AntBuilder),setText,MethodDescriptor((java.lang.Object, java.lang.String): void),groovy.util.AntBuilder{ protected void setText(java.lang.Object,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/AntBuilderLocator),<init>,MethodDescriptor((): void),groovy.util.AntBuilderLocator{ void <init>() }) => Pure
DefinedMethod(ObjectType(groovy/util/AntBuilderLocator),getColumnNumber,MethodDescriptor((): int),groovy.util.AntBuilderLocator{ public int getColumnNumber() }) => Pure
DefinedMethod(ObjectType(groovy/util/AntBuilderLocator),getLineNumber,MethodDescriptor((): int),groovy.util.AntBuilderLocator{ public int getLineNumber() }) => Pure
DefinedMethod(ObjectType(groovy/util/AntBuilderLocator),getPublicId,MethodDescriptor((): java.lang.String),groovy.util.AntBuilderLocator{ public java.lang.String getPublicId() }) => Pure
DefinedMethod(ObjectType(groovy/util/AntBuilderLocator),getSystemId,MethodDescriptor((): java.lang.String),groovy.util.AntBuilderLocator{ public java.lang.String getSystemId() }) => Pure
DefinedMethod(ObjectType(groovy/util/FileNameFinder$_getFileNames_closure1),$getStaticMetaClass,MethodDescriptor((): groovy.lang.MetaClass),groovy.util.FileNameFinder$_getFileNames_closure1{ protected groovy.lang.MetaClass $getStaticMetaClass() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder$_getFileNames_closure1),<clinit>,MethodDescriptor((): void),groovy.util.FileNameFinder$_getFileNames_closure1{ static void <clinit>() }) => Pure
DefinedMethod(ObjectType(groovy/util/FileNameFinder$_getFileNames_closure1),<init>,MethodDescriptor((java.lang.Object, java.lang.Object, groovy.lang.Reference): void),groovy.util.FileNameFinder$_getFileNames_closure1{ public void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder$_getFileNames_closure1),__$swapInit,MethodDescriptor((): void),groovy.util.FileNameFinder$_getFileNames_closure1{ public static void __$swapInit() }) => Pure
DefinedMethod(ObjectType(groovy/util/FileNameFinder$_getFileNames_closure1),class$,MethodDescriptor((java.lang.String): java.lang.Class),groovy.util.FileNameFinder$_getFileNames_closure1{ static java.lang.Class class$(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder$_getFileNames_closure1),doCall,MethodDescriptor((): java.lang.Object),groovy.util.FileNameFinder$_getFileNames_closure1{ public java.lang.Object doCall() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder$_getFileNames_closure1),doCall,MethodDescriptor((java.lang.Object): java.lang.Object),groovy.util.FileNameFinder$_getFileNames_closure1{ public java.lang.Object doCall(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder$_getFileNames_closure1),getArgs,MethodDescriptor((): java.util.Map),groovy.util.FileNameFinder$_getFileNames_closure1{ public java.util.Map getArgs() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),$getStaticMetaClass,MethodDescriptor((): groovy.lang.MetaClass),groovy.util.FileNameFinder{ protected groovy.lang.MetaClass $getStaticMetaClass() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),<clinit>,MethodDescriptor((): void),groovy.util.FileNameFinder{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),<init>,MethodDescriptor((): void),groovy.util.FileNameFinder{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),__$swapInit,MethodDescriptor((): void),groovy.util.FileNameFinder{ public static void __$swapInit() }) => Pure
DefinedMethod(ObjectType(groovy/util/FileNameFinder),class$,MethodDescriptor((java.lang.String): java.lang.Class),groovy.util.FileNameFinder{ static java.lang.Class class$(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),getFileNames,MethodDescriptor((java.lang.String, java.lang.String): java.util.List),groovy.util.FileNameFinder{ public java.util.List getFileNames(java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),getFileNames,MethodDescriptor((java.lang.String, java.lang.String, java.lang.String): java.util.List),groovy.util.FileNameFinder{ public java.util.List getFileNames(java.lang.String,java.lang.String,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),getFileNames,MethodDescriptor((java.util.Map): java.util.List),groovy.util.FileNameFinder{ public java.util.List getFileNames(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),getMetaClass,MethodDescriptor((): groovy.lang.MetaClass),groovy.util.FileNameFinder{ public groovy.lang.MetaClass getMetaClass() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),getProperty,MethodDescriptor((java.lang.String): java.lang.Object),groovy.util.FileNameFinder{ public java.lang.Object getProperty(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),invokeMethod,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),groovy.util.FileNameFinder{ public java.lang.Object invokeMethod(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),setMetaClass,MethodDescriptor((groovy.lang.MetaClass): void),groovy.util.FileNameFinder{ public void setMetaClass(groovy.lang.MetaClass) }) => ExternallyPure
DefinedMethod(ObjectType(groovy/util/FileNameFinder),setProperty,MethodDescriptor((java.lang.String, java.lang.Object): void),groovy.util.FileNameFinder{ public void setProperty(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),super$1$clone,MethodDescriptor((): java.lang.Object),groovy.util.FileNameFinder{ public java.lang.Object super$1$clone() }) => SideEffectFree
DefinedMethod(ObjectType(groovy/util/FileNameFinder),super$1$equals,MethodDescriptor((java.lang.Object): boolean),groovy.util.FileNameFinder{ public boolean super$1$equals(java.lang.Object) }) => SideEffectFree
DefinedMethod(ObjectType(groovy/util/FileNameFinder),super$1$finalize,MethodDescriptor((): void),groovy.util.FileNameFinder{ public void super$1$finalize() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),super$1$getClass,MethodDescriptor((): java.lang.Class),groovy.util.FileNameFinder{ public java.lang.Class super$1$getClass() }) => SideEffectFree
DefinedMethod(ObjectType(groovy/util/FileNameFinder),super$1$hashCode,MethodDescriptor((): int),groovy.util.FileNameFinder{ public int super$1$hashCode() }) => SideEffectFree
DefinedMethod(ObjectType(groovy/util/FileNameFinder),super$1$notify,MethodDescriptor((): void),groovy.util.FileNameFinder{ public void super$1$notify() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),super$1$notifyAll,MethodDescriptor((): void),groovy.util.FileNameFinder{ public void super$1$notifyAll() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),super$1$toString,MethodDescriptor((): java.lang.String),groovy.util.FileNameFinder{ public java.lang.String super$1$toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),super$1$wait,MethodDescriptor((): void),groovy.util.FileNameFinder{ public void super$1$wait() }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),super$1$wait,MethodDescriptor((long): void),groovy.util.FileNameFinder{ public void super$1$wait(long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),super$1$wait,MethodDescriptor((long, int): void),groovy.util.FileNameFinder{ public void super$1$wait(long,int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),this$dist$get$1,MethodDescriptor((java.lang.String): java.lang.Object),groovy.util.FileNameFinder{ public java.lang.Object this$dist$get$1(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),this$dist$invoke$1,MethodDescriptor((java.lang.String, java.lang.Object): java.lang.Object),groovy.util.FileNameFinder{ public java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(groovy/util/FileNameFinder),this$dist$set$1,MethodDescriptor((java.lang.String, java.lang.Object): void),groovy.util.FileNameFinder{ public void this$dist$set$1(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),<init>,MethodDescriptor((java.util.Map): void),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public void <init>(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),<init>,MethodDescriptor((org.apache.tools.ant.Project): void),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public void <init>(org.apache.tools.ant.Project) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),clear,MethodDescriptor((): void),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public void clear() }) => DExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),clone,MethodDescriptor((): java.lang.Object),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public java.lang.Object clone() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),contains,MethodDescriptor((java.lang.Object): boolean),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public boolean contains(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),containsKey,MethodDescriptor((java.lang.Object): boolean),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public boolean containsKey(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),containsValue,MethodDescriptor((java.lang.Object): boolean),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public boolean containsValue(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),elements,MethodDescriptor((): java.util.Enumeration),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public java.util.Enumeration elements() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),entrySet,MethodDescriptor((): java.util.Set),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public java.util.Set entrySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),equals,MethodDescriptor((java.lang.Object): boolean),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public boolean equals(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),get,MethodDescriptor((java.lang.Object): java.lang.Object),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public java.lang.Object get(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),hashCode,MethodDescriptor((): int),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public int hashCode() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),isEmpty,MethodDescriptor((): boolean),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public boolean isEmpty() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),keySet,MethodDescriptor((): java.util.Set),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public java.util.Set keySet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),keys,MethodDescriptor((): java.util.Enumeration),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public java.util.Enumeration keys() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),put,MethodDescriptor((java.lang.Object, java.lang.Object): java.lang.Object),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public java.lang.Object put(java.lang.Object,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),putAll,MethodDescriptor((java.util.Map): void),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public void putAll(java.util.Map) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),remove,MethodDescriptor((java.lang.Object): java.lang.Object),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public java.lang.Object remove(java.lang.Object) }) => DExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),size,MethodDescriptor((): int),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public int size() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),toString,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public java.lang.String toString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/AntProjectPropertiesDelegate),values,MethodDescriptor((): java.util.Collection),org.codehaus.groovy.ant.AntProjectPropertiesDelegate{ public java.util.Collection values() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),<clinit>,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),<init>,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),createClassLoader,MethodDescriptor((): groovy.lang.GroovyClassLoader),org.codehaus.groovy.ant.CompileTaskSupport{ protected groovy.lang.GroovyClassLoader createClassLoader() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),createClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path createClasspath() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),createConfiguration,MethodDescriptor((): org.codehaus.groovy.control.CompilerConfiguration),org.codehaus.groovy.ant.CompileTaskSupport{ public org.codehaus.groovy.control.CompilerConfiguration createConfiguration() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),createSrc,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path createSrc() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),execute,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),getClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path getClasspath() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),getFailonerror,MethodDescriptor((): boolean),org.codehaus.groovy.ant.CompileTaskSupport{ public boolean getFailonerror() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),getSrcdir,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path getSrcdir() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),handleException,MethodDescriptor((java.lang.Exception): void),org.codehaus.groovy.ant.CompileTaskSupport{ protected void handleException(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),setClasspath,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setClasspath(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),setClasspathRef,MethodDescriptor((org.apache.tools.ant.types.Reference): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setClasspathRef(org.apache.tools.ant.types.Reference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),setDestdir,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setDestdir(java.io.File) }) => DExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),setFailonerror,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setFailonerror(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),setSrcdir,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setSrcdir(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/CompileTaskSupport),validate,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ protected void validate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileIterator),<init>,MethodDescriptor((org.apache.tools.ant.Project, java.util.Iterator): void),org.codehaus.groovy.ant.FileIterator{ public void <init>(org.apache.tools.ant.Project,java.util.Iterator) }) => Pure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileIterator),<init>,MethodDescriptor((org.apache.tools.ant.Project, java.util.Iterator, boolean): void),org.codehaus.groovy.ant.FileIterator{ public void <init>(org.apache.tools.ant.Project,java.util.Iterator,boolean) }) => Pure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileIterator),hasNext,MethodDescriptor((): boolean),org.codehaus.groovy.ant.FileIterator{ public boolean hasNext() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileIterator),next,MethodDescriptor((): java.lang.Object),org.codehaus.groovy.ant.FileIterator{ public java.lang.Object next() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileIterator),remove,MethodDescriptor((): void),org.codehaus.groovy.ant.FileIterator{ public void remove() }) => DPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileIterator),setNextObject,MethodDescriptor((): boolean),org.codehaus.groovy.ant.FileIterator{ private boolean setNextObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileScanner),<init>,MethodDescriptor((): void),org.codehaus.groovy.ant.FileScanner{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileScanner),<init>,MethodDescriptor((org.apache.tools.ant.Project): void),org.codehaus.groovy.ant.FileScanner{ public void <init>(org.apache.tools.ant.Project) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileScanner),addFileset,MethodDescriptor((org.apache.tools.ant.types.FileSet): void),org.codehaus.groovy.ant.FileScanner{ public void addFileset(org.apache.tools.ant.types.FileSet) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileScanner),clear,MethodDescriptor((): void),org.codehaus.groovy.ant.FileScanner{ public void clear() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileScanner),directories,MethodDescriptor((): java.util.Iterator),org.codehaus.groovy.ant.FileScanner{ public java.util.Iterator directories() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileScanner),hasFiles,MethodDescriptor((): boolean),org.codehaus.groovy.ant.FileScanner{ public boolean hasFiles() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileScanner),iterator,MethodDescriptor((): java.util.Iterator),org.codehaus.groovy.ant.FileScanner{ public java.util.Iterator iterator() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileSystemCompilerFacade),<init>,MethodDescriptor((): void),org.codehaus.groovy.ant.FileSystemCompilerFacade{ public void <init>() }) => Pure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/FileSystemCompilerFacade),main,MethodDescriptor((java.lang.String[]): void),org.codehaus.groovy.ant.FileSystemCompilerFacade{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),<init>,MethodDescriptor((): void),org.codehaus.groovy.ant.GenerateStubsTask{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),compile,MethodDescriptor((): void),org.codehaus.groovy.ant.GenerateStubsTask{ protected void compile() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),createClassLoader,MethodDescriptor((): groovy.lang.GroovyClassLoader),org.codehaus.groovy.ant.CompileTaskSupport{ protected groovy.lang.GroovyClassLoader createClassLoader() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),createClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path createClasspath() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),createConfiguration,MethodDescriptor((): org.codehaus.groovy.control.CompilerConfiguration),org.codehaus.groovy.ant.CompileTaskSupport{ public org.codehaus.groovy.control.CompilerConfiguration createConfiguration() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),createSrc,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path createSrc() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),execute,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),getClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path getClasspath() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),getFailonerror,MethodDescriptor((): boolean),org.codehaus.groovy.ant.CompileTaskSupport{ public boolean getFailonerror() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),getSrcdir,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path getSrcdir() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),handleException,MethodDescriptor((java.lang.Exception): void),org.codehaus.groovy.ant.CompileTaskSupport{ protected void handleException(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),setClasspath,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setClasspath(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),setClasspathRef,MethodDescriptor((org.apache.tools.ant.types.Reference): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setClasspathRef(org.apache.tools.ant.types.Reference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),setDestdir,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setDestdir(java.io.File) }) => DExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),setFailonerror,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setFailonerror(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),setSrcdir,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setSrcdir(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GenerateStubsTask),validate,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ protected void validate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),<init>,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovy{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),addClassPathes,MethodDescriptor((groovy.lang.GroovyClassLoader): void),org.codehaus.groovy.ant.Groovy{ protected void addClassPathes(groovy.lang.GroovyClassLoader) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),addFileset,MethodDescriptor((org.apache.tools.ant.types.FileSet): void),org.codehaus.groovy.ant.Groovy{ public void addFileset(org.apache.tools.ant.types.FileSet) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),addText,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovy{ public void addText(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),computeScriptName,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.Groovy{ private java.lang.String computeScriptName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),configureCompiler,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovy{ private void configureCompiler() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),createArg,MethodDescriptor((): org.apache.tools.ant.types.Commandline$Argument),org.codehaus.groovy.ant.Groovy{ public org.apache.tools.ant.types.Commandline$Argument createArg() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),createClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.Groovy{ public org.apache.tools.ant.types.Path createClasspath() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),createClasspathParts,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovy{ private void createClasspathParts() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),createNewArgs,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovy{ private void createNewArgs(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),execGroovy,MethodDescriptor((java.lang.String, java.io.PrintStream): void),org.codehaus.groovy.ant.Groovy{ protected void execGroovy(java.lang.String,java.io.PrintStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),execute,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovy{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),getClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.Groovy{ public org.apache.tools.ant.types.Path getClasspath() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),getText,MethodDescriptor((java.io.BufferedReader): java.lang.String),org.codehaus.groovy.ant.Groovy{ private static java.lang.String getText(java.io.BufferedReader) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),main,MethodDescriptor((java.lang.String[]): void),org.codehaus.groovy.ant.Groovy{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),parseAndRunScript,MethodDescriptor((groovy.lang.GroovyShell, java.lang.String, java.lang.Object, java.lang.String, java.io.File, groovy.util.AntBuilder): void),org.codehaus.groovy.ant.Groovy{ private void parseAndRunScript(groovy.lang.GroovyShell,java.lang.String,java.lang.Object,java.lang.String,java.io.File,groovy.util.AntBuilder) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),printResults,MethodDescriptor((java.io.PrintStream): void),org.codehaus.groovy.ant.Groovy{ protected void printResults(java.io.PrintStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),processError,MethodDescriptor((java.lang.Exception): void),org.codehaus.groovy.ant.Groovy{ private void processError(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),runStatements,MethodDescriptor((java.io.Reader, java.io.PrintStream): void),org.codehaus.groovy.ant.Groovy{ protected void runStatements(java.io.Reader,java.io.PrintStream) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setAppend,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovy{ public void setAppend(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setClasspath,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.Groovy{ public void setClasspath(org.apache.tools.ant.types.Path) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setClasspathRef,MethodDescriptor((org.apache.tools.ant.types.Reference): void),org.codehaus.groovy.ant.Groovy{ public void setClasspathRef(org.apache.tools.ant.types.Reference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setConfigscript,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovy{ public void setConfigscript(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setContextClassLoader,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovy{ public void setContextClassLoader(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setFork,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovy{ public void setFork(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setIncludeAntRuntime,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovy{ public void setIncludeAntRuntime(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setIndy,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovy{ public void setIndy(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setOutput,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.Groovy{ public void setOutput(java.io.File) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setScriptBaseClass,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovy{ public void setScriptBaseClass(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setSrc,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.Groovy{ public void setSrc(java.io.File) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setStacktrace,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovy{ public void setStacktrace(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovy),setUseGroovyShell,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovy{ public void setUseGroovyShell(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc$1),<init>,MethodDescriptor((org.codehaus.groovy.ant.Groovyc): void),org.codehaus.groovy.ant.Groovyc$1{ void <init>(org.codehaus.groovy.ant.Groovyc) }) => Pure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc$1),loadGroovySource,MethodDescriptor((java.lang.String): java.net.URL),org.codehaus.groovy.ant.Groovyc$1{ public java.net.URL loadGroovySource(java.lang.String) }) => Pure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),<init>,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovyc{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),addConfiguredJavac,MethodDescriptor((org.apache.tools.ant.taskdefs.Javac): void),org.codehaus.groovy.ant.Groovyc{ public void addConfiguredJavac(org.apache.tools.ant.taskdefs.Javac) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),addSourceFiles,MethodDescriptor((java.util.List): void),org.codehaus.groovy.ant.Groovyc{ private void addSourceFiles(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),addToCompileList,MethodDescriptor((java.io.File[]): void),org.codehaus.groovy.ant.Groovyc{ protected void addToCompileList(java.io.File[]) }) => DExternallySideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),buildClassLoaderFor,MethodDescriptor((): groovy.lang.GroovyClassLoader),org.codehaus.groovy.ant.Groovyc{ protected groovy.lang.GroovyClassLoader buildClassLoaderFor() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),checkParameters,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovyc{ protected void checkParameters() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),compile,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovyc{ protected void compile() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),createClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.Groovyc{ public org.apache.tools.ant.types.Path createClasspath() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),createSourcepath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.Groovyc{ public org.apache.tools.ant.types.Path createSourcepath() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),createSrc,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.Groovyc{ public org.apache.tools.ant.types.Path createSrc() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),doForkCommandLineList,MethodDescriptor((java.util.List, org.apache.tools.ant.types.Path, java.lang.String): void),org.codehaus.groovy.ant.Groovyc{ private void doForkCommandLineList(java.util.List,org.apache.tools.ant.types.Path,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),doNormalCommandLineList,MethodDescriptor((java.util.List, java.util.List, org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.Groovyc{ private void doNormalCommandLineList(java.util.List,java.util.List,org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),execute,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovyc{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),extractJointOptions,MethodDescriptor((org.apache.tools.ant.types.Path): java.util.List),org.codehaus.groovy.ant.Groovyc{ private java.util.List extractJointOptions(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.Groovyc{ public org.apache.tools.ant.types.Path getClasspath() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getConfigscript,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.Groovyc{ public java.lang.String getConfigscript() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getDestdir,MethodDescriptor((): java.io.File),org.codehaus.groovy.ant.Groovyc{ public java.io.File getDestdir() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getEncoding,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.Groovyc{ public java.lang.String getEncoding() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getExecutable,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.Groovyc{ public java.lang.String getExecutable() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getFailonerror,MethodDescriptor((): boolean),org.codehaus.groovy.ant.Groovyc{ public boolean getFailonerror() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getFileList,MethodDescriptor((): java.io.File[]),org.codehaus.groovy.ant.Groovyc{ public java.io.File[] getFileList() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getForceLookupUnnamedFiles,MethodDescriptor((): boolean),org.codehaus.groovy.ant.Groovyc{ public boolean getForceLookupUnnamedFiles() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getIncludeantruntime,MethodDescriptor((): boolean),org.codehaus.groovy.ant.Groovyc{ public boolean getIncludeantruntime() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getIncludejavaruntime,MethodDescriptor((): boolean),org.codehaus.groovy.ant.Groovyc{ public boolean getIncludejavaruntime() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getIndy,MethodDescriptor((): boolean),org.codehaus.groovy.ant.Groovyc{ public boolean getIndy() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getKeepStubs,MethodDescriptor((): boolean),org.codehaus.groovy.ant.Groovyc{ public boolean getKeepStubs() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getListfiles,MethodDescriptor((): boolean),org.codehaus.groovy.ant.Groovyc{ public boolean getListfiles() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getMemoryInitialSize,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.Groovyc{ public java.lang.String getMemoryInitialSize() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getMemoryMaximumSize,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.Groovyc{ public java.lang.String getMemoryMaximumSize() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getScriptBaseClass,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.Groovyc{ public java.lang.String getScriptBaseClass() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getScriptExtension,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.Groovyc{ public java.lang.String getScriptExtension() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getScriptExtensions,MethodDescriptor((): java.util.Set),org.codehaus.groovy.ant.Groovyc{ private java.util.Set getScriptExtensions() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getSourcepath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.Groovyc{ public org.apache.tools.ant.types.Path getSourcepath() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getSrcdir,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.Groovyc{ public org.apache.tools.ant.types.Path getSrcdir() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getStubdir,MethodDescriptor((): java.io.File),org.codehaus.groovy.ant.Groovyc{ public java.io.File getStubdir() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getTargetBytecode,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.Groovyc{ public java.lang.String getTargetBytecode() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getTaskSuccess,MethodDescriptor((): boolean),org.codehaus.groovy.ant.Groovyc{ public boolean getTaskSuccess() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),getVerbose,MethodDescriptor((): boolean),org.codehaus.groovy.ant.Groovyc{ public boolean getVerbose() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),isIncludeDestClasses,MethodDescriptor((): boolean),org.codehaus.groovy.ant.Groovyc{ public boolean isIncludeDestClasses() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),listFiles,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovyc{ private void listFiles() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),loadRegisteredScriptExtensions,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovyc{ private void loadRegisteredScriptExtensions() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),makeCommandLine,MethodDescriptor((java.util.List): java.lang.String[]),org.codehaus.groovy.ant.Groovyc{ private java.lang.String[] makeCommandLine(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),makeCompileUnit,MethodDescriptor((): org.codehaus.groovy.control.CompilationUnit),org.codehaus.groovy.ant.Groovyc{ protected org.codehaus.groovy.control.CompilationUnit makeCompileUnit() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),recreateSrc,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.Groovyc{ protected org.apache.tools.ant.types.Path recreateSrc() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),resetFileLists,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovyc{ protected void resetFileLists() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),runCompiler,MethodDescriptor((java.lang.String[]): void),org.codehaus.groovy.ant.Groovyc{ private void runCompiler(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),runForked,MethodDescriptor((java.lang.String[]): void),org.codehaus.groovy.ant.Groovyc{ private void runForked(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),scanDir,MethodDescriptor((java.io.File, java.io.File, java.lang.String[]): void),org.codehaus.groovy.ant.Groovyc{ protected void scanDir(java.io.File,java.io.File,java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setClasspath,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.Groovyc{ public void setClasspath(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setClasspathRef,MethodDescriptor((org.apache.tools.ant.types.Reference): void),org.codehaus.groovy.ant.Groovyc{ public void setClasspathRef(org.apache.tools.ant.types.Reference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setConfigscript,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovyc{ public void setConfigscript(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setDestdir,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.Groovyc{ public void setDestdir(java.io.File) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setEncoding,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovyc{ public void setEncoding(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setErrorProperty,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovyc{ public void setErrorProperty(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setExecutable,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovyc{ public void setExecutable(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setFailonerror,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setFailonerror(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setForceLookupUnnamedFiles,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setForceLookupUnnamedFiles(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setFork,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setFork(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setIncludeDestClasses,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setIncludeDestClasses(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setIncludeantruntime,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setIncludeantruntime(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setIncludejavaruntime,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setIncludejavaruntime(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setIndy,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setIndy(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setJavaHome,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.Groovyc{ public void setJavaHome(java.io.File) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setKeepStubs,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setKeepStubs(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setListfiles,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setListfiles(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setMemoryInitialSize,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovyc{ public void setMemoryInitialSize(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setMemoryMaximumSize,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovyc{ public void setMemoryMaximumSize(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setProceed,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setProceed(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setScriptBaseClass,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovyc{ public void setScriptBaseClass(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setScriptExtension,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovyc{ public void setScriptExtension(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setSourcepath,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.Groovyc{ public void setSourcepath(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setSourcepathRef,MethodDescriptor((org.apache.tools.ant.types.Reference): void),org.codehaus.groovy.ant.Groovyc{ public void setSourcepathRef(org.apache.tools.ant.types.Reference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setSrcdir,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.Groovyc{ public void setSrcdir(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setStacktrace,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setStacktrace(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setStubdir,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.Groovyc{ public void setStubdir(java.io.File) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setTargetBytecode,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovyc{ public void setTargetBytecode(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setUpdatedProperty,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovyc{ public void setUpdatedProperty(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovyc),setVerbose,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovyc{ public void setVerbose(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),<init>,MethodDescriptor((): void),org.codehaus.groovy.ant.GroovycTask{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),compile,MethodDescriptor((): void),org.codehaus.groovy.ant.GroovycTask{ protected void compile() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),createClassLoader,MethodDescriptor((): groovy.lang.GroovyClassLoader),org.codehaus.groovy.ant.CompileTaskSupport{ protected groovy.lang.GroovyClassLoader createClassLoader() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),createClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path createClasspath() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),createConfiguration,MethodDescriptor((): org.codehaus.groovy.control.CompilerConfiguration),org.codehaus.groovy.ant.CompileTaskSupport{ public org.codehaus.groovy.control.CompilerConfiguration createConfiguration() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),createSrc,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path createSrc() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),execute,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),getClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path getClasspath() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),getFailonerror,MethodDescriptor((): boolean),org.codehaus.groovy.ant.CompileTaskSupport{ public boolean getFailonerror() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),getSrcdir,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path getSrcdir() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),handleException,MethodDescriptor((java.lang.Exception): void),org.codehaus.groovy.ant.CompileTaskSupport{ protected void handleException(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),setClasspath,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setClasspath(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),setClasspathRef,MethodDescriptor((org.apache.tools.ant.types.Reference): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setClasspathRef(org.apache.tools.ant.types.Reference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),setDestdir,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setDestdir(java.io.File) }) => DExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),setFailonerror,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setFailonerror(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),setForce,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.GroovycTask{ public void setForce(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),setSrcdir,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setSrcdir(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/GroovycTask),validate,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ protected void validate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc$1),<init>,MethodDescriptor((org.codehaus.groovy.ant.Groovydoc): void),org.codehaus.groovy.ant.Groovydoc$1{ void <init>(org.codehaus.groovy.ant.Groovydoc) }) => Pure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc$1),accept,MethodDescriptor((java.io.File, java.lang.String): boolean),org.codehaus.groovy.ant.Groovydoc$1{ public boolean accept(java.io.File,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),<init>,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovydoc{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),access$000,MethodDescriptor((org.codehaus.groovy.ant.Groovydoc): boolean),org.codehaus.groovy.ant.Groovydoc{ static boolean access$000(org.codehaus.groovy.ant.Groovydoc) }) => DSideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),access$100,MethodDescriptor((org.codehaus.groovy.ant.Groovydoc): java.lang.String),org.codehaus.groovy.ant.Groovydoc{ static java.lang.String access$100(org.codehaus.groovy.ant.Groovydoc) }) => DSideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),checkScopeProperties,MethodDescriptor((java.util.Properties): void),org.codehaus.groovy.ant.Groovydoc{ private void checkScopeProperties(java.util.Properties) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),createLink,MethodDescriptor((): org.codehaus.groovy.tools.groovydoc.LinkArgument),org.codehaus.groovy.ant.Groovydoc{ public org.codehaus.groovy.tools.groovydoc.LinkArgument createLink() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),execute,MethodDescriptor((): void),org.codehaus.groovy.ant.Groovydoc{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),getClassTemplates,MethodDescriptor((): java.lang.String[]),org.codehaus.groovy.ant.Groovydoc{ protected java.lang.String[] getClassTemplates() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),getDocTemplates,MethodDescriptor((): java.lang.String[]),org.codehaus.groovy.ant.Groovydoc{ protected java.lang.String[] getDocTemplates() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),getPackageTemplates,MethodDescriptor((): java.lang.String[]),org.codehaus.groovy.ant.Groovydoc{ protected java.lang.String[] getPackageTemplates() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),parsePackages,MethodDescriptor((java.util.List, org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.Groovydoc{ private void parsePackages(java.util.List,org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setAccess,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovydoc{ public void setAccess(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setAuthor,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovydoc{ public void setAuthor(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setCharset,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovydoc{ public void setCharset(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setDestdir,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.Groovydoc{ public void setDestdir(java.io.File) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setDoctitle,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovydoc{ public void setDoctitle(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setExtensions,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovydoc{ public void setExtensions(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setFileEncoding,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovydoc{ public void setFileEncoding(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setFooter,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovydoc{ public void setFooter(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setHeader,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovydoc{ public void setHeader(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setIncludeMainForScripts,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovydoc{ public void setIncludeMainForScripts(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setOverview,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.Groovydoc{ public void setOverview(java.io.File) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setPackage,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovydoc{ public void setPackage(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setPackagenames,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovydoc{ public void setPackagenames(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setPrivate,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovydoc{ public void setPrivate(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setProcessScripts,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovydoc{ public void setProcessScripts(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setProtected,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovydoc{ public void setProtected(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setPublic,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovydoc{ public void setPublic(boolean) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setSourcepath,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.Groovydoc{ public void setSourcepath(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setStyleSheetFile,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.Groovydoc{ public void setStyleSheetFile(java.io.File) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setUse,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.Groovydoc{ public void setUse(boolean) }) => Pure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/Groovydoc),setWindowtitle,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.Groovydoc{ public void setWindowtitle(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/LoggingHelper),<clinit>,MethodDescriptor((): void),org.codehaus.groovy.ant.LoggingHelper{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/LoggingHelper),<init>,MethodDescriptor((org.apache.tools.ant.Task): void),org.codehaus.groovy.ant.LoggingHelper{ public void <init>(org.apache.tools.ant.Task) }) => DPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/LoggingHelper),debug,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.LoggingHelper{ public void debug(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/LoggingHelper),error,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.LoggingHelper{ public void error(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/LoggingHelper),error,MethodDescriptor((java.lang.String, java.lang.Throwable): void),org.codehaus.groovy.ant.LoggingHelper{ public void error(java.lang.String,java.lang.Throwable) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/LoggingHelper),info,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.LoggingHelper{ public void info(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/LoggingHelper),verbose,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.LoggingHelper{ public void verbose(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/LoggingHelper),warn,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.LoggingHelper{ public void warn(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/RootLoaderRef),<init>,MethodDescriptor((): void),org.codehaus.groovy.ant.RootLoaderRef{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/RootLoaderRef),createClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.RootLoaderRef{ public org.apache.tools.ant.types.Path createClasspath() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/RootLoaderRef),execute,MethodDescriptor((): void),org.codehaus.groovy.ant.RootLoaderRef{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/RootLoaderRef),makeRoot,MethodDescriptor((): org.codehaus.groovy.tools.RootLoader),org.codehaus.groovy.ant.RootLoaderRef{ private org.codehaus.groovy.tools.RootLoader makeRoot() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/RootLoaderRef),setClasspath,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.RootLoaderRef{ public void setClasspath(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/RootLoaderRef),setClasspathRef,MethodDescriptor((org.apache.tools.ant.types.Reference): void),org.codehaus.groovy.ant.RootLoaderRef{ public void setClasspathRef(org.apache.tools.ant.types.Reference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/RootLoaderRef),setRef,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.RootLoaderRef{ public void setRef(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),<init>,MethodDescriptor((org.codehaus.groovy.ant.UberCompileTask): void),org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter{ private void <init>(org.codehaus.groovy.ant.UberCompileTask) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),<init>,MethodDescriptor((org.codehaus.groovy.ant.UberCompileTask, org.codehaus.groovy.ant.UberCompileTask$1): void),org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter{ void <init>(org.codehaus.groovy.ant.UberCompileTask,org.codehaus.groovy.ant.UberCompileTask$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),compile,MethodDescriptor((): void),org.codehaus.groovy.ant.GenerateStubsTask{ protected void compile() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),createClassLoader,MethodDescriptor((): groovy.lang.GroovyClassLoader),org.codehaus.groovy.ant.CompileTaskSupport{ protected groovy.lang.GroovyClassLoader createClassLoader() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),createClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path createClasspath() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),createConfiguration,MethodDescriptor((): org.codehaus.groovy.control.CompilerConfiguration),org.codehaus.groovy.ant.CompileTaskSupport{ public org.codehaus.groovy.control.CompilerConfiguration createConfiguration() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),createSrc,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path createSrc() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),execute,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),getClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path getClasspath() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),getFailonerror,MethodDescriptor((): boolean),org.codehaus.groovy.ant.CompileTaskSupport{ public boolean getFailonerror() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),getFileSet,MethodDescriptor((): org.apache.tools.ant.types.FileSet),org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter{ public org.apache.tools.ant.types.FileSet getFileSet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),getSrcdir,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path getSrcdir() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),getTaskName,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter{ public java.lang.String getTaskName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),handleException,MethodDescriptor((java.lang.Exception): void),org.codehaus.groovy.ant.CompileTaskSupport{ protected void handleException(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),setClasspath,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setClasspath(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),setClasspathRef,MethodDescriptor((org.apache.tools.ant.types.Reference): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setClasspathRef(org.apache.tools.ant.types.Reference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),setDestdir,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setDestdir(java.io.File) }) => DExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),setFailonerror,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setFailonerror(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),setSrcdir,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setSrcdir(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GenStubsAdapter),validate,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ protected void validate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),<init>,MethodDescriptor((org.codehaus.groovy.ant.UberCompileTask): void),org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter{ private void <init>(org.codehaus.groovy.ant.UberCompileTask) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),<init>,MethodDescriptor((org.codehaus.groovy.ant.UberCompileTask, org.codehaus.groovy.ant.UberCompileTask$1): void),org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter{ void <init>(org.codehaus.groovy.ant.UberCompileTask,org.codehaus.groovy.ant.UberCompileTask$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),compile,MethodDescriptor((): void),org.codehaus.groovy.ant.GroovycTask{ protected void compile() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),createClassLoader,MethodDescriptor((): groovy.lang.GroovyClassLoader),org.codehaus.groovy.ant.CompileTaskSupport{ protected groovy.lang.GroovyClassLoader createClassLoader() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),createClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path createClasspath() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),createConfiguration,MethodDescriptor((): org.codehaus.groovy.control.CompilerConfiguration),org.codehaus.groovy.ant.CompileTaskSupport{ public org.codehaus.groovy.control.CompilerConfiguration createConfiguration() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),createSrc,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path createSrc() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),execute,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),getClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path getClasspath() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),getFailonerror,MethodDescriptor((): boolean),org.codehaus.groovy.ant.CompileTaskSupport{ public boolean getFailonerror() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),getFileSet,MethodDescriptor((): org.apache.tools.ant.types.FileSet),org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter{ public org.apache.tools.ant.types.FileSet getFileSet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),getSrcdir,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.CompileTaskSupport{ public org.apache.tools.ant.types.Path getSrcdir() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),getTaskName,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter{ public java.lang.String getTaskName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),handleException,MethodDescriptor((java.lang.Exception): void),org.codehaus.groovy.ant.CompileTaskSupport{ protected void handleException(java.lang.Exception) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),setClasspath,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setClasspath(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),setClasspathRef,MethodDescriptor((org.apache.tools.ant.types.Reference): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setClasspathRef(org.apache.tools.ant.types.Reference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),setDestdir,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setDestdir(java.io.File) }) => DExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),setFailonerror,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setFailonerror(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),setForce,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.GroovycTask{ public void setForce(boolean) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),setSrcdir,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.CompileTaskSupport{ public void setSrcdir(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$GroovycAdapter),validate,MethodDescriptor((): void),org.codehaus.groovy.ant.CompileTaskSupport{ protected void validate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$JavacAdapter),<init>,MethodDescriptor((org.codehaus.groovy.ant.UberCompileTask): void),org.codehaus.groovy.ant.UberCompileTask$JavacAdapter{ private void <init>(org.codehaus.groovy.ant.UberCompileTask) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$JavacAdapter),<init>,MethodDescriptor((org.codehaus.groovy.ant.UberCompileTask, org.codehaus.groovy.ant.UberCompileTask$1): void),org.codehaus.groovy.ant.UberCompileTask$JavacAdapter{ void <init>(org.codehaus.groovy.ant.UberCompileTask,org.codehaus.groovy.ant.UberCompileTask$1) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$JavacAdapter),getFileSet,MethodDescriptor((): org.apache.tools.ant.types.FileSet),org.codehaus.groovy.ant.UberCompileTask$JavacAdapter{ public org.apache.tools.ant.types.FileSet getFileSet() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask$JavacAdapter),getTaskName,MethodDescriptor((): java.lang.String),org.codehaus.groovy.ant.UberCompileTask$JavacAdapter{ public java.lang.String getTaskName() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),<clinit>,MethodDescriptor((): void),org.codehaus.groovy.ant.UberCompileTask{ static void <clinit>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),<init>,MethodDescriptor((): void),org.codehaus.groovy.ant.UberCompileTask{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),createClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.UberCompileTask{ public org.apache.tools.ant.types.Path createClasspath() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),createGeneratestubs,MethodDescriptor((): org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter),org.codehaus.groovy.ant.UberCompileTask{ public org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter createGeneratestubs() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),createGroovyc,MethodDescriptor((): org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter),org.codehaus.groovy.ant.UberCompileTask{ public org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter createGroovyc() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),createJavac,MethodDescriptor((): org.codehaus.groovy.ant.UberCompileTask$JavacAdapter),org.codehaus.groovy.ant.UberCompileTask{ public org.codehaus.groovy.ant.UberCompileTask$JavacAdapter createJavac() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),createSrc,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.UberCompileTask{ public org.apache.tools.ant.types.Path createSrc() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),createTempDir,MethodDescriptor((): java.io.File),org.codehaus.groovy.ant.UberCompileTask{ private java.io.File createTempDir() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),execute,MethodDescriptor((): void),org.codehaus.groovy.ant.UberCompileTask{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),getClasspath,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.UberCompileTask{ public org.apache.tools.ant.types.Path getClasspath() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),getSrcdir,MethodDescriptor((): org.apache.tools.ant.types.Path),org.codehaus.groovy.ant.UberCompileTask{ public org.apache.tools.ant.types.Path getSrcdir() }) => SideEffectFree
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),setClasspath,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.UberCompileTask{ public void setClasspath(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),setClasspathRef,MethodDescriptor((org.apache.tools.ant.types.Reference): void),org.codehaus.groovy.ant.UberCompileTask{ public void setClasspathRef(org.apache.tools.ant.types.Reference) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),setDestdir,MethodDescriptor((java.io.File): void),org.codehaus.groovy.ant.UberCompileTask{ public void setDestdir(java.io.File) }) => DExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),setSrcdir,MethodDescriptor((org.apache.tools.ant.types.Path): void),org.codehaus.groovy.ant.UberCompileTask{ public void setSrcdir(org.apache.tools.ant.types.Path) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/UberCompileTask),validate,MethodDescriptor((): void),org.codehaus.groovy.ant.UberCompileTask{ protected void validate() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/VerifyClass$1),<init>,MethodDescriptor((org.codehaus.groovy.ant.VerifyClass): void),org.codehaus.groovy.ant.VerifyClass$1{ void <init>(org.codehaus.groovy.ant.VerifyClass) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/VerifyClass$1),visitEnd,MethodDescriptor((): void),org.codehaus.groovy.ant.VerifyClass$1{ public void visitEnd() }) => Pure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/VerifyClass),<init>,MethodDescriptor((): void),org.codehaus.groovy.ant.VerifyClass{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/VerifyClass),execute,MethodDescriptor((): void),org.codehaus.groovy.ant.VerifyClass{ public void execute() }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/VerifyClass),execute,MethodDescriptor((java.io.File): int),org.codehaus.groovy.ant.VerifyClass{ private int execute(java.io.File) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/VerifyClass),readClass,MethodDescriptor((java.lang.String): boolean),org.codehaus.groovy.ant.VerifyClass{ private boolean readClass(java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(org/codehaus/groovy/ant/VerifyClass),setDir,MethodDescriptor((java.lang.String): void),org.codehaus.groovy.ant.VerifyClass{ public void setDir(java.lang.String) }) => ExternallyPure
DefinedMethod(ObjectType(org/codehaus/groovy/ant/VerifyClass),setVerbose,MethodDescriptor((boolean): void),org.codehaus.groovy.ant.VerifyClass{ public void setVerbose(boolean) }) => ExternallyPure
