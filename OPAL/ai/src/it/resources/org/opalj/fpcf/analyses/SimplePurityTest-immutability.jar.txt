DefinedMethod(ObjectType(immutability/ArrayPassedViaConstructor),<init>,MethodDescriptor((int[]): void),immutability.ArrayPassedViaConstructor{ public void <init>(int[]) }) => Pure
DefinedMethod(ObjectType(immutability/ArrayPassedViaConstructor),getElement,MethodDescriptor((int): int),immutability.ArrayPassedViaConstructor{ public int getElement(int) }) => DSideEffectFree
DefinedMethod(ObjectType(immutability/ClonePassedArray),<init>,MethodDescriptor((int[]): void),immutability.ClonePassedArray{ public void <init>(int[]) }) => DSideEffectFree
DefinedMethod(ObjectType(immutability/ClonePassedArray),getArray,MethodDescriptor((): int[]),immutability.ClonePassedArray{ public int[] getArray() }) => DSideEffectFree
DefinedMethod(ObjectType(immutability/ClonePassedObject),<init>,MethodDescriptor((immutability.helperclasses.MutableClass): void),immutability.ClonePassedObject{ public void <init>(immutability.helperclasses.MutableClass) }) => ImpureByAnalysis
DefinedMethod(ObjectType(immutability/ClonePassedObject),getReference,MethodDescriptor((): immutability.helperclasses.MutableClass),immutability.ClonePassedObject{ public immutability.helperclasses.MutableClass getReference() }) => ImpureByAnalysis
DefinedMethod(ObjectType(immutability/ExtendImmutableClass),<init>,MethodDescriptor((): void),immutability.ExtendImmutableClass{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/ExtendImmutableClass),getX,MethodDescriptor((): int),immutability.helperclasses.ImmutableClass{ public int getX() }) => Pure
DefinedMethod(ObjectType(immutability/ExtendImmutableClass),getY,MethodDescriptor((): int),immutability.ExtendImmutableClass{ public int getY() }) => SideEffectFree
DefinedMethod(ObjectType(immutability/ExtendMutableClass),<init>,MethodDescriptor((): void),immutability.ExtendMutableClass{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/FinalPrivatePrimitiveType),<init>,MethodDescriptor((): void),immutability.FinalPrivatePrimitiveType{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/FinalPrivatePrimitiveType),getX,MethodDescriptor((): int),immutability.FinalPrivatePrimitiveType{ public int getX() }) => Pure
DefinedMethod(ObjectType(immutability/FinalPublicArray),<init>,MethodDescriptor((): void),immutability.FinalPublicArray{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/FinalPublicImmutableObject),<init>,MethodDescriptor((): void),immutability.FinalPublicImmutableObject{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/FinalPublicMutableObject),<init>,MethodDescriptor((): void),immutability.FinalPublicMutableObject{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/FinalPublicPrimitiveType),<init>,MethodDescriptor((): void),immutability.FinalPublicPrimitiveType{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/ImmutableClassWithNativeMethod),<init>,MethodDescriptor((int): void),immutability.ImmutableClassWithNativeMethod{ public void <init>(int) }) => Pure
DefinedMethod(ObjectType(immutability/ImmutableClassWithNativeMethod),getX,MethodDescriptor((): int),immutability.ImmutableClassWithNativeMethod{ public int getX() }) => SideEffectFree
DefinedMethod(ObjectType(immutability/ImmutableRecursiveDataStructure),<init>,MethodDescriptor((immutability.helperclasses.ImmutableClass, immutability.ImmutableRecursiveDataStructure, immutability.ImmutableRecursiveDataStructure): void),immutability.ImmutableRecursiveDataStructure{ public void <init>(immutability.helperclasses.ImmutableClass,immutability.ImmutableRecursiveDataStructure,immutability.ImmutableRecursiveDataStructure) }) => Pure
DefinedMethod(ObjectType(immutability/IndirectSetterForPrivateField),<init>,MethodDescriptor((int): void),immutability.IndirectSetterForPrivateField{ public void <init>(int) }) => Pure
DefinedMethod(ObjectType(immutability/IndirectSetterForPrivateField),changeX,MethodDescriptor((): void),immutability.IndirectSetterForPrivateField{ private void changeX() }) => ExternallyPure
DefinedMethod(ObjectType(immutability/IndirectSetterForPrivateField),doSomething,MethodDescriptor((): void),immutability.IndirectSetterForPrivateField{ public void doSomething() }) => ExternallyPure
DefinedMethod(ObjectType(immutability/IndirectSetterForPrivateField),getX,MethodDescriptor((): int),immutability.IndirectSetterForPrivateField{ public int getX() }) => SideEffectFree
DefinedMethod(ObjectType(immutability/LazyInitField),<init>,MethodDescriptor((): void),immutability.LazyInitField{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/LazyInitField),getXAsString,MethodDescriptor((): java.lang.String),immutability.LazyInitField{ public java.lang.String getXAsString() }) => ImpureByAnalysis
DefinedMethod(ObjectType(immutability/MutableRecursiveDataStructure),<init>,MethodDescriptor((immutability.helperclasses.MutableClass, immutability.MutableRecursiveDataStructure, immutability.MutableRecursiveDataStructure): void),immutability.MutableRecursiveDataStructure{ public void <init>(immutability.helperclasses.MutableClass,immutability.MutableRecursiveDataStructure,immutability.MutableRecursiveDataStructure) }) => Pure
DefinedMethod(ObjectType(immutability/NonFinalPrivateSetter),<init>,MethodDescriptor((): void),immutability.NonFinalPrivateSetter{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/NonFinalPrivateSetter),getObject,MethodDescriptor((): immutability.helperclasses.ImmutableClass),immutability.NonFinalPrivateSetter{ public immutability.helperclasses.ImmutableClass getObject() }) => SideEffectFree
DefinedMethod(ObjectType(immutability/NonFinalPrivateSetter),setName,MethodDescriptor((immutability.helperclasses.ImmutableClass): void),immutability.NonFinalPrivateSetter{ public void setName(immutability.helperclasses.ImmutableClass) }) => ExternallyPure
DefinedMethod(ObjectType(immutability/NonFinalPublicClass),<init>,MethodDescriptor((): void),immutability.NonFinalPublicClass{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassMutatePrivateObject$InnerClass),<init>,MethodDescriptor((immutability.NonStaticInnerClassMutatePrivateObject): void),immutability.NonStaticInnerClassMutatePrivateObject$InnerClass{ public void <init>(immutability.NonStaticInnerClassMutatePrivateObject) }) => Pure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassMutatePrivateObject$InnerClass),doSomething,MethodDescriptor((): void),immutability.NonStaticInnerClassMutatePrivateObject$InnerClass{ public void doSomething() }) => ImpureByAnalysis
DefinedMethod(ObjectType(immutability/NonStaticInnerClassMutatePrivateObject),<init>,MethodDescriptor((): void),immutability.NonStaticInnerClassMutatePrivateObject{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassMutatePrivateObject),access$0,MethodDescriptor((immutability.NonStaticInnerClassMutatePrivateObject): immutability.helperclasses.MutableClass),immutability.NonStaticInnerClassMutatePrivateObject{ static immutability.helperclasses.MutableClass access$0(immutability.NonStaticInnerClassMutatePrivateObject) }) => DSideEffectFree
DefinedMethod(ObjectType(immutability/NonStaticInnerClassMutatePrivatePrimitive$InnerClass),<init>,MethodDescriptor((immutability.NonStaticInnerClassMutatePrivatePrimitive): void),immutability.NonStaticInnerClassMutatePrivatePrimitive$InnerClass{ public void <init>(immutability.NonStaticInnerClassMutatePrivatePrimitive) }) => Pure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassMutatePrivatePrimitive$InnerClass),setX,MethodDescriptor((int): void),immutability.NonStaticInnerClassMutatePrivatePrimitive$InnerClass{ public void setX(int) }) => ImpureByAnalysis
DefinedMethod(ObjectType(immutability/NonStaticInnerClassMutatePrivatePrimitive),<init>,MethodDescriptor((int): void),immutability.NonStaticInnerClassMutatePrivatePrimitive{ public void <init>(int) }) => Pure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassMutatePrivatePrimitive),access$0,MethodDescriptor((immutability.NonStaticInnerClassMutatePrivatePrimitive, int): void),immutability.NonStaticInnerClassMutatePrivatePrimitive{ static void access$0(immutability.NonStaticInnerClassMutatePrivatePrimitive,int) }) => DContextuallyPure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassMutatePrivatePrimitive),getX,MethodDescriptor((): int),immutability.NonStaticInnerClassMutatePrivatePrimitive{ public int getX() }) => SideEffectFree
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnImmutableObject$InnerClass),<init>,MethodDescriptor((immutability.NonStaticInnerClassReturnImmutableObject): void),immutability.NonStaticInnerClassReturnImmutableObject$InnerClass{ public void <init>(immutability.NonStaticInnerClassReturnImmutableObject) }) => Pure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnImmutableObject$InnerClass),getObject,MethodDescriptor((): immutability.helperclasses.ImmutableClass),immutability.NonStaticInnerClassReturnImmutableObject$InnerClass{ public immutability.helperclasses.ImmutableClass getObject() }) => DSideEffectFree
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnImmutableObject),<init>,MethodDescriptor((): void),immutability.NonStaticInnerClassReturnImmutableObject{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnImmutableObject),access$0,MethodDescriptor((immutability.NonStaticInnerClassReturnImmutableObject): immutability.helperclasses.ImmutableClass),immutability.NonStaticInnerClassReturnImmutableObject{ static immutability.helperclasses.ImmutableClass access$0(immutability.NonStaticInnerClassReturnImmutableObject) }) => DSideEffectFree
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnObject$InnerClass),<init>,MethodDescriptor((immutability.NonStaticInnerClassReturnObject): void),immutability.NonStaticInnerClassReturnObject$InnerClass{ public void <init>(immutability.NonStaticInnerClassReturnObject) }) => Pure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnObject$InnerClass),getObject,MethodDescriptor((): immutability.helperclasses.MutableClass),immutability.NonStaticInnerClassReturnObject$InnerClass{ public immutability.helperclasses.MutableClass getObject() }) => DSideEffectFree
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnObject),<init>,MethodDescriptor((): void),immutability.NonStaticInnerClassReturnObject{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnObject),access$0,MethodDescriptor((immutability.NonStaticInnerClassReturnObject): immutability.helperclasses.MutableClass),immutability.NonStaticInnerClassReturnObject{ static immutability.helperclasses.MutableClass access$0(immutability.NonStaticInnerClassReturnObject) }) => DSideEffectFree
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnObjectClone$InnerClass),<init>,MethodDescriptor((immutability.NonStaticInnerClassReturnObjectClone): void),immutability.NonStaticInnerClassReturnObjectClone$InnerClass{ public void <init>(immutability.NonStaticInnerClassReturnObjectClone) }) => Pure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnObjectClone$InnerClass),getObject,MethodDescriptor((): immutability.helperclasses.MutableClass),immutability.NonStaticInnerClassReturnObjectClone$InnerClass{ public immutability.helperclasses.MutableClass getObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnObjectClone),<init>,MethodDescriptor((): void),immutability.NonStaticInnerClassReturnObjectClone{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/NonStaticInnerClassReturnObjectClone),access$0,MethodDescriptor((immutability.NonStaticInnerClassReturnObjectClone): immutability.helperclasses.MutableClass),immutability.NonStaticInnerClassReturnObjectClone{ static immutability.helperclasses.MutableClass access$0(immutability.NonStaticInnerClassReturnObjectClone) }) => DSideEffectFree
DefinedMethod(ObjectType(immutability/PrivateImmutableObject),<init>,MethodDescriptor((): void),immutability.PrivateImmutableObject{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/PrivateImmutableObject),getObject,MethodDescriptor((): immutability.helperclasses.ImmutableClass),immutability.PrivateImmutableObject{ public immutability.helperclasses.ImmutableClass getObject() }) => SideEffectFree
DefinedMethod(ObjectType(immutability/ReferenceImmutableObjectPassedViaConstructor),<init>,MethodDescriptor((immutability.helperclasses.ImmutableClass): void),immutability.ReferenceImmutableObjectPassedViaConstructor{ public void <init>(immutability.helperclasses.ImmutableClass) }) => Pure
DefinedMethod(ObjectType(immutability/ReferenceImmutableObjectPassedViaConstructor),getObject,MethodDescriptor((): immutability.helperclasses.ImmutableClass),immutability.ReferenceImmutableObjectPassedViaConstructor{ public immutability.helperclasses.ImmutableClass getObject() }) => SideEffectFree
DefinedMethod(ObjectType(immutability/ReferenceMutableObjectPassedViaConstructor),<init>,MethodDescriptor((immutability.helperclasses.MutableClass): void),immutability.ReferenceMutableObjectPassedViaConstructor{ public void <init>(immutability.helperclasses.MutableClass) }) => Pure
DefinedMethod(ObjectType(immutability/ReferenceMutableObjectPassedViaConstructor),getObject,MethodDescriptor((): immutability.helperclasses.MutableClass),immutability.ReferenceMutableObjectPassedViaConstructor{ public immutability.helperclasses.MutableClass getObject() }) => ImpureByAnalysis
DefinedMethod(ObjectType(immutability/ReturnNonCloneArray),<init>,MethodDescriptor((): void),immutability.ReturnNonCloneArray{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/ReturnNonCloneArray),getArray,MethodDescriptor((): int[]),immutability.ReturnNonCloneArray{ public int[] getArray() }) => SideEffectFree
DefinedMethod(ObjectType(immutability/ThrowException),<init>,MethodDescriptor((): void),immutability.ThrowException{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/ThrowException),getOne,MethodDescriptor((): int),immutability.ThrowException{ public int getOne() }) => DExternallySideEffectFree
DefinedMethod(ObjectType(immutability/VolatileFieldClass),<init>,MethodDescriptor((): void),immutability.VolatileFieldClass{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/VolatileFieldClass),getX,MethodDescriptor((): int),immutability.VolatileFieldClass{ public int getX() }) => SideEffectFree
DefinedMethod(ObjectType(immutability/helperclasses/AbstractImmutableClass),<init>,MethodDescriptor((): void),immutability.helperclasses.AbstractImmutableClass{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/helperclasses/AbstractImmutableClass),<init>,MethodDescriptor((int): void),immutability.helperclasses.AbstractImmutableClass{ public void <init>(int) }) => Pure
DefinedMethod(ObjectType(immutability/helperclasses/AbstractImmutableClass),getX,MethodDescriptor((): int),immutability.helperclasses.AbstractImmutableClass{ public int getX() }) => SideEffectFree
DefinedMethod(ObjectType(immutability/helperclasses/ImmutableClass),<init>,MethodDescriptor((): void),immutability.helperclasses.ImmutableClass{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/helperclasses/ImmutableClass),getX,MethodDescriptor((): int),immutability.helperclasses.ImmutableClass{ public int getX() }) => Pure
DefinedMethod(ObjectType(immutability/helperclasses/MutableClass),<init>,MethodDescriptor((): void),immutability.helperclasses.MutableClass{ public void <init>() }) => Pure
DefinedMethod(ObjectType(immutability/helperclasses/MutableClass),clone,MethodDescriptor((): immutability.helperclasses.MutableClass),immutability.helperclasses.MutableClass{ public immutability.helperclasses.MutableClass clone() }) => Pure
DefinedMethod(ObjectType(immutability/helperclasses/MutableClass),clone,MethodDescriptor((): java.lang.Object),immutability.helperclasses.MutableClass{ public java.lang.Object clone() }) => ImpureByAnalysis
