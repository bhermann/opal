DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/Calculation),<init>,MethodDescriptor((de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine, de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.Counter, java.lang.String): void),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.Calculation{ public void <init>(de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine,de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.Counter,java.lang.String) }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/Calculation),a,MethodDescriptor((long, long): long),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.Calculation{ public long a(long,long) }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/Calculation),run,MethodDescriptor((): void),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.Calculation{ public void run() }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/Calculator),<init>,MethodDescriptor((): void),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.Calculator{ public void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/Calculator),main,MethodDescriptor((java.lang.String[]): void),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.Calculator{ public static void main(java.lang.String[]) }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/CommandLine$1),<init>,MethodDescriptor((de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine): void),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine$1{ void <init>(de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine) }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/CommandLine$1),windowClosing,MethodDescriptor((java.awt.event.WindowEvent): void),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine$1{ public void windowClosing(java.awt.event.WindowEvent) }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/CommandLine),<init>,MethodDescriptor((java.util.List): void),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine{ public void <init>(java.util.List) }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/CommandLine),access$000,MethodDescriptor((de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine): java.util.List),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine{ static java.util.List access$000(de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine) }) => DSideEffectFree
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/CommandLine),print,MethodDescriptor((java.lang.Object): void),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine{ public void print(java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/CommandLine),printResult,MethodDescriptor((java.lang.String, java.lang.Object): void),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine{ public void printResult(java.lang.String,java.lang.Object) }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/CommandLine),readExpression,MethodDescriptor((): java.lang.String),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.CommandLine{ public java.lang.String readExpression() }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/Counter),<init>,MethodDescriptor((): void),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.Counter{ void <init>() }) => ImpureByAnalysis
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/Counter),get,MethodDescriptor((): long),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.Counter{ public long get() }) => ExternallySideEffectFree
DefinedMethod(ObjectType(de/michaeleichberg/multihtreadedprogramming/v2Beta4Thread/Counter),increment,MethodDescriptor((): void),de.michaeleichberg.multihtreadedprogramming.v2Beta4Thread.Counter{ public void increment() }) => ExternallySideEffectFree
