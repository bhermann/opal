<?xml version="1.0" encoding="UTF-8"?>
<scalastyle>
  <name>Scalastyle OPAL Configuration</name>
  <!-- CANDIDATES -->
  <check level="error" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.file.NewLineAtEofChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.scalariform.IfBraceChecker" enabled="false">
    <parameters>
      <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
      <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="false">
    <parameters>
      <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
    </parameters>
  </check>
  <check enabled="false" class="org.scalastyle.scalariform.BlockImportChecker" level="error"/>
  <check enabled="false" class="org.scalastyle.scalariform.ImportOrderChecker" level="error">
    <parameters>
      <parameter name="groups">scala_lang,java,scala,others,opalj</parameter>
      <parameter name="group.scala_lang">scala\.language\..+</parameter>
      <parameter name="group.java">javax?\..+</parameter>
      <parameter name="group.scala">scala\..+</parameter>
      <parameter name="group.others">^(org.opalj).+</parameter>
      <parameter name="group.others">org.opalj\..+</parameter>
    </parameters>
  </check>  
  <!-- ENABLED CHECKERS -->  
  <check level="error" class="org.scalastyle.file.FileTabChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.file.HeaderMatchesChecker" enabled="true">
    <parameters>
      <parameter name="header"><![CDATA[/* BSD 2-Clause License - see OPAL/LICENSE for details. */]]></parameter>
    </parameters>
  </check>
  <check enabled="true" class="org.scalastyle.scalariform.EmptyClassChecker" level="error"/>
  <check level="error" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"/>  
  <!-- DISABLED CHECKERS -->    
  <check level="error" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.file.FileLineLengthChecker" enabled="false">
    <parameters>
      <parameter name="maxLineLength"><![CDATA[100]]></parameter>
      <parameter name="tabSize"><![CDATA[4]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="false">
    <parameters>
      <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="false">
    <parameters>
      <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="false">
    <parameters>
      <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="false">
    <parameters>
      <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="false">
    <parameters>
      <parameter name="maxParameters"><![CDATA[8]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.ReturnChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.scalariform.NullChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.scalariform.NoCloneChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.file.RegexChecker" enabled="false">
    <parameters>
      <parameter name="regex"><![CDATA[println]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="false">
    <parameters>
      <parameter name="maxTypes"><![CDATA[30]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="false">
    <parameters>
      <parameter name="maximum"><![CDATA[10]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="false">
    <parameters>
      <parameter name="maxLength"><![CDATA[50]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="false">
    <parameters>
      <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="false">
    <parameters>
      <parameter name="maxMethods"><![CDATA[30]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.file.FileLengthChecker" enabled="false">
    <parameters>
      <parameter name="maxFileLength"><![CDATA[800]]></parameter>
    </parameters>
  </check>
  
</scalastyle>
